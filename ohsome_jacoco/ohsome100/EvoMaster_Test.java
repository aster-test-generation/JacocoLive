import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-04-23T01:17:05.207950-04:00[America/Kentucky/Monticello]
 * <br>
*  The generated test suite contains 1127 tests
 * <br>
*  Covered targets: 4765
 * <br>
*  Used time: 1h 20m 49s
 * <br>
*  Needed budget for current results: 100%
 * <br>
*  
*/
public class EvoMaster_Test {

    
    private static String baseUrlOfSut = "http://localhost:8080/";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    /**
    * Calls:
    * (null) POST:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_0() throws Exception {
        
        try{
            given().accept("*/*")
                    .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                        "bpolys=GIMJ46LnY0&" + 
                        "filter=jFvKsvYUA2hw&" + 
                        "format=Y&" + 
                        "showMetadata=");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (null) POST:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1() throws Exception {
        
        try{
            given().accept("*/*")
                    .post(baseUrlOfSut + "/users/count/groupBy/type?bboxes=8.67%2C49.39%2C8.71%2C49.42");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (null) POST:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_2() throws Exception {
        
        try{
            given().accept("*/*")
                    .post(baseUrlOfSut + "/users/count/density?bboxes=8.67%2C49.39%2C8.71%2C49.42");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (null) POST:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_3() throws Exception {
        
        try{
            given().accept("*/*")
                    .post(baseUrlOfSut + "/contributions/count?bboxes=8.67%2C49.39%2C8.71%2C49.42");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (null) POST:/users/count
    */
    @Test(timeout = 60000)
    public void test_4() throws Exception {
        
        try{
            given().accept("*/*")
                    .post(baseUrlOfSut + "/users/count?" + 
                        "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                        "bpolys=&" + 
                        "timeout=100.0");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (null) POST:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_5() throws Exception {
        
        try{
            given().accept("*/*")
                    .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                        "bcircles=b&" + 
                        "bpolys=FTZIX&" + 
                        "filter=GV&" + 
                        "format=Ne&" + 
                        "groupByKey=CSp5cGb8pm4w&" + 
                        "showMetadata=cKyGt14sBY0v&" + 
                        "timeout=100.0");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (null) POST:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_6() throws Exception {
        
        try{
            given().accept("*/*")
                    .post(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                        "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                        "bpolys=&" + 
                        "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                        "timeout=100.0");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (null) POST:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_7() throws Exception {
        
        try{
            given().accept("*/*")
                    .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                        "bpolys=vBuCZyoRWtn56F&" + 
                        "groupByKey=hBrXT3J_s&" + 
                        "groupByValues=687909.51&" + 
                        "showMetadata=1O_WG9g9d_6L9X&" + 
                        "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                        "timeout=Bnjj");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (null) POST:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_8() throws Exception {
        
        try{
            given().accept("*/*")
                    .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                        "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                        "groupByKey=uoF");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/key
    * 2 - (400) POST:/users/count/groupBy/key
    * 3 - (null) POST:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_9() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "contributionType=a7iHGDWkHcvdNGh_&" + 
                    "format=6SNvoDr&" + 
                    "groupByKeys=QqQ8ELsM&" + 
                    "showMetadata=_jqQQv6Fmqki7H7q&" + 
                    "time=MultiPolygon&" + 
                    "timeout=kOPU84tLg")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=w&" + 
                    "contributionType=&" + 
                    "format=json&" + 
                    "groupByKeys=5EL5cqpaD_X&" + 
                    "time=zPv&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        try{
            given().accept("*/*")
                    .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                        "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                        "groupByKeys=SEX");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/boundary
    * 2 - (400) POST:/users/count/groupBy/boundary
    * 3 - (400) POST:/users/count/groupBy/boundary
    * 4 - (null) POST:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_10() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=f_7&" + 
                    "bpolys=VE9F2e7&" + 
                    "contributionType=9VKnXwj&" + 
                    "filter=POPpQnxtMp&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bpolys=&" + 
                    "format=juSAA7h9wdIvok&" + 
                    "showMetadata=Xyb4FxEF4wMT&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?format=8xMfOtl")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        try{
            given().accept("*/*")
                    .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                        "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                        "timeout=100.0");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/elementsFullHistory/centroid
    * 2 - (400) POST:/elementsFullHistory/centroid
    * 3 - (400) GET:/elementsFullHistory/centroid
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_11_with500() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/elementsFullHistory/centroid
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bboxes=nF7_Ga&" + 
                    "bcircles=pBsClKyCSj&" + 
                    "bpolys=Mfcx2WAQCk8&" + 
                    "showMetadata=cpLN&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/elementsFullHistory/centroid"));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bboxes=kbRBesAO&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bpolys=HyRpy9ujdb&" + 
                    "clipGeometry=true&" + 
                    "filter=ZI_BGlVkLqwNIWt&" + 
                    "showMetadata=vRgIIiWXjKP5G&" + 
                    "time=5FKzYEcCWM&" + 
                    "timeout=d")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density/groupBy/tag
    * 2 - (400) POST:/users/count/density/groupBy/tag
    * 3 - (400) POST:/users/count/density/groupBy/tag
    * 4 - (null) GET:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_12() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=5pDg4JdIGE&" + 
                    "bpolys=K&" + 
                    "contributionType=rbc3Js9l2doU1&" + 
                    "format=sWaaov&" + 
                    "groupByKey=7&" + 
                    "groupByValues=651044.38")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=0hP_fE04&" + 
                    "filter=iPD2P7U1YcejNCE&" + 
                    "format=xWt&" + 
                    "groupByKey=&" + 
                    "showMetadata=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bcircles=sctZnchS8X0&" + 
                    "bpolys=14FYt4OePFhdi&" + 
                    "format=json&" + 
                    "groupByKey=_Ds&" + 
                    "groupByValues=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        try{
            given().accept("*/*")
                    .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                        "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                        "groupByKey=AvUHdFt");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/elements/length/density/groupBy/type
    * 2 - (400) POST:/elements/length/density/groupBy/type
    * 3 - (400) POST:/elements/length/density/groupBy/type
    * 4 - (200) POST:/elements/length/density/groupBy/type
    * 5 - (400) POST:/elements/length/density/groupBy/type
    * 6 - (400) POST:/elements/length/density/groupBy/type
    * 7 - (400) GET:/elements/length/density/groupBy/type
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_13_with500() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/elements/length/density/groupBy/type
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=UDLcl1DfO1ZOaO&" + 
                    "format=PLc&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/elements/length/density/groupBy/type"));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=uWY&" + 
                    "bcircles=wxBKM1MSe&" + 
                    "filter=9pvOqfUxe&" + 
                    "format=kXY6ft5u8EnoPgB&" + 
                    "showMetadata=x&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=&" + 
                    "bcircles=0rL1&" + 
                    "showMetadata=TaPnam9GKtDzToNx&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(50089.27))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(80149.74));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bpolys=vYEQ5U8b&" + 
                    "filter=xjPW&" + 
                    "showMetadata=vCQZUkLU9YG&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=Uejtapqgq89CSR&" + 
                    "bcircles=IwiQI3ug_mO&" + 
                    "format=KRu5imJZpP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (500) POST:/elements/count/density/groupBy/type
    * 2 - (400) POST:/elements/count/density/groupBy/type
    * 3 - (400) POST:/elements/count/density/groupBy/type
    * 4 - (400) POST:/elements/count/density/groupBy/type
    * 5 - (200) POST:/elements/count/density/groupBy/type
    * 6 - (400) POST:/elements/count/density/groupBy/type
    * 7 - (400) GET:/elements/count/density/groupBy/type
    * Found 1 potential fault of type-code 100
    */
    @Test(timeout = 60000)
    public void test_14_with500() throws Exception {
        
        // Fault100. HTTP Status 500. POST:/elements/count/density/groupBy/type
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=C9eNGk41EePF&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(500)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(500.0))
                .body("'error'", containsString("Internal Server Error"))
                .body("'path'", containsString("/elements/count/density/groupBy/type"));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "filter=cuC__ErNQ96iyk&" + 
                    "format=json&" + 
                    "showMetadata=YfU4iXMChI8l&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=HwC0yz3a&" + 
                    "bpolys=iQKe5_exu1JFsgB&" + 
                    "format=Y7Z96WUXSGqty&" + 
                    "showMetadata=hydwXazMFGC6wGM&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bcircles=LcUM209jjeMeh_&" + 
                    "bpolys=HqSm2z&" + 
                    "filter=pnwra2B04E5Ya&" + 
                    "format=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(1771.28))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(1529.91))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(65.97));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=pb1fc9ebO&" + 
                    "bcircles=&" + 
                    "filter=&" + 
                    "format=K5YP09UtU&" + 
                    "showMetadata=axiokeLm4p6&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bpolys=h&" + 
                    "filter=4wdKTJxN6&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/ratio/groupBy/boundary
    * 2 - (400) GET:/elements/area
    * 3 - (400) POST:/elements/area/density
    * 4 - (400) GET:/elements/count/groupBy/tag
    * 5 - (null) GET:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_15() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bpolys=dSOD6Ogjju&" + 
                    "filter2=wzcVWDhBjM6m&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=jR71O_bkNM&" + 
                    "format=3yj1zv&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=zrbGW3e&" + 
                    "bcircles=i7tNGwklrnc&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "groupByKey=xwC&" + 
                    "groupByValues=743636.1&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        try{
            given().accept("*/*")
                    .get(baseUrlOfSut + "/users/count/groupBy/type?bboxes=8.67%2C49.39%2C8.71%2C49.42");
        } catch(Exception e){
        }
    }
    
    
    /**
    * Calls:
    * (200) GET:/metadata
    */
    @Test(timeout = 60000)
    public void test_16() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/metadata")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'timeout'", numberMatches(100.0))
                .body("'extractRegion'.'spatialExtent'.'type'", containsString("MultiPolygon"))
                .body("'extractRegion'.'spatialExtent'.'coordinates'.size()", equalTo(1))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0].size()", equalTo(1))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0].size()", equalTo(966))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][0].size()", equalTo(2))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][0][0]", numberMatches(8.5731788))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][0][1]", numberMatches(49.4236))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][1].size()", equalTo(2))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][1][0]", numberMatches(8.5742426))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][1][1]", numberMatches(49.4240214))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][2].size()", equalTo(2))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][2][0]", numberMatches(8.5752902))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][2][1]", numberMatches(49.4244224))
                // Skipping assertions on the remaining 963 elements. This limit of 3 elements can be increased in the configurations
                .body("'extractRegion'.'temporalExtent'.'fromTimestamp'", containsString("2007-10-08T00:00:00Z"))
                .body("'extractRegion'.'temporalExtent'.'toTimestamp'", containsString("2020-07-23T03:00:00Z"))
                .body("'extractRegion'.'replicationSequenceNumber'", numberMatches(68900.0));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/density/groupBy/tag
    * 2 - (200) GET:/metadata
    */
    @Test(timeout = 60000)
    public void test_17() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=9ztTGaR9b8dx3dBk&" + 
                    "bcircles=T3c&" + 
                    "groupByKey=building&" + 
                    "groupByValues=8797443.19")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/metadata")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'timeout'", numberMatches(100.0))
                .body("'extractRegion'.'spatialExtent'.'type'", containsString("MultiPolygon"))
                .body("'extractRegion'.'spatialExtent'.'coordinates'.size()", equalTo(1))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0].size()", equalTo(1))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0].size()", equalTo(966))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][0].size()", equalTo(2))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][0][0]", numberMatches(8.5731788))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][0][1]", numberMatches(49.4236))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][1].size()", equalTo(2))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][1][0]", numberMatches(8.5742426))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][1][1]", numberMatches(49.4240214))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][2].size()", equalTo(2))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][2][0]", numberMatches(8.5752902))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][2][1]", numberMatches(49.4244224))
                // Skipping assertions on the remaining 963 elements. This limit of 3 elements can be increased in the configurations
                .body("'extractRegion'.'temporalExtent'.'fromTimestamp'", containsString("2007-10-08T00:00:00Z"))
                .body("'extractRegion'.'temporalExtent'.'toTimestamp'", containsString("2020-07-23T03:00:00Z"))
                .body("'extractRegion'.'replicationSequenceNumber'", numberMatches(68900.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_18() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(485174.84))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(776346.66));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_19() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(130239.01));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_20() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=&" + 
                    "filter=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(1771.28))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(1529.91))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(65.97));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_21() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(3367.16));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_22() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4.617347922E7));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_23() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKeys=48ce")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("48ce"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(743636.1));
    }
    
    
    /**
    * Calls:
    * (200) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_24() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=d78LWNp_jz")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(743636.1));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_25() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "filter=&" + 
                    "groupByKey=I&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(76772.71));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_26() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=OH1Qhj5HX&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(1261521.49));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_27() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=tNmmGCrpXByr&" + 
                    "groupByValues=651044.38")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("tNmmGCrpXByr=651044.38"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(1261521.49));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_28() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=WdvFkF__yEIWLS&" + 
                    "groupByValues=698802.99")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "WdvFkF__yEIWLS=698802.99"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(130239.01));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/area/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_29() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "groupByKey=Wcd8th_jR&" + 
                    "groupByValues=Brhb7f&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "Wcd8th_jR=Brhb7f"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(4.617347922E7));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_30() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=building&" + 
                    "groupByValues=3.737603603E7&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(76772.71))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "building=3.737603603E7"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_31() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=&" + 
                    "groupByKey=7tCyFdmkV9f&" + 
                    "groupByValues=651044.38&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "7tCyFdmkV9f=651044.38"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(518.57));
    }
    
    
    /**
    * Calls:
    * (200) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_32() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=building&" + 
                    "groupByValues=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4766932.83))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "building="))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(0.0));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/type
    * 2 - (400) POST:/elements/area/groupBy/type
    * 3 - (200) GET:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_33() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=CC5ZtSt8ZDgOETHn&" + 
                    "bpolys=r0BHkr&" + 
                    "filter=qWcfN&" + 
                    "format=vsfv&" + 
                    "showMetadata=OxDnM&" + 
                    "time=NqcCl")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=yeVDdqPd&" + 
                    "bpolys=5q2SNw22y8Dt&" + 
                    "format=rRGtGHuEUBl01Mu")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(8797443.19))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(3.737603603E7));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/perimeter/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/groupBy/boundary
    * 3 - (400) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_34() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(4))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(651044.38))
                .body("'groupByResult'[0].'result'[1].'value'", numberMatches(687909.51))
                .body("'groupByResult'[0].'result'[2].'value'", numberMatches(698802.99))
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=oFfewNexP4isAl2&" + 
                    "filter=mQs13&" + 
                    "format=_uF2&" + 
                    "time=X5")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=hTBJuDq&" + 
                    "bcircles=udVEX4GoOG8S&" + 
                    "bpolys=TgBXE_HR&" + 
                    "showMetadata=K0xXbgcjLU0zm&" + 
                    "time=dl&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/area/groupBy/type
    * 2 - (400) POST:/elements/area/groupBy/type
    * 3 - (400) GET:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_35() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(8797443.19))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(3.737603603E7));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "showMetadata=9IBhMfWXiF&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=IPdaRy&" + 
                    "format=Q6yqhxM&" + 
                    "showMetadata=J2kZ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/area/density
    * 2 - (400) POST:/elements/area/density
    * 3 - (400) GET:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_36() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(4766932.83));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=XVIzi&" + 
                    "bcircles=CXXH8gvTv&" + 
                    "time=rJc5SAAGUk")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density?" + 
                    "bcircles=ksSwCNXL1Vwu4fQZ&" + 
                    "filter=BSkOhQ3&" + 
                    "format=HWj&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/type
    * 2 - (200) POST:/elements/area/groupBy/type
    * 3 - (400) GET:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_37() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=IIpIH9GW_pm&" + 
                    "filter=XLWx&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(8797443.19))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(3.737603603E7));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bcircles=X&" + 
                    "filter=ah5J&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/groupBy/boundary
    * 3 - (400) POST:/elements/perimeter/groupBy/boundary
    * 4 - (400) POST:/elements/perimeter/groupBy/boundary
    * 5 - (200) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_38() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bcircles=fLj_krU6&" + 
                    "bpolys=S&" + 
                    "filter=0hpIUV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bpolys=qPg5gih0NV6ER&" + 
                    "filter=QVAgYjMzRz4&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?bcircles=dupXp5h7ktE1G")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "filter=E&" + 
                    "format=bZRidyVxUp03gV&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(743636.1));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/type
    * 2 - (400) POST:/elements/count/density/groupBy/type
    * 3 - (400) POST:/elements/count/density/groupBy/type
    * 4 - (200) GET:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_39() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=J&" + 
                    "bpolys=Jw&" + 
                    "showMetadata=xEy&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=q07zSQa5SXI4&" + 
                    "bcircles=y_uuq00Q6OAPF&" + 
                    "bpolys=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bpolys=V&" + 
                    "filter=tentawLyYBaFdf8E&" + 
                    "showMetadata=1wiUQlKXdUV6R")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(1771.28))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(1529.91))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(65.97));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary
    * 2 - (200) POST:/elements/area/groupBy/boundary
    * 3 - (400) GET:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_40() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bcircles=rsugxZoec1dSE&" + 
                    "format=hrtnu3CnaRZP&" + 
                    "showMetadata=YpudnQ3&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=Jey2WyvntOiu&" + 
                    "filter=CRQg2Kqci3C4k2&" + 
                    "format=Vz_yr7x")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/perimeter/groupBy/type
    * 2 - (400) POST:/elements/perimeter/groupBy/type
    * 3 - (400) GET:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_41() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(591010.37))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(152625.72));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bcircles=5&" + 
                    "bpolys=&" + 
                    "filter=&" + 
                    "format=6516Sys_M&" + 
                    "showMetadata=uJgDjnU&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "filter=bmHHFTyRd1jUM3Fk&" + 
                    "timeout=WuTSj8oKKeBpHyTQ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/perimeter/density
    * 2 - (400) POST:/elements/perimeter/density
    * 3 - (400) GET:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_42() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(76772.71));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bcircles=6j0QGJ&" + 
                    "bpolys=Xr8DWoKodbkDN&" + 
                    "format=&" + 
                    "showMetadata=cTlDQoWk&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=b&" + 
                    "showMetadata=l0&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length
    * 2 - (400) POST:/elements/length
    * 3 - (400) POST:/elements/length
    * 4 - (400) POST:/elements/length
    * 5 - (400) POST:/elements/length
    * 6 - (200) GET:/elements/length
    */
    @Test(timeout = 60000)
    public void test_43() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=hZ3FqZgV&" + 
                    "filter=YTu4YzPYufMQXY8&" + 
                    "showMetadata=yXyMjAG6v&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "filter=Vb5&" + 
                    "format=Ptt00pt_KOFUT0Y&" + 
                    "showMetadata=MyExah&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bpolys=SmFHSquY&" + 
                    "filter=2I3PMTEuq1si&" + 
                    "format=hjO&" + 
                    "showMetadata=ALf9")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bpolys=&" + 
                    "filter=OQOXr9bmtcW&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=Ir0uG&" + 
                    "bcircles=f8&" + 
                    "filter=&" + 
                    "format=pT1LzCAAw&" + 
                    "showMetadata=0i&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(1261521.49));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density
    * 2 - (400) POST:/elements/area/density
    * 3 - (400) POST:/elements/area/density
    * 4 - (200) POST:/elements/area/density
    * 5 - (400) GET:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_44() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "format=GkMoq&" + 
                    "time=MultiPolygon&" + 
                    "timeout=xQ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bpolys=&" + 
                    "filter=6FSny8tHi3&" + 
                    "format=Ae2&" + 
                    "timeout=8kWtbq")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=iTf66&" + 
                    "bpolys=V2Adi&" + 
                    "filter=tJg&" + 
                    "format=q0OWYAHi")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(4766932.83));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=4RWFmcQ&" + 
                    "filter=gS_kSxpRhI2UIw&" + 
                    "time=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density
    * 2 - (200) POST:/elements/perimeter/density
    * 3 - (400) GET:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_45() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bcircles=68phHkKlFlRL&" + 
                    "bpolys=yLQiM&" + 
                    "filter=puSeKWocEH&" + 
                    "showMetadata=1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(76772.71));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bcircles=mnvmgR&" + 
                    "bpolys=mImAbDNs&" + 
                    "filter=p&" + 
                    "format=json&" + 
                    "showMetadata=ANG8m&" + 
                    "time=MultiPolygon&" + 
                    "timeout=9iO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/length/groupBy/type
    * 2 - (400) POST:/elements/length/groupBy/type
    * 3 - (400) GET:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_46() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=type%3Away+and+natural%3D*")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(518.57))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(0.0));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=fCwxA&" + 
                    "bcircles=XDKv6TvoRLR&" + 
                    "filter=9mY793UU2xxAL&" + 
                    "format=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=cw4IwufXMu&" + 
                    "bpolys=wqLaLA9oyku6Ro&" + 
                    "filter=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/perimeter/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/groupBy/boundary
    * 3 - (400) POST:/elements/perimeter/groupBy/boundary
    * 4 - (400) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_47() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(743636.1));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "showMetadata=Kuw&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "filter=w&" + 
                    "format=IX&" + 
                    "showMetadata=V")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=F4&" + 
                    "bcircles=cN&" + 
                    "bpolys=EtGepdEHBC&" + 
                    "filter=iw3wMCR4q&" + 
                    "time=d7xOv&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area
    * 2 - (400) POST:/elements/area
    * 3 - (400) POST:/elements/area
    * 4 - (400) POST:/elements/area
    * 5 - (400) POST:/elements/area
    * 6 - (400) POST:/elements/area
    * 7 - (200) GET:/elements/area
    */
    @Test(timeout = 60000)
    public void test_48() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=g_&" + 
                    "bcircles=SMojvy&" + 
                    "showMetadata=DLC&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=RUe5vJmUJPP2&" + 
                    "bcircles=DSD7eP0_&" + 
                    "format=reQtPbpG7Azq9&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=&" + 
                    "bpolys=kXr5GGQXgGsdl&" + 
                    "filter=gLGx&" + 
                    "format=CxzTnTsh4u&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bcircles=nCHBs&" + 
                    "filter=i98xSYMbzdW&" + 
                    "showMetadata=Dr7SBxnUo&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=&" + 
                    "showMetadata=Zh&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bcircles=R_u3uYJ&" + 
                    "bpolys=i&" + 
                    "showMetadata=uv1&" + 
                    "time=0_j45SUBMh7&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(4.617347922E7));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary
    * 2 - (400) POST:/elements/length/groupBy/boundary
    * 3 - (200) POST:/elements/length/groupBy/boundary
    * 4 - (400) POST:/elements/length/groupBy/boundary
    * 5 - (400) GET:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_49() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bcircles=tefQeCGr&" + 
                    "bpolys=OIz271rEPD&" + 
                    "filter=BzkRAjMC&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=1d3hByE&" + 
                    "filter=PB1jZ4mWc60DLk&" + 
                    "format=_V9jj9QVvSFalG&" + 
                    "showMetadata=JEB&" + 
                    "timeout=wwGT27O")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(1261521.49));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bcircles=PFrxujZfzPmxtqA&" + 
                    "bpolys=MmsCaJ5&" + 
                    "format=vjIzTP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bpolys=c8Nq&" + 
                    "filter=dEFPt1z0Sj&" + 
                    "time=MultiPolygon&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/boundary
    * 2 - (200) POST:/elements/count/groupBy/boundary
    * 3 - (400) POST:/elements/count/groupBy/boundary
    * 4 - (400) GET:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_50() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=orGLVJqv&" + 
                    "bpolys=N&" + 
                    "showMetadata=mz&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(32615.0));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=WzeEfpYmFe5T&" + 
                    "bcircles=bS5eTaoTiYuD&" + 
                    "bpolys=JmkGIw2S8PA&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bcircles=3h5a0YhhRtb&" + 
                    "bpolys=&" + 
                    "filter=3czwnTUhE3Kiz3&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary
    * 2 - (400) POST:/elements/area/groupBy/boundary
    * 3 - (400) POST:/elements/area/groupBy/boundary
    * 4 - (400) POST:/elements/area/groupBy/boundary
    * 5 - (400) POST:/elements/area/groupBy/boundary
    * 6 - (400) POST:/elements/area/groupBy/boundary
    * 7 - (400) POST:/elements/area/groupBy/boundary
    * 8 - (200) GET:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_51() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=j5Rhoji&" + 
                    "filter=hGI8q5cx&" + 
                    "format=r0IP8&" + 
                    "showMetadata=Up69XxlWXmp&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?filter=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=gE0c3B4kHQUgyl&" + 
                    "bcircles=FalIJ7njwND&" + 
                    "bpolys=fJIBFV&" + 
                    "filter=bG8ZBAjc2x&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=Ykh8Kr0xG91cLy9k&" + 
                    "bcircles=LWo9nU5_&" + 
                    "bpolys=atcNq7ASRQ&" + 
                    "showMetadata=XuZs1fnBCKsFG5G")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "filter=zbkfy&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bpolys=lcXW1&" + 
                    "format=cvGspDeQi8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=D_M&" + 
                    "bcircles=ZZc6hZscXdl&" + 
                    "filter=0D6jKvWeGsbpB&" + 
                    "showMetadata=TFk487jaTiqoV2a&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "time=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4.617347922E7));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/boundary
    * 2 - (400) POST:/elements/area/density/groupBy/boundary
    * 3 - (200) POST:/elements/area/density/groupBy/boundary
    * 4 - (400) GET:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_52() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bcircles=rWhvetERmM2aPkBW&" + 
                    "filter=nseHFGAfxO8_y&" + 
                    "format=Ece8ejdRhQBwCd&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=qMVBnhWlTine&" + 
                    "filter=N4SbUzTGmMj&" + 
                    "showMetadata=WFo&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4766932.83));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "filter=313n1ZmaFUnGy&" + 
                    "format=QHASIXpKIf&" + 
                    "showMetadata=ldiZJEpFYc0hexIG")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/key
    * 2 - (400) POST:/elements/perimeter/groupBy/key
    * 3 - (400) POST:/elements/perimeter/groupBy/key
    * 4 - (200) GET:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_53() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=BCT2VZOerrMizd&" + 
                    "bcircles=qP06&" + 
                    "filter=Ei_iW6&" + 
                    "format=F&" + 
                    "groupByKeys=_iDGGgp&" + 
                    "showMetadata=zXrcfU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=eORgCFgqU&" + 
                    "bcircles=mGuMWmPRD_Y5F&" + 
                    "bpolys=8bC6VwSjOTGVG&" + 
                    "filter=le&" + 
                    "format=2CKRvVsejxu&" + 
                    "groupByKeys=nb&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=b5iNfZ7OQCgtHOo&" + 
                    "bpolys=ii5sZYHV&" + 
                    "filter=jinAujh9&" + 
                    "format=lGpCAlM1KzKH&" + 
                    "groupByKeys=ieHAAqm8gfacq&" + 
                    "time=sO&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKeys=xdka_LlkkfrRl5")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("xdka_LlkkfrRl5"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(743636.1));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/type
    * 2 - (200) POST:/elements/area/groupBy/type
    * 3 - (400) POST:/elements/area/groupBy/type
    * 4 - (400) POST:/elements/area/groupBy/type
    * 5 - (400) POST:/elements/area/groupBy/type
    * 6 - (400) GET:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_54() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=AzpKAsB5ciEyk8&" + 
                    "filter=zgWmtRB2S&" + 
                    "showMetadata=NXAup_Vr3&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "showMetadata=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(8797443.19))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(3.737603603E7));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=sOJ&" + 
                    "bcircles=J4_5R6&" + 
                    "format=YX5UMjf3r&" + 
                    "showMetadata=UyibSsz8XK&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?showMetadata=H")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=jB91BG9bko&" + 
                    "bcircles=G_MbDxIy4Tp5&" + 
                    "bpolys=&" + 
                    "format=Nbp_NFUBYgkKJQuP&" + 
                    "showMetadata=B09Nu1COxs8xcoo&" + 
                    "time=A1es&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/type?format=c4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area
    * 2 - (400) POST:/elements/area
    * 3 - (200) POST:/elements/area
    * 4 - (400) POST:/elements/area
    * 5 - (400) GET:/elements/area
    */
    @Test(timeout = 60000)
    public void test_55() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=aHat9VNWBvIm&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "filter=0GmekNdhG8&" + 
                    "format=chzY4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=rr2H6sv0_jgo&" + 
                    "bcircles=3D2eltXWZlf&" + 
                    "bpolys=6yS&" + 
                    "time=MultiPolygon&" + 
                    "timeout=x6m5aFoSLNX")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "bcircles=gIcIZCrYi&" + 
                    "bpolys=eZS&" + 
                    "showMetadata=HKXdyDnoLMt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/type
    * 2 - (400) POST:/elements/area/groupBy/type
    * 3 - (400) POST:/elements/area/groupBy/type
    * 4 - (400) POST:/elements/area/groupBy/type
    * 5 - (400) POST:/elements/area/groupBy/type
    * 6 - (400) POST:/elements/area/groupBy/type
    * 7 - (400) POST:/elements/area/groupBy/type
    * 8 - (400) POST:/elements/area/groupBy/type
    * 9 - (200) GET:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_56() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=E&" + 
                    "bcircles=n8&" + 
                    "format=4JhxseU&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=3qX&" + 
                    "bcircles=LbEMZDtKBwfImQ&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=fCDOcBdeA3RGdqS&" + 
                    "bcircles=&" + 
                    "filter=0WMVuNgPE_z&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=IXxt&" + 
                    "bcircles=u82&" + 
                    "filter=y2QEUk1&" + 
                    "format=yF1hd5ZNIe54&" + 
                    "showMetadata=R98lytPO_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=00zorlHN&" + 
                    "showMetadata=E&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=qYYGkDA&" + 
                    "bcircles=FOvOtLGIznO&" + 
                    "format=du_E01k8q6bBbXR&" + 
                    "showMetadata=PfANJYjedyiWv&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bcircles=LthZad8tUGq6&" + 
                    "format=json&" + 
                    "showMetadata=MS5T2TEeW8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "filter=a&" + 
                    "showMetadata=AgxY6Km6B")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/type?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(8797443.19))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(3.737603603E7));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary
    * 2 - (400) POST:/elements/length/groupBy/boundary
    * 3 - (400) POST:/elements/length/groupBy/boundary
    * 4 - (400) POST:/elements/length/groupBy/boundary
    * 5 - (400) POST:/elements/length/groupBy/boundary
    * 6 - (400) POST:/elements/length/groupBy/boundary
    * 7 - (400) POST:/elements/length/groupBy/boundary
    * 8 - (400) POST:/elements/length/groupBy/boundary
    * 9 - (200) POST:/elements/length/groupBy/boundary
    * 10 - (400) GET:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_57() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=7rU_GRWnO&" + 
                    "bpolys=SQJ&" + 
                    "filter=arCZJgMu&" + 
                    "format=VvEMETD")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=zCSa0wWKsLSDa&" + 
                    "bpolys=q&" + 
                    "filter=G8AOfR&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=&" + 
                    "bpolys=lh414pbgA0WCdhT&" + 
                    "format=mO_qj1cNL1Vb8b&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=UteP9c00&" + 
                    "bcircles=64KVK3p3&" + 
                    "bpolys=9w0n&" + 
                    "showMetadata=nM6DUpwZBJoEgkc&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=hY1Cx60LqlCgxIgx&" + 
                    "bpolys=&" + 
                    "filter=y26Nbtw9CNjpAdWr")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=42ODsHAy&" + 
                    "bcircles=yGN2SmUONx&" + 
                    "bpolys=gg&" + 
                    "showMetadata=Ixae&" + 
                    "time=LNiXBfS41tyGigD&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=yRdrzTIzhulwo&" + 
                    "bpolys=n&" + 
                    "format=E6rOtuEY2P58MF&" + 
                    "showMetadata=2F2J&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=U&" + 
                    "bcircles=wmq&" + 
                    "bpolys=dVQ6Uoo9U&" + 
                    "filter=oasSewx&" + 
                    "format=jBXefKOuyz&" + 
                    "time=mABjaY0Jdc4kZFa&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "time=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(1261521.49));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bpolys=DvrNQgljUEO5ce0F&" + 
                    "filter=S0GQTA2BrnrPq&" + 
                    "format=fvi5ONog9S0glET4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/key
    * 2 - (400) POST:/elements/perimeter/groupBy/key
    * 3 - (400) POST:/elements/perimeter/groupBy/key
    * 4 - (200) GET:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_58() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bcircles=BFUEa_61UKJ4&" + 
                    "groupByKeys=k0Tzck0AW&" + 
                    "showMetadata=n")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=_vd8DfraLhzp&" + 
                    "bcircles=vcBcpTry&" + 
                    "format=55ohlig&" + 
                    "groupByKeys=6X2qtrAZOU6NW8&" + 
                    "showMetadata=9pe&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=5S8BO3&" + 
                    "bcircles=XC9rP7d1IYUoG&" + 
                    "format=&" + 
                    "groupByKeys=t9BqDENq&" + 
                    "showMetadata=vAO9OrFh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKeys=t1dOLft1GMg2TY&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("t1dOLft1GMg2TY"))
                .body("'groupByResult'[0].'result'.size()", equalTo(4))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[0].'result'[1].'value'", numberMatches(0.0))
                .body("'groupByResult'[0].'result'[2].'value'", numberMatches(0.0))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(4))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(651044.38))
                .body("'groupByResult'[1].'result'[1].'value'", numberMatches(687909.51))
                .body("'groupByResult'[1].'result'[2].'value'", numberMatches(698802.99))
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/type
    * 2 - (400) POST:/elements/perimeter/density/groupBy/type
    * 3 - (400) POST:/elements/perimeter/density/groupBy/type
    * 4 - (400) POST:/elements/perimeter/density/groupBy/type
    * 5 - (400) POST:/elements/perimeter/density/groupBy/type
    * 6 - (200) POST:/elements/perimeter/density/groupBy/type
    * 7 - (400) POST:/elements/perimeter/density/groupBy/type
    * 8 - (400) GET:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_59() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=1_TUX3uZKd2dBJL0&" + 
                    "bcircles=&" + 
                    "format=JxJZjtazac&" + 
                    "showMetadata=0zxTXEa5Xy5Dw&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bcircles=s5xS&" + 
                    "format=uYUWcHhVL&" + 
                    "showMetadata=ueHiXXu8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bpolys=&" + 
                    "filter=wBi&" + 
                    "format=0bgvBa&" + 
                    "showMetadata=aXIMDkobcqZyKb")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bpolys=6JNPWVL&" + 
                    "filter=FclpXjXLibx3cQ&" + 
                    "format=YbQrWlip&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "format=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(61015.69))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(15757.02));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bcircles=JJpweEkBwB7Ch&" + 
                    "bpolys=fdT&" + 
                    "filter=Tvjedg8&" + 
                    "format=ysV0d5arroFc9&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?format=MenQVqiBA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/perimeter/density/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 3 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 4 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 5 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 6 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 7 - (400) GET:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_60() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(76772.71));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=7&" + 
                    "bcircles=6Pal4EOzZRmDIH9C&" + 
                    "bpolys=63GDs9eIIRy&" + 
                    "format=mzSePqg6TH8PGMs&" + 
                    "showMetadata=mQ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?bpolys=uiIJjlMRUe")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=Gr&" + 
                    "bpolys=rJ4H1U&" + 
                    "filter=32TF&" + 
                    "format=n9vHq2U4vjEG&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bcircles=SF&" + 
                    "filter=yG0&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=MSaPAqY1ikUjp&" + 
                    "bcircles=8No2Qap4C86wrQ5h&" + 
                    "bpolys=o0yulYAJQRInwINz&" + 
                    "showMetadata=4fc3Ud4ML3Pn")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=NVc4pVemrkfy&" + 
                    "bcircles=zgvF6jrVmGbMT8We&" + 
                    "bpolys=Xt21eQ5FBrLZlA&" + 
                    "filter=YChy95KSxkNn5gO&" + 
                    "format=Gjyy8FGM_0vPjnLh&" + 
                    "showMetadata=Kd7H&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter
    * 2 - (200) POST:/elements/perimeter
    * 3 - (400) POST:/elements/perimeter
    * 4 - (400) POST:/elements/perimeter
    * 5 - (400) GET:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_61() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bcircles=on5eNdb4&" + 
                    "bpolys=jFAlCvElsSWd41l&" + 
                    "filter=32jRl98&" + 
                    "showMetadata=d1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(743636.1));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bcircles=wee3&" + 
                    "format=Le7G5LQq&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=G3bh39KIMoG&" + 
                    "time=EdKS3ay&" + 
                    "timeout=D")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bcircles=ZoUxRJDV7jas&" + 
                    "filter=Maq34FfyauWsHW&" + 
                    "showMetadata=8ROMrCp&" + 
                    "time=dji6I&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/boundary
    * 2 - (400) POST:/elements/length/density/groupBy/boundary
    * 3 - (400) POST:/elements/length/density/groupBy/boundary
    * 4 - (400) POST:/elements/length/density/groupBy/boundary
    * 5 - (400) POST:/elements/length/density/groupBy/boundary
    * 6 - (200) POST:/elements/length/density/groupBy/boundary
    * 7 - (400) POST:/elements/length/density/groupBy/boundary
    * 8 - (400) POST:/elements/length/density/groupBy/boundary
    * 9 - (400) GET:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_62() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "filter=Vdn&" + 
                    "format=0I9jy6SZZesoqEi")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=SFG4qM0TP7&" + 
                    "bpolys=VQwMkM_KXK8ci&" + 
                    "filter=1hx_RCj4DyXDms6i&" + 
                    "format=nTF25pisLHXU7q6&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bpolys=1nquBEBXjCevp&" + 
                    "filter=nSHrj6IP8sUOVe0y&" + 
                    "showMetadata=0gJE&" + 
                    "time=NEq1pVh99ndzF_V")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bcircles=&" + 
                    "filter=0eC8E64Ei1fxhtj&" + 
                    "format=qZioM90KZoPC2iJ&" + 
                    "showMetadata=nU3De1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=QvfNn3wxF1KyND&" + 
                    "bcircles=iAG6zGEpmfNg&" + 
                    "format=&" + 
                    "showMetadata=hR7bZhOt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(130239.01));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bcircles=tXjevQ6JV&" + 
                    "filter=KQ4X4Hk6tyx&" + 
                    "format=q&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=iX&" + 
                    "bcircles=O0vHrfIZY5PFozov&" + 
                    "bpolys=_hIns&" + 
                    "filter=siqbtK&" + 
                    "format=U&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=kUWh&" + 
                    "bpolys=Sc9eAnXyLvxY33A&" + 
                    "filter=fGC1cB&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length
    * 2 - (400) POST:/elements/length
    * 3 - (200) POST:/elements/length
    * 4 - (400) POST:/elements/length
    * 5 - (400) POST:/elements/length
    * 6 - (400) POST:/elements/length
    * 7 - (400) GET:/elements/length
    */
    @Test(timeout = 60000)
    public void test_63() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bpolys=&" + 
                    "format=DNr&" + 
                    "showMetadata=szLk56SEdBSzp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=o_YyQ&" + 
                    "bpolys=wlugVSa&" + 
                    "filter=eO&" + 
                    "format=&" + 
                    "showMetadata=rpok5m094&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(1261521.49));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bpolys=pBN&" + 
                    "format=xi103QlDT&" + 
                    "time=kz6Q9mSuC1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=etiYKef8EXb64bIx&" + 
                    "bpolys=bhuQ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=u0T1kRs&" + 
                    "bcircles=YPpcmiVdm5X4F&" + 
                    "bpolys=8NGtsLlv3w0yqRck&" + 
                    "filter=THRC0eOZmRo0A&" + 
                    "format=CWB&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?" + 
                    "filter=bAn&" + 
                    "format=S9&" + 
                    "showMetadata=ZoAd6DtuizB9WQPn&" + 
                    "timeout=UdzU5r9hW4YOkz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/type
    * 2 - (400) POST:/elements/count/groupBy/type
    * 3 - (400) POST:/elements/count/groupBy/type
    * 4 - (200) POST:/elements/count/groupBy/type
    * 5 - (400) POST:/elements/count/groupBy/type
    * 6 - (400) POST:/elements/count/groupBy/type
    * 7 - (400) GET:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_64() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=&" + 
                    "filter=j52OMincQX3kY&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=dS&" + 
                    "bpolys=QebBG9N&" + 
                    "format=KSGlLHk&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bcircles=rV4OJ7F&" + 
                    "filter=gMeVBXHsZg2Jb4X0&" + 
                    "format=YhPqZoJQVxX4aEl&" + 
                    "showMetadata=e0hvfuKDzZbq6y&" + 
                    "time=MultiPolygon&" + 
                    "timeout=Vph1rJKMx")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(17157.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(14819.0))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(639.0));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bcircles=t5vdp&" + 
                    "filter=YmM6IBK4o1M&" + 
                    "format=C_qY6sL&" + 
                    "time=Kg62J0X&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=XZ&" + 
                    "bpolys=A&" + 
                    "filter=RWGMHmm9FfpQox&" + 
                    "timeout=b6Jzp7SRCt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bcircles=29gZXrBzAX&" + 
                    "bpolys=RI6Cd7&" + 
                    "format=1KtQ66lzSDXsL1a&" + 
                    "showMetadata=eY6&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/type
    * 2 - (200) POST:/elements/area/density/groupBy/type
    * 3 - (400) POST:/elements/area/density/groupBy/type
    * 4 - (400) GET:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_65() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bcircles=fISHM12lcav5R&" + 
                    "bpolys=3ggeXbk&" + 
                    "filter=wi8y1w8FVo&" + 
                    "format=CPTqV0ZOD&" + 
                    "showMetadata=0aFRosyd2wZ9VRo&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(908244.76))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(3858688.07));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=kC97v&" + 
                    "bcircles=ms1GioV17&" + 
                    "filter=rVhtkCEl&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "format=IsynrBk&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density
    * 2 - (400) POST:/elements/area/density
    * 3 - (400) POST:/elements/area/density
    * 4 - (400) POST:/elements/area/density
    * 5 - (400) POST:/elements/area/density
    * 6 - (400) POST:/elements/area/density
    * 7 - (400) POST:/elements/area/density
    * 8 - (400) POST:/elements/area/density
    * 9 - (200) GET:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_66() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=eVWxx58BwzFVy4xO&" + 
                    "bcircles=iJYgTy&" + 
                    "format=_z&" + 
                    "showMetadata=tHDUtRQ2I&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=V5ziXTCwjS8PoMc&" + 
                    "bpolys=qzHtyvqcWz&" + 
                    "showMetadata=JSYck8DiSMEB&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=xhzC&" + 
                    "bcircles=RIVNLpxWuTz3&" + 
                    "filter=fGcLUz&" + 
                    "format=O296RyZiQfe&" + 
                    "showMetadata=WrJ6WNc_CUO98SU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bcircles=mjPXkssM&" + 
                    "filter=NLj4diXKPBx7tZpO&" + 
                    "format=DCzmuyE&" + 
                    "showMetadata=lzms6_Tp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=GbpXLQeo0&" + 
                    "bcircles=ACtm7UEv&" + 
                    "bpolys=iUohZNk&" + 
                    "filter=FOXG1k")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bpolys=yN6z&" + 
                    "format=XHFzLR6z&" + 
                    "showMetadata=siYLAUej49y4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bpolys=&" + 
                    "filter=9ZI3GWL4V&" + 
                    "format=3Pri")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bcircles=230FMLhk&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=RJQDGtWxW4zrDUp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(4766932.83));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length
    * 2 - (400) POST:/elements/length
    * 3 - (200) POST:/elements/length
    * 4 - (400) POST:/elements/length
    * 5 - (400) POST:/elements/length
    * 6 - (400) POST:/elements/length
    * 7 - (400) POST:/elements/length
    * 8 - (400) POST:/elements/length
    * 9 - (400) GET:/elements/length
    */
    @Test(timeout = 60000)
    public void test_67() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bcircles=WKmd2RP0&" + 
                    "filter=A4kyL6Snbu&" + 
                    "format=q8&" + 
                    "showMetadata=eE8H&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=nEn2TWx7g3f5VC&" + 
                    "bpolys=tc6q2dCI&" + 
                    "filter=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(1261521.49));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=UD&" + 
                    "bpolys=Lg&" + 
                    "filter=KccQQl4SD&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=5L&" + 
                    "bpolys=Z&" + 
                    "format=PbR1PUM&" + 
                    "time=MultiPolygon&" + 
                    "timeout=ty2QGreDv")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bcircles=dlL2v&" + 
                    "filter=kmkpQfOt5aGUp&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "filter=rSwi&" + 
                    "format=970A43uaT0A_&" + 
                    "time=MultiPolygon&" + 
                    "timeout=N")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bcircles=S0NqswCSfCtj59B&" + 
                    "bpolys=4_&" + 
                    "filter=qAW&" + 
                    "showMetadata=jG")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=Vr3jQ1sNGi9IL&" + 
                    "bcircles=G_KMjP2rHM1ReiRG&" + 
                    "format=yfCxEeN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/boundary
    * 2 - (400) POST:/elements/area/density/groupBy/boundary
    * 3 - (400) POST:/elements/area/density/groupBy/boundary
    * 4 - (400) POST:/elements/area/density/groupBy/boundary
    * 5 - (400) POST:/elements/area/density/groupBy/boundary
    * 6 - (200) POST:/elements/area/density/groupBy/boundary
    * 7 - (400) GET:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_68() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=O9&" + 
                    "showMetadata=f5&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=qvtlQGb0VBhw&" + 
                    "bpolys=ag_FZwQaSiGoh&" + 
                    "filter=8WZwz4L27tpWI&" + 
                    "showMetadata=&" + 
                    "time=Lv0nK5v&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?showMetadata=1UwVn")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=uqetvz6pJKrf2&" + 
                    "bcircles=nnge8&" + 
                    "bpolys=M1DoxyjHitdrcSX&" + 
                    "format=&" + 
                    "showMetadata=_Yk5IyAX2kxkvP3&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=A_kLM&" + 
                    "bpolys=mG04s4uO0UG&" + 
                    "filter=msAM8Sjhb1mIt&" + 
                    "showMetadata=&" + 
                    "timeout=ed6wNfrH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4766932.83));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "filter=wl7y4&" + 
                    "showMetadata=X0JNZ_cRwwGqzm&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/type
    * 2 - (400) POST:/elements/perimeter/groupBy/type
    * 3 - (200) POST:/elements/perimeter/groupBy/type
    * 4 - (400) POST:/elements/perimeter/groupBy/type
    * 5 - (400) GET:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_69() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bcircles=lk0AbO_gxHfJZpqy&" + 
                    "filter=uKquz&" + 
                    "showMetadata=X2TpR9RmtUZgyesR&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=vpXQjVpm&" + 
                    "bcircles=Jt7tDvc0tpxR07&" + 
                    "filter=tdyY&" + 
                    "format=SrWZLseMxCSGA&" + 
                    "time=a4Ch_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(591010.37))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(152625.72));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=77EFDNZbQG0mdX_5&" + 
                    "filter=yWI3eAC83&" + 
                    "showMetadata=5UdNU_4W&" + 
                    "time=MultiPolygon&" + 
                    "timeout=KwDiDz0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "showMetadata=EPjoqVl9fxfCWi&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter
    * 2 - (400) POST:/elements/perimeter
    * 3 - (400) POST:/elements/perimeter
    * 4 - (400) POST:/elements/perimeter
    * 5 - (400) POST:/elements/perimeter
    * 6 - (400) POST:/elements/perimeter
    * 7 - (200) POST:/elements/perimeter
    * 8 - (400) GET:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_70() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=&" + 
                    "bcircles=R4VAsw1f16lgF1&" + 
                    "filter=ML&" + 
                    "showMetadata=HBFq&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bcircles=h1p0ugj_e3OOO&" + 
                    "filter=J6ND1r&" + 
                    "showMetadata=kt1kYmYt&" + 
                    "timeout=vdqyFVsP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bcircles=OXZxS3OR2B4W&" + 
                    "filter=F339zGRnZB4a&" + 
                    "showMetadata=ITR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=nZVE5qLDv4SU&" + 
                    "bcircles=lLmu5Eka&" + 
                    "bpolys=Z&" + 
                    "format=Fr92&" + 
                    "showMetadata=5UBBMkGzRqbjDCy&" + 
                    "time=1dUks&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bcircles=LHhvc2yBaMGN&" + 
                    "format=9hKz0bM4&" + 
                    "showMetadata=H")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=4R05HbGEfI6PyOo&" + 
                    "filter=RtI&" + 
                    "showMetadata=ann1gYwZf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(743636.1));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=HGFo4FnFi4U6&" + 
                    "bcircles=39F8yC45SK9mfC&" + 
                    "bpolys=iH43xwUaX&" + 
                    "format=HGbPoJN4_WudN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/type
    * 2 - (400) POST:/elements/perimeter/density/groupBy/type
    * 3 - (200) POST:/elements/perimeter/density/groupBy/type
    * 4 - (400) POST:/elements/perimeter/density/groupBy/type
    * 5 - (400) POST:/elements/perimeter/density/groupBy/type
    * 6 - (400) POST:/elements/perimeter/density/groupBy/type
    * 7 - (400) POST:/elements/perimeter/density/groupBy/type
    * 8 - (400) POST:/elements/perimeter/density/groupBy/type
    * 9 - (400) POST:/elements/perimeter/density/groupBy/type
    * 10 - (400) GET:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_71() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=_bmD&" + 
                    "bpolys=FhjHExo&" + 
                    "filter=&" + 
                    "format=C1h&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=kmtJlrJz&" + 
                    "filter=iKCzwpG_oxT79U&" + 
                    "showMetadata=mlhHTW7&" + 
                    "time=828xWpVh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(61015.69))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(15757.02));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=yN&" + 
                    "bpolys=3&" + 
                    "format=CO1pi&" + 
                    "showMetadata=BapQi&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "filter=YMnWP&" + 
                    "format=hSLeyDnmxjYvv_&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bcircles=dqJC&" + 
                    "bpolys=33MvsG7&" + 
                    "format=_H30F&" + 
                    "showMetadata=stTGImCwwzXTj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bcircles=jWMjP&" + 
                    "bpolys=&" + 
                    "filter=YDR&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=GK_4jH4h8zkUL0K&" + 
                    "bcircles=kPBCqvhzWBqK53cB&" + 
                    "bpolys=yIoVw&" + 
                    "filter=Z6I0k&" + 
                    "format=pBSb0XKA2vPLMS&" + 
                    "showMetadata=6J&" + 
                    "time=ZIrG")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=gaUYYDdoNs201m&" + 
                    "bcircles=r&" + 
                    "bpolys=ds_&" + 
                    "filter=X4VrPbyvP&" + 
                    "format=zKVC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=2l&" + 
                    "bpolys=T3u&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary
    * 2 - (400) POST:/elements/area/groupBy/boundary
    * 3 - (400) POST:/elements/area/groupBy/boundary
    * 4 - (400) POST:/elements/area/groupBy/boundary
    * 5 - (400) POST:/elements/area/groupBy/boundary
    * 6 - (400) POST:/elements/area/groupBy/boundary
    * 7 - (400) POST:/elements/area/groupBy/boundary
    * 8 - (400) POST:/elements/area/groupBy/boundary
    * 9 - (400) POST:/elements/area/groupBy/boundary
    * 10 - (200) GET:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_72() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=qiuD1zh&" + 
                    "bcircles=9s2T&" + 
                    "filter=XBdJ7EKXuCNQaQD&" + 
                    "format=I&" + 
                    "showMetadata=ExnAQb&" + 
                    "time=voR8Y3QLMIRQw&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=f&" + 
                    "bpolys=YE9OeOnEVGQk&" + 
                    "filter=type%3Away+and+natural%3D*")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=&" + 
                    "bcircles=zaLOerBVvsv&" + 
                    "bpolys=g&" + 
                    "showMetadata=D0Nf9Z4JqCvb&" + 
                    "timeout=mtI")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bpolys=bXaWTUSav_8K6&" + 
                    "showMetadata=5UY1&" + 
                    "time=MultiPolygon&" + 
                    "timeout=WN2tIXB65wtrp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bcircles=vNFIv0K1Ek3VSy&" + 
                    "showMetadata=uSo5OOaMW0a&" + 
                    "time=prbWEp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=I7FQ8E7k5qqj&" + 
                    "filter=17KrrZllfe7ofcC&" + 
                    "format=8C7HE2JbC2gx5pl&" + 
                    "showMetadata=EIz6_GQlRx4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=4&" + 
                    "filter=p3sT7fEMGjp_3Fuj&" + 
                    "showMetadata=amG4lqsJ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=4FkPnZyO&" + 
                    "showMetadata=e9")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4.617347922E7));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/type
    * 2 - (200) POST:/elements/length/density/groupBy/type
    * 3 - (400) POST:/elements/length/density/groupBy/type
    * 4 - (400) POST:/elements/length/density/groupBy/type
    * 5 - (400) POST:/elements/length/density/groupBy/type
    * 6 - (400) POST:/elements/length/density/groupBy/type
    * 7 - (400) GET:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_73() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bpolys=ziiP0sqZga&" + 
                    "filter=mh1IVVCizvT&" + 
                    "showMetadata=qIvndexa9G4uHNF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "showMetadata=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(50089.27))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(80149.74));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=GyCM3tVpBy53&" + 
                    "filter=YU&" + 
                    "format=MnjgR0F&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=D&" + 
                    "bcircles=OIh&" + 
                    "filter=EWc1socUqxrDpeLG&" + 
                    "format=Hh1Y57&" + 
                    "showMetadata=IDSiW0Hxy92x7cF1&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bcircles=Nnrc4&" + 
                    "bpolys=U4tc&" + 
                    "format=pRcNl&" + 
                    "showMetadata=l1FRvTUIunrs&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=VhllK8R4Ubg&" + 
                    "bcircles=&" + 
                    "bpolys=nXVFMqNj3j&" + 
                    "filter=jCg2&" + 
                    "format=A12jdx71qFaF&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=9iYZpvEjAUc6Jc&" + 
                    "bcircles=ms&" + 
                    "showMetadata=2QOpAdu0&" + 
                    "timeout=4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/perimeter/groupBy/type
    * 2 - (400) POST:/elements/perimeter/groupBy/type
    * 3 - (400) POST:/elements/perimeter/groupBy/type
    * 4 - (400) POST:/elements/perimeter/groupBy/type
    * 5 - (400) GET:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_74() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(591010.37))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(152625.72));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bpolys=Z&" + 
                    "filter=QDurLN_HTINNl5n&" + 
                    "showMetadata=PNCHl&" + 
                    "time=MultiPolygon&" + 
                    "timeout=n10GmBqO7jJ8GQpl")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=dPx&" + 
                    "bcircles=kqFbmV_&" + 
                    "filter=CX3kaDS4sx&" + 
                    "format=t2k&" + 
                    "showMetadata=RG2DuoGj5qTf&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bcircles=QUbSpz0sJpm&" + 
                    "bpolys=5W25RKiJlNsVIrNT&" + 
                    "format=lpKg6GY7RR&" + 
                    "showMetadata=tpz5WC2Nm&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=Yn6XjZ&" + 
                    "bpolys=_VFTBZ9EyX7pa7FL&" + 
                    "filter=625ZC&" + 
                    "format=pIQcHjAP&" + 
                    "showMetadata=Q3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/boundary
    * 2 - (400) POST:/elements/count/density/groupBy/boundary
    * 3 - (400) POST:/elements/count/density/groupBy/boundary
    * 4 - (400) POST:/elements/count/density/groupBy/boundary
    * 5 - (400) POST:/elements/count/density/groupBy/boundary
    * 6 - (400) POST:/elements/count/density/groupBy/boundary
    * 7 - (200) POST:/elements/count/density/groupBy/boundary
    * 8 - (400) GET:/elements/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_75() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=8Od18XJWPpfW&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bpolys=eZxPkNB&" + 
                    "filter=tm61i&" + 
                    "format=VXNZ0&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bcircles=XtGC6&" + 
                    "filter=G4d2Gi8&" + 
                    "format=wNHGN&" + 
                    "showMetadata=_c&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bpolys=oSl&" + 
                    "filter=&" + 
                    "format=52DweZ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "format=U2og&" + 
                    "showMetadata=Ac92Oodx&" + 
                    "time=x")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bpolys=WgAyhYZW7EF8N_bD&" + 
                    "filter=ynMV&" + 
                    "showMetadata=5R1ukflHITQvC1&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(3367.16));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bpolys=RP4Hn8aaQL6&" + 
                    "format=xReBy674JF&" + 
                    "showMetadata=Hzo")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 3 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 4 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 5 - (200) POST:/elements/perimeter/density/groupBy/boundary
    * 6 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 7 - (400) GET:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_76() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "filter=_CPGxGpfScSvPl&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bpolys=yg6pEy9NyEgQL&" + 
                    "filter=9o2JcJY&" + 
                    "showMetadata=fYlJYsq3&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=4az&" + 
                    "bpolys=PqUkkUYHE&" + 
                    "filter=&" + 
                    "format=hkK_Jcd01M5O&" + 
                    "showMetadata=JamDbCKaJs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bcircles=6emjNzq_7DTWjJ1&" + 
                    "filter=agIA807iiN2Omq&" + 
                    "showMetadata=ck&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(76772.71));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=&" + 
                    "filter=aaclU4s4QLKK&" + 
                    "showMetadata=6idI6KS")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=dUnJgPy1&" + 
                    "bcircles=1MrlYT&" + 
                    "filter=7mETQRD2faXU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/length/density/groupBy/type
    * 2 - (400) POST:/elements/length/density/groupBy/type
    * 3 - (400) POST:/elements/length/density/groupBy/type
    * 4 - (400) POST:/elements/length/density/groupBy/type
    * 5 - (400) POST:/elements/length/density/groupBy/type
    * 6 - (400) POST:/elements/length/density/groupBy/type
    * 7 - (400) GET:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_77() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(50089.27))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(80149.74));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "format=eJwmT4Iozqluw&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bcircles=n7KZJ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bcircles=uyCcCjq&" + 
                    "format=zOr&" + 
                    "showMetadata=rJ5mZ1IUqq&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bcircles=bo410&" + 
                    "filter=0Iw4q&" + 
                    "format=2_pzELtlZTt&" + 
                    "showMetadata=u&" + 
                    "timeout=zD2D6Cp3t")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=4iE&" + 
                    "bpolys=XlNGS_BY56&" + 
                    "filter=D&" + 
                    "format=nrKDAPE60nU&" + 
                    "showMetadata=BXlFcPUn0ZMs&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bpolys=&" + 
                    "format=Ekz6WrJSHUGnbH&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=bBTMroCXe")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area
    * 2 - (400) POST:/elements/area
    * 3 - (400) POST:/elements/area
    * 4 - (200) POST:/elements/area
    * 5 - (400) GET:/elements/area
    */
    @Test(timeout = 60000)
    public void test_78() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bcircles=5UQG9718yJiVJ&" + 
                    "filter=L3A9ZrpG&" + 
                    "showMetadata=gPV&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=aFBRp7F3a&" + 
                    "bcircles=BC9SBjsSjJL3KL&" + 
                    "bpolys=HF2aXX381x&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=06ZZBzWwer8WTdI9&" + 
                    "showMetadata=FgIWtDy&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=_LTNP8Bs&" + 
                    "bcircles=5IqTzTh1&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=el_HQ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=F4Ww5e&" + 
                    "bcircles=sclsR&" + 
                    "format=gqCHkwToS4AyyPop&" + 
                    "showMetadata=snwTdDHxydB4Zbs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/type
    * 2 - (400) POST:/elements/count/density/groupBy/type
    * 3 - (400) POST:/elements/count/density/groupBy/type
    * 4 - (400) POST:/elements/count/density/groupBy/type
    * 5 - (200) POST:/elements/count/density/groupBy/type
    * 6 - (400) POST:/elements/count/density/groupBy/type
    * 7 - (400) POST:/elements/count/density/groupBy/type
    * 8 - (400) GET:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_79() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=tIWbYcQb&" + 
                    "bcircles=fsGRdt66uzS9Z&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=EOpEMsfsoNeFusHq&" + 
                    "bpolys=VSLgJhUZB97&" + 
                    "filter=QeM0Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bpolys=S4iDWgNOp5_bb&" + 
                    "showMetadata=46rDIpiWig&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=cphCx2LGOiKEXpM&" + 
                    "format=_&" + 
                    "showMetadata=qi&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(1771.28))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(1529.91))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(65.97));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=FUvoQUI&" + 
                    "bcircles=d&" + 
                    "filter=Nh_q3NnhuUxB")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=lgd&" + 
                    "filter=T5Sthdg&" + 
                    "format=hjrwcHCt&" + 
                    "showMetadata=uqsCzlfko4P3&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bcircles=bH&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density
    * 2 - (400) POST:/elements/length/density
    * 3 - (400) POST:/elements/length/density
    * 4 - (200) POST:/elements/length/density
    * 5 - (400) GET:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_80() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=Lr7OcvzCi&" + 
                    "bcircles=qxZrjCL5MeZsm36&" + 
                    "bpolys=fW6O5D_GPpj&" + 
                    "showMetadata=paVH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=sv5lxlSjFQ50&" + 
                    "bpolys=Cbisg95TruNVj&" + 
                    "showMetadata=XHCv_9i8xC&" + 
                    "time=MultiPolygon&" + 
                    "timeout=WkiAMuS4w")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "format=ATJH6oSj2hKxfK&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=json")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(130239.01));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=RP_hWuVL&" + 
                    "bpolys=&" + 
                    "filter=d&" + 
                    "showMetadata=uGtyBPMnlOtLuq&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/key
    * 2 - (200) POST:/elements/area/groupBy/key
    * 3 - (400) POST:/elements/area/groupBy/key
    * 4 - (400) GET:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_81() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bcircles=&" + 
                    "bpolys=zP9AXKSWh1rtMma&" + 
                    "groupByKeys=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=&" + 
                    "groupByKeys=hn7ARqZA_srXfOSY&" + 
                    "showMetadata=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("hn7ARqZA_srXfOSY"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bpolys=rbuIJAG_3LTg4&" + 
                    "format=R64rp&" + 
                    "groupByKeys=0&" + 
                    "time=79VZBn&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bcircles=aIq2NUocxTSr7Ge&" + 
                    "bpolys=Q9du3UZ1_viWL&" + 
                    "filter=l1_eHHsLeAuiE&" + 
                    "groupByKeys=hl35DXJT&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/type
    * 2 - (400) POST:/elements/area/density/groupBy/type
    * 3 - (400) POST:/elements/area/density/groupBy/type
    * 4 - (400) POST:/elements/area/density/groupBy/type
    * 5 - (400) POST:/elements/area/density/groupBy/type
    * 6 - (400) POST:/elements/area/density/groupBy/type
    * 7 - (200) POST:/elements/area/density/groupBy/type
    * 8 - (400) POST:/elements/area/density/groupBy/type
    * 9 - (400) POST:/elements/area/density/groupBy/type
    * 10 - (400) GET:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_82() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "format=5HoaHOXgJpGur3qy&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bcircles=445KJv8rP7D8&" + 
                    "bpolys=LuN8II&" + 
                    "time=MultiPolygon&" + 
                    "timeout=h1Bjbb6ovI50k")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=kt&" + 
                    "format=lsXEj9IovwYin&" + 
                    "showMetadata=ohOMlc2mVop&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=uSmlWWK5BwTjv7Hz&" + 
                    "bpolys=EO_5WPbqMQcUHY&" + 
                    "filter=LI3hGP8zeb5G9ru5&" + 
                    "showMetadata=JGtpiz_gtH&" + 
                    "time=x5LRmq9")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bcircles=qCvBgox&" + 
                    "format=&" + 
                    "showMetadata=iKfg6l7&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bcircles=KLUEGOdwnZ34_Mho&" + 
                    "bpolys=OL5cQjcAAnW2rQj&" + 
                    "showMetadata=lhwV25UGY&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(908244.76))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(3858688.07));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=ng9jZjsH&" + 
                    "filter=CZJGs&" + 
                    "format=pi2xdXR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bcircles=Qcp&" + 
                    "format=json&" + 
                    "showMetadata=H8&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=Zrz&" + 
                    "bcircles=55yz4q5bUZPvVNb&" + 
                    "bpolys=lKP0PDji&" + 
                    "filter=0DtETMC0QchHG&" + 
                    "format=syBO&" + 
                    "showMetadata=tu&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary
    * 2 - (400) POST:/elements/area/groupBy/boundary
    * 3 - (400) POST:/elements/area/groupBy/boundary
    * 4 - (400) POST:/elements/area/groupBy/boundary
    * 5 - (400) POST:/elements/area/groupBy/boundary
    * 6 - (200) POST:/elements/area/groupBy/boundary
    * 7 - (400) POST:/elements/area/groupBy/boundary
    * 8 - (400) POST:/elements/area/groupBy/boundary
    * 9 - (400) GET:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_83() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=DQqO9ug2oWyR3VKp&" + 
                    "showMetadata=G3MjexIbq77_k&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=QxHd_ZJFb&" + 
                    "bpolys=gohpABlyP&" + 
                    "format=1YryA2gOhv&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bcircles=mZeqhXVPO2&" + 
                    "bpolys=pd&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "filter=1ylt&" + 
                    "showMetadata=neAi4TTpy&" + 
                    "time=KBKsB&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bpolys=HhSqwbq30CWFh&" + 
                    "filter=gG29Zih_lIByIjk&" + 
                    "format=SY&" + 
                    "showMetadata=jWAFx")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=nSQHq&" + 
                    "bcircles=t&" + 
                    "filter=YvyYqut&" + 
                    "format=DLeVt4v41vv6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bcircles=xZn0wxrdmVEon4_H&" + 
                    "bpolys=Eqg0pzyI7kX2GJV&" + 
                    "format=YX3epQ2YjQxcGD6&" + 
                    "showMetadata=dMju_Gw&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=xO&" + 
                    "bcircles=O5nns6efIF85d&" + 
                    "filter=m9x6_WZ&" + 
                    "format=POc2PO4hLV6KU&" + 
                    "showMetadata=VLj&" + 
                    "time=MultiPolygon&" + 
                    "timeout=o3JECDy8Yjvk6S6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density
    * 2 - (400) POST:/elements/count/density
    * 3 - (400) POST:/elements/count/density
    * 4 - (400) POST:/elements/count/density
    * 5 - (400) POST:/elements/count/density
    * 6 - (400) POST:/elements/count/density
    * 7 - (400) POST:/elements/count/density
    * 8 - (400) POST:/elements/count/density
    * 9 - (200) POST:/elements/count/density
    * 10 - (400) GET:/elements/count/density
    */
    @Test(timeout = 60000)
    public void test_84() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=Rxyc1H3aKvdvzT&" + 
                    "bpolys=WnVQhR&" + 
                    "format=JT4&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bpolys=pwPPpMS&" + 
                    "filter=KsTh8Mt9nm3H9&" + 
                    "format=9nID2CF9&" + 
                    "time=MultiPolygon&" + 
                    "timeout=ftwHSo7FaO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bcircles=3mn&" + 
                    "bpolys=mNVmYWHLbPlSz&" + 
                    "filter=hCiHmY5YX&" + 
                    "showMetadata=sKMfWfLgjsW0u&" + 
                    "time=dn7UKkkhmN7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "showMetadata=YeI4Ls&" + 
                    "time=MultiPolygon&" + 
                    "timeout=_prtx04vVWVgtzvY")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "showMetadata=iLXz8v0&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=F1ix659vrZhs46&" + 
                    "filter=ql&" + 
                    "format=Uh41TunkLAWn&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "filter=TEBQv3&" + 
                    "showMetadata=eSYfImtOJ_J&" + 
                    "time=anl&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=4J8eIb9&" + 
                    "showMetadata=UDxpBSfhIfb&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?bboxes=8.67%2C49.39%2C8.71%2C49.42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(3367.16));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density?" + 
                    "bpolys=xigh&" + 
                    "format=&" + 
                    "showMetadata=b0f&" + 
                    "time=MultiPolygon&" + 
                    "timeout=gNlfC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/key
    * 2 - (400) POST:/elements/length/groupBy/key
    * 3 - (400) POST:/elements/length/groupBy/key
    * 4 - (400) POST:/elements/length/groupBy/key
    * 5 - (400) POST:/elements/length/groupBy/key
    * 6 - (200) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_85() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "filter=HL1HVxxdD5tV_&" + 
                    "format=A8IkPghRAQI6qi4r&" + 
                    "groupByKeys=ExrzM&" + 
                    "showMetadata=odX3Gb_xfkCghp&" + 
                    "time=fUFlTZ7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bpolys=jSKYqIDiu&" + 
                    "format=vHoM3Vy7&" + 
                    "groupByKeys=jm232ZXrUgz5NYaj&" + 
                    "showMetadata=TmnWEPxdX&" + 
                    "time=RC6LyymX2kSovA1&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bcircles=cMCFRIpdD0Rh9&" + 
                    "filter=RTuqsu8hyXJ&" + 
                    "groupByKeys=5MWU9S&" + 
                    "showMetadata=7CCEqJQW5GT5SgP&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=TKZA8p6Jd1ZrYFjk&" + 
                    "format=YmTx&" + 
                    "groupByKeys=TI0S&" + 
                    "showMetadata=QE&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=e&" + 
                    "bcircles=&" + 
                    "filter=3o5PMbrVonvxkoc&" + 
                    "groupByKeys=Xv&" + 
                    "showMetadata=0XRpwpaQaLDQDfHP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKeys=8mh71jP7Rb9&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("8mh71jP7Rb9"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(1261521.49));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/area/groupBy/key
    * 2 - (400) POST:/elements/area/groupBy/key
    * 3 - (400) POST:/elements/area/groupBy/key
    * 4 - (400) GET:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_86() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=&" + 
                    "format=&" + 
                    "groupByKeys=ibO")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("ibO"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=cWlTFG6DmW3g&" + 
                    "bcircles=sDn_7E4mr_ybu&" + 
                    "bpolys=DRKcOCyNWKdz2xT&" + 
                    "groupByKeys=building&" + 
                    "showMetadata=Ssr5A&" + 
                    "time=MultiPolygon&" + 
                    "timeout=rKdnavjbYbbF4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=sm_mT2TEORV&" + 
                    "bcircles=O3YEU&" + 
                    "bpolys=Tapg2msMJei1534G&" + 
                    "filter=tL3dC&" + 
                    "groupByKeys=p4r3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=nhlDaBJPEXAdx&" + 
                    "bcircles=G81eM9NnsYB3v2Wd&" + 
                    "bpolys=NNAPR2SkXDC&" + 
                    "groupByKeys=Fk9I2Dv3OlRz&" + 
                    "time=yuIN6f4_Jhn_1F6q")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density
    * 2 - (400) POST:/elements/perimeter/density
    * 3 - (400) POST:/elements/perimeter/density
    * 4 - (400) POST:/elements/perimeter/density
    * 5 - (400) POST:/elements/perimeter/density
    * 6 - (400) POST:/elements/perimeter/density
    * 7 - (400) POST:/elements/perimeter/density
    * 8 - (200) POST:/elements/perimeter/density
    * 9 - (400) POST:/elements/perimeter/density
    * 10 - (400) GET:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_87() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bpolys=tri9&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bcircles=CA1L&" + 
                    "format=dTbUnqwNMsD7v9c&" + 
                    "showMetadata=s4SewZKoG&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=KkAa&" + 
                    "bpolys=W2Ew6sSf37A7&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "format=d40S_a3gT&" + 
                    "showMetadata=UEynQiYkRmQbU1c")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=P&" + 
                    "filter=tjajXKISPZ8&" + 
                    "showMetadata=4mn&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=tf70Kdr2nMkyQPP6&" + 
                    "bcircles=19wODu_b50&" + 
                    "format=Qb0X&" + 
                    "showMetadata=WRQdPVkma0DgD&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=9N9PbR7Hl2CaMij&" + 
                    "filter=4weoxVR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(4))
                .body("'result'[0].'value'", numberMatches(67213.58))
                .body("'result'[1].'value'", numberMatches(71019.52))
                .body("'result'[2].'value'", numberMatches(72144.16))
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?showMetadata=4rAMQksBlTTaUGo_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=KLPUjOaUrckEsJg&" + 
                    "bpolys=IDrZ&" + 
                    "showMetadata=zR4aDETJYtQ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter
    * 2 - (400) POST:/elements/perimeter
    * 3 - (400) POST:/elements/perimeter
    * 4 - (400) POST:/elements/perimeter
    * 5 - (400) POST:/elements/perimeter
    * 6 - (400) POST:/elements/perimeter
    * 7 - (400) POST:/elements/perimeter
    * 8 - (400) POST:/elements/perimeter
    * 9 - (200) POST:/elements/perimeter
    * 10 - (400) GET:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_88() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "format=_fJZ2yH_D4E_2Z2&" + 
                    "showMetadata=XR&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=ElwLb&" + 
                    "showMetadata=JeHs3x6El&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bcircles=jwKyq7&" + 
                    "filter=oR3BybT&" + 
                    "showMetadata=5V60KMjUGQH&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bpolys=&" + 
                    "filter=vYc27EqQAxNvYSaA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bcircles=Z2tW&" + 
                    "format=m&" + 
                    "showMetadata=CXgmV0D&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=qx83vB&" + 
                    "bcircles=eLbTLRRo&" + 
                    "format=g7S3JHVe&" + 
                    "showMetadata=kuyXOY9kYl&" + 
                    "timeout=Zom9kVBjscJg9Gv")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=lycyDKH6GILQv7q&" + 
                    "format=rPiV5mpnDrgmegWv&" + 
                    "showMetadata=AsokeYxfr&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bcircles=fZMN&" + 
                    "bpolys=C&" + 
                    "filter=gRnVgKjtXZ4tT&" + 
                    "showMetadata=xDLOxK&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(4))
                .body("'result'[0].'value'", numberMatches(651044.38))
                .body("'result'[1].'value'", numberMatches(687909.51))
                .body("'result'[2].'value'", numberMatches(698802.99))
                ; // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=ki0bKqW&" + 
                    "bcircles=9YmijO&" + 
                    "filter=nyHgiSv&" + 
                    "format=_SwcBL")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/type
    * 2 - (400) POST:/elements/perimeter/groupBy/type
    * 3 - (200) POST:/elements/perimeter/groupBy/type
    * 4 - (400) POST:/elements/perimeter/groupBy/type
    * 5 - (400) POST:/elements/perimeter/groupBy/type
    * 6 - (400) POST:/elements/perimeter/groupBy/type
    * 7 - (400) POST:/elements/perimeter/groupBy/type
    * 8 - (400) POST:/elements/perimeter/groupBy/type
    * 9 - (400) GET:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_89() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=YeqdaHPznksCThS&" + 
                    "bcircles=P&" + 
                    "bpolys=XqQKs_&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bpolys=XMz&" + 
                    "filter=CDrkPjfc_aG&" + 
                    "format=TnfxIAm&" + 
                    "showMetadata=bZc19m_c3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=geometry%3Apolygon+and+building%3D*")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(387503.58))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(14463.9));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?bcircles=IxJVKiW6T1S_t")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=DM&" + 
                    "bcircles=yXd_6n6uC&" + 
                    "time=MM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=V&" + 
                    "bcircles=AQLBHkE0xIW41j&" + 
                    "format=OGWSxOlwfsHKI0GN&" + 
                    "showMetadata=dJ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?bpolys=E12aFj1iV8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bpolys=3OvwjBA6yQ9HhW5n&" + 
                    "filter=uKaEZOVi&" + 
                    "format=5aeEPDVDJX0sWWn&" + 
                    "showMetadata=m6I&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bcircles=K&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density
    * 2 - (200) POST:/elements/length/density
    * 3 - (400) POST:/elements/length/density
    * 4 - (400) POST:/elements/length/density
    * 5 - (400) POST:/elements/length/density
    * 6 - (400) POST:/elements/length/density
    * 7 - (400) POST:/elements/length/density
    * 8 - (400) POST:/elements/length/density
    * 9 - (400) POST:/elements/length/density
    * 10 - (400) GET:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_90() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bpolys=D5k0Uo8TtSSF3wk&" + 
                    "format=mH&" + 
                    "showMetadata=sj4jie")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(130239.01));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=ubw&" + 
                    "format=QjnptKPj&" + 
                    "showMetadata=H&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=4QK&" + 
                    "bpolys=jOJ0Y7efQtB0dOfc&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=1OeLuj2&" + 
                    "format=json&" + 
                    "showMetadata=vL6WZyIB3R8&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=nLDSt&" + 
                    "bpolys=r_&" + 
                    "filter=0K_&" + 
                    "format=E&" + 
                    "timeout=m7i7NJaZZfGT")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=&" + 
                    "filter=NtbhD&" + 
                    "showMetadata=hoobZv1rQpOAla&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=gL&" + 
                    "bpolys=P2Mp4xd9j5Ba5pv&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=e0QwmJmZ8&" + 
                    "showMetadata=u5Yp6JkJqau125")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bpolys=ubfA2U&" + 
                    "filter=m&" + 
                    "format=GeymTiE&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density?timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_91() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=ZTAGwRgNLtmN&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4766932.83));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=&" + 
                    "bpolys=Xu46tNF6T&" + 
                    "filter=64Td86ghJ8m&" + 
                    "groupByKey=jE8MPZC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "filter=7Dg3w1tSj5o&" + 
                    "format=t3UGG&" + 
                    "groupByKey=mQNlMGDEZn6jXw&" + 
                    "showMetadata=M&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/groupBy/boundary
    * 3 - (400) POST:/elements/perimeter/groupBy/boundary
    * 4 - (400) POST:/elements/perimeter/groupBy/boundary
    * 5 - (400) POST:/elements/perimeter/groupBy/boundary
    * 6 - (400) POST:/elements/perimeter/groupBy/boundary
    * 7 - (400) POST:/elements/perimeter/groupBy/boundary
    * 8 - (200) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_92() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=Yom&" + 
                    "bpolys=&" + 
                    "format=6U&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bcircles=&" + 
                    "bpolys=Ot7vxHlbC4Le3&" + 
                    "filter=eOnK3Myao0wnOa_&" + 
                    "format=json&" + 
                    "showMetadata=c2ig7i_IE&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bpolys=YEnWKpJXh&" + 
                    "format=4&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=vGLHE37uV&" + 
                    "bpolys=erD2V&" + 
                    "filter=aUro6yp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=NFMoUnGGjUUtk&" + 
                    "bpolys=A7p4Cl9s_R&" + 
                    "filter=UWs7Rz0xCZ1R")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=fx4&" + 
                    "filter=TAEvyY_w&" + 
                    "format=64Zy&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=IISnyPPrEz&" + 
                    "bpolys=bVVsn&" + 
                    "time=Vj6s0D&" + 
                    "timeout=4FkQ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "format=json")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(743636.1));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/tag
    * 2 - (400) POST:/elements/count/groupBy/tag
    * 3 - (200) POST:/elements/count/groupBy/tag
    * 4 - (400) GET:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_93() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=yRnDPAkHRwM&" + 
                    "bcircles=3475IKq2EvvA&" + 
                    "bpolys=TLcVmk&" + 
                    "groupByKey=pzgEzW1yRjN&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=H04zPhOlBrp&" + 
                    "bcircles=jLX3yDm8nGZe1&" + 
                    "format=o&" + 
                    "groupByKey=32N&" + 
                    "showMetadata=aot&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=UGvP2&" + 
                    "groupByValues=0.0&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("UGvP2=0.0"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(32615.0));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bpolys=YQpdvsSdvcgAxQW5&" + 
                    "filter=aYLZ&" + 
                    "groupByKey=S5G_aA1nIT8jqk&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=C6&" + 
                    "timeout=3v")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/tag
    * 2 - (400) POST:/elements/area/density/groupBy/tag
    * 3 - (200) POST:/elements/area/density/groupBy/tag
    * 4 - (400) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_94() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "filter=pCfkDDq6JO&" + 
                    "format=Ly71UrFT&" + 
                    "groupByKey=Om_YOjb9V3xwuHtB&" + 
                    "groupByValues=WX6zt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "format=YL3YPL1qpxJ2d&" + 
                    "groupByKey=92&" + 
                    "groupByValues=4766932.83&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=WutNI&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4766932.83));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=VRp&" + 
                    "bcircles=GU&" + 
                    "bpolys=SenJlcLXWh&" + 
                    "format=2pj8Q7_D0dmktWE&" + 
                    "groupByKey=4HxF7K&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary
    * 2 - (400) POST:/elements/area/groupBy/boundary
    * 3 - (400) POST:/elements/area/groupBy/boundary
    * 4 - (400) POST:/elements/area/groupBy/boundary
    * 5 - (400) POST:/elements/area/groupBy/boundary
    * 6 - (400) POST:/elements/area/groupBy/boundary
    * 7 - (400) POST:/elements/area/groupBy/boundary
    * 8 - (200) POST:/elements/area/groupBy/boundary
    * 9 - (400) POST:/elements/area/groupBy/boundary
    * 10 - (400) GET:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_95() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bcircles=GGEicAgsO&" + 
                    "format=RIJo7PtAN2nN&" + 
                    "showMetadata=wwNhBVL0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=JZ7vZLqT3LHEApLX&" + 
                    "bcircles=DdWvby0mQRlKW9&" + 
                    "bpolys=OPROtA&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bpolys=vxRC3NKGue&" + 
                    "format=SihW4y&" + 
                    "showMetadata=eNgF6vfJWLs1FUq&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "format=zXVjihCKk3eW6&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=N&" + 
                    "bpolys=jSVCnB&" + 
                    "showMetadata=LN5AXI&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=M3&" + 
                    "filter=s8lwdfu&" + 
                    "format=json&" + 
                    "showMetadata=I")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=h7XHOOK8GRLu8_&" + 
                    "bpolys=M&" + 
                    "filter=yZK&" + 
                    "format=json&" + 
                    "showMetadata=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=type%3Away+and+natural%3D*")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(47518.29));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "filter=cHTaYS3eK6p_5&" + 
                    "format=uBaIUL&" + 
                    "showMetadata=tUl1mx3sbeYx6ON&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bcircles=HuvNw7&" + 
                    "format=hLZ&" + 
                    "showMetadata=MLLp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/key
    * 2 - (400) POST:/elements/length/groupBy/key
    * 3 - (400) POST:/elements/length/groupBy/key
    * 4 - (200) POST:/elements/length/groupBy/key
    * 5 - (400) POST:/elements/length/groupBy/key
    * 6 - (400) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_96() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bpolys=rm7St5UeBEN&" + 
                    "format=eV1ik&" + 
                    "groupByKeys=M5ZH5CIfxAtj5PJ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=e6eZ&" + 
                    "format=0n&" + 
                    "groupByKeys=bAjmwsa&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=cdkqyCE")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=Y&" + 
                    "bpolys=r8GsTv&" + 
                    "filter=wB&" + 
                    "format=tcy&" + 
                    "groupByKeys=R&" + 
                    "showMetadata=dPlNePR&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKeys=2_sKnaKzCrkur0E8")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("2_sKnaKzCrkur0E8"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(1261521.49));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=oG&" + 
                    "bcircles=tMwXS95uwCk0&" + 
                    "bpolys=cJD&" + 
                    "filter=golb6i&" + 
                    "format=XM9oXDMubZC4&" + 
                    "groupByKeys=1VvZ5O")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=vjHv4zm3&" + 
                    "format=&" + 
                    "groupByKeys=highway")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 4 - (200) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_97() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=zm9dP1kU&" + 
                    "groupByKey=CTJYuJ4CkImDG&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=yIfosIq&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=wIHJuyxKX9t22P&" + 
                    "bcircles=&" + 
                    "bpolys=wWP5uL1qKx7S4&" + 
                    "format=3docwfXWxR02K_v&" + 
                    "groupByKey=T9C4qJxh&" + 
                    "showMetadata=9GhNX1F&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=v0KerMxQ&" + 
                    "bcircles=HTXqFncW4K6efIV&" + 
                    "filter=3H0v&" + 
                    "format=EiJ3vt&" + 
                    "groupByKey=X6ayrfscbRkjwgd&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=eb")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(130239.01));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/tag
    * 2 - (400) POST:/elements/count/groupBy/tag
    * 3 - (400) POST:/elements/count/groupBy/tag
    * 4 - (200) GET:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_98() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bcircles=0uJXGaGFCi&" + 
                    "filter=g&" + 
                    "format=rL7zTjGuaU&" + 
                    "groupByKey=iEu&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=fE41wRmvViaprxqI&" + 
                    "bpolys=puYYtbZ&" + 
                    "groupByKey=nC5Y3dHR55")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=12cRQ5MjDuhVEpWH&" + 
                    "bpolys=pUrjiK1au&" + 
                    "groupByKey=0A_b&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=&" + 
                    "groupByKey=SgfVJ5217&" + 
                    "groupByValues=65.97&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("SgfVJ5217=65.97"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(32615.0));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/tag
    * 2 - (400) POST:/elements/count/density/groupBy/tag
    * 3 - (200) POST:/elements/count/density/groupBy/tag
    * 4 - (400) POST:/elements/count/density/groupBy/tag
    * 5 - (400) GET:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_99() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=6f_wLI&" + 
                    "groupByKey=VsVB&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bcircles=ue9xdbTyR0ZmkN8L&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=ip")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=Kf&" + 
                    "groupByValues=743636.1")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("Kf=743636.1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(3367.16));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bcircles=D1AaYYWG9h6aVJS&" + 
                    "format=xNI9MRqXnDlIalBO&" + 
                    "groupByKey=&" + 
                    "groupByValues=743636.1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=&" + 
                    "filter=6QZ4ZaKIka4RAKk&" + 
                    "format=Nn2&" + 
                    "groupByKey=4rbwkdkks&" + 
                    "groupByValues=0.0&" + 
                    "timeout=kMvFqorm09dM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/count/density
    * 2 - (400) POST:/contributions/latest/count/density
    * 3 - (400) POST:/contributions/latest/count/density
    * 4 - (200) POST:/contributions/latest/count/density
    * 5 - (400) POST:/contributions/latest/count/density
    * 6 - (400) GET:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_100() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bpolys=UuSxpUlKr7Jky&" + 
                    "filter=H1fCGd539&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=e820gKRYl&" + 
                    "contributionType=j6H8i3ZByHHc&" + 
                    "format=9Ifl9M7zc5MilBD&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=3se&" + 
                    "bcircles=Cc&" + 
                    "bpolys=6H114RML&" + 
                    "contributionType=60t06ryQ6Rg_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(3))
                .body("'result'[0].'fromTimestamp'", containsString("2014-01-01T00:00:00Z"))
                .body("'result'[0].'toTimestamp'", containsString("2015-01-01T00:00:00Z"))
                .body("'result'[0].'value'", numberMatches(574.63))
                .body("'result'[1].'fromTimestamp'", containsString("2015-01-01T00:00:00Z"))
                .body("'result'[1].'toTimestamp'", containsString("2016-01-01T00:00:00Z"))
                .body("'result'[1].'value'", numberMatches(618.2))
                .body("'result'[2].'fromTimestamp'", containsString("2016-01-01T00:00:00Z"))
                .body("'result'[2].'toTimestamp'", containsString("2017-01-01T00:00:00Z"))
                .body("'result'[2].'value'", numberMatches(746.01));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "format=MwblrEEt12aka&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=Xl3zrPQ&" + 
                    "bpolys=s622&" + 
                    "contributionType=Am_A1L&" + 
                    "format=nigwQcAzB&" + 
                    "showMetadata=YcSVNUrm&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/key
    * 2 - (400) POST:/elements/length/groupBy/key
    * 3 - (400) POST:/elements/length/groupBy/key
    * 4 - (400) POST:/elements/length/groupBy/key
    * 5 - (200) POST:/elements/length/groupBy/key
    * 6 - (400) POST:/elements/length/groupBy/key
    * 7 - (400) POST:/elements/length/groupBy/key
    * 8 - (400) POST:/elements/length/groupBy/key
    * 9 - (400) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_101() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=LkQtVblcfs&" + 
                    "format=l18LAN11NIKFva&" + 
                    "groupByKeys=G1BoBZTxUO8YDu&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=rPYz&" + 
                    "bpolys=7zU8ySDpzQegXXl&" + 
                    "format=zk63vBsj&" + 
                    "groupByKeys=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=ebzs7v&" + 
                    "bcircles=i&" + 
                    "filter=8WS&" + 
                    "format=Mu0uX&" + 
                    "groupByKeys=highway&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "filter=tyN0NOH&" + 
                    "format=5ZOZT&" + 
                    "groupByKeys=sSG5eF&" + 
                    "showMetadata=PPZdT&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKeys=_U&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("_U"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(1261521.49));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bpolys=_TVOLHuiTOXho2&" + 
                    "groupByKeys=yZMQ&" + 
                    "showMetadata=EO6E8WC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bcircles=tEMNh5rNY&" + 
                    "groupByKeys=hnEOdIVkR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=_0k8D&" + 
                    "bcircles=K6wU&" + 
                    "groupByKeys=iPBC4adX&" + 
                    "showMetadata=rW9Q0ONhDh&" + 
                    "time=MultiPolygon&" + 
                    "timeout=QaEQSsRVRYHdPm")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=&" + 
                    "bcircles=VKUmrL08MmqIi&" + 
                    "filter=oeqs7cx&" + 
                    "groupByKeys=ofo3w2qR_Mt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/groupBy/tag
    * 3 - (200) POST:/elements/perimeter/groupBy/tag
    * 4 - (400) POST:/elements/perimeter/groupBy/tag
    * 5 - (400) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_102() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=6_OO56RsGukXUv8&" + 
                    "bpolys=ZlV6HB&" + 
                    "groupByKey=iv26vPAL0fY&" + 
                    "showMetadata=rVFwNA7Ud7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bpolys=n4tE_7lAHaQ&" + 
                    "filter=TlHdLfNThKkFhUe&" + 
                    "groupByKey=uKz&" + 
                    "groupByValues=718314.9&" + 
                    "showMetadata=xYVcfrPns&" + 
                    "timeout=iDcWgti2KItqN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=0D2r&" + 
                    "groupByValues=8797443.19&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("0D2r=8797443.19"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(743636.1));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bpolys=yH&" + 
                    "filter=Oi1mSChpiO&" + 
                    "format=mn&" + 
                    "groupByKey=4KSwTu2kB9rEHa9Q&" + 
                    "showMetadata=zRD&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bcircles=yoL&" + 
                    "bpolys=e7g2DJJ&" + 
                    "filter=6&" + 
                    "groupByKey=9gv3CaM_z&" + 
                    "showMetadata=fY6RjC&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/perimeter/density/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/density/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_103() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(76772.71));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bcircles=b0m&" + 
                    "bpolys=&" + 
                    "filter=&" + 
                    "format=w&" + 
                    "groupByKey=vGtAucou&" + 
                    "showMetadata=Plq0etT7C4JvsPf&" + 
                    "time=IGJowxhr40iV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=gE5PTtCPB5&" + 
                    "bpolys=m75BAQ&" + 
                    "filter=QE0pqVxMWJwcZ&" + 
                    "groupByKey=1TX_&" + 
                    "time=Jakdnv_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 4 - (200) GET:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_104() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "filter=v&" + 
                    "groupByKey=building&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=f0eyAVvD_bx&" + 
                    "bcircles=Ha1N&" + 
                    "bpolys=_YUQ&" + 
                    "format=czxrKNHPCh&" + 
                    "groupByKey=JfNidLN2UCh&" + 
                    "groupByValues=651044.38&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=gF2a6S4veaRd&" + 
                    "filter=&" + 
                    "groupByKey=Kr1tNkphYq&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=OIwR_fDM&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(1261521.49));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/tag
    * 2 - (400) POST:/elements/count/density/groupBy/tag
    * 3 - (400) POST:/elements/count/density/groupBy/tag
    * 4 - (400) POST:/elements/count/density/groupBy/tag
    * 5 - (400) POST:/elements/count/density/groupBy/tag
    * 6 - (200) GET:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_105() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=QOTCg1piQTFJWTE&" + 
                    "bcircles=K4Epl2a&" + 
                    "bpolys=AlzwItDOU&" + 
                    "groupByKey=&" + 
                    "showMetadata=R7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bcircles=&" + 
                    "bpolys=&" + 
                    "filter=XNJqPZ&" + 
                    "format=v&" + 
                    "groupByKey=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=sMLMmlgCZ0Jq1&" + 
                    "bpolys=pc6t2&" + 
                    "format=03gc&" + 
                    "groupByKey=yGzRGV3wY8Bwzb7&" + 
                    "groupByValues=4766932.83&" + 
                    "showMetadata=9L0DTCUBWbSQ_&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bcircles=6une&" + 
                    "bpolys=CN5AzcXxq&" + 
                    "filter=3klE&" + 
                    "groupByKey=Edx6uNylSnCD&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=k&" + 
                    "format=&" + 
                    "groupByKey=ZxTvIndXnlpFx6&" + 
                    "groupByValues=4766932.83&" + 
                    "showMetadata=w4Ts07qiPCxdxa1w&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=BGJbnqGt4l5odGA8&" + 
                    "groupByValues=651044.38&" + 
                    "showMetadata=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("BGJbnqGt4l5odGA8=651044.38"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(3367.16));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (200) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 4 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 5 - (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_106() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "groupByKey=d&" + 
                    "showMetadata=8Ie4mC3dA7eBD&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=&" + 
                    "groupByKey=O8lNaeGPGSj8Ivz")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(3367.16));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=727OCRVfe5Jg&" + 
                    "filter=cpNLtduIDJ4A9m_o&" + 
                    "format=fn7ra2lC7&" + 
                    "groupByKey=8iSYo&" + 
                    "showMetadata=z0QFCUWsx0bq&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=57vW1&" + 
                    "groupByKey=Z3sg2Kt95IGHJ&" + 
                    "time=u5jZCgNKzAldU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=oxUlbenKr355&" + 
                    "bpolys=Fl2QFtPB7jF0rT44&" + 
                    "groupByKey=building&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 4 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 5 - (200) GET:/elements/area/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_107() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=maJ&" + 
                    "bcircles=ZKJlcZx7ER4vP&" + 
                    "bpolys=C2L_OfDiCfdbd8L&" + 
                    "groupByKey=Ab8Or6GMou&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=UGjQVfz&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "filter=08qjyN2m41&" + 
                    "format=7sj1Uki&" + 
                    "groupByKey=7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=pqd7bM79Y&" + 
                    "groupByKey=&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=aKwbX1SLvxd8m&" + 
                    "bpolys=pd3WmcDw5gu&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=H1dHcUKD")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=gPdbjoPBnRx&" + 
                    "groupByValues=xmEZ")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "gPdbjoPBnRx=xmEZ"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(4.617347922E7));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 3 - (200) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 4 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 5 - (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_108() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=d&" + 
                    "filter=zny2srs&" + 
                    "groupByKey=6TB&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=Mc8&" + 
                    "bpolys=kIj6boE03&" + 
                    "filter=0&" + 
                    "format=TAAEXx1o&" + 
                    "groupByKey=ORzOOMi&" + 
                    "groupByValues=8797443.19&" + 
                    "showMetadata=OZoBq7eOF&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=re5O1oCta7y0m5&" + 
                    "groupByValues=1529.91")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "re5O1oCta7y0m5=1529.91"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(3367.16));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=WSHtYCTT8SjSX&" + 
                    "bcircles=focGb4GzX&" + 
                    "groupByKey=LPJJFb4WkAvkV&" + 
                    "groupByValues=61015.69&" + 
                    "showMetadata=&" + 
                    "time=q7u")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=uR_kHchBi55YD40&" + 
                    "filter=TENZ8Tg&" + 
                    "groupByKey=003mvF3S&" + 
                    "groupByValues=61015.69&" + 
                    "showMetadata=Bj&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/key
    * 2 - (200) POST:/elements/area/groupBy/key
    * 3 - (400) POST:/elements/area/groupBy/key
    * 4 - (400) POST:/elements/area/groupBy/key
    * 5 - (400) POST:/elements/area/groupBy/key
    * 6 - (400) GET:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_109() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "groupByKeys=building&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=json&" + 
                    "groupByKeys=FR302CWuzkb&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("FR302CWuzkb"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bcircles=oL0bEHA0EepYC&" + 
                    "bpolys=ORV2NoapIQc&" + 
                    "groupByKeys=8r7__AEVFII2O0&" + 
                    "showMetadata=nR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=vh7_&" + 
                    "filter=VfCOz2FU4Hl9y4U&" + 
                    "format=Y1nPY7Hr89DkIFcp&" + 
                    "groupByKeys=bsIrW&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=R9x9CgXVgGS_a&" + 
                    "groupByKeys=Se&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "filter=eF_HF0YLP_zp&" + 
                    "groupByKeys=ySdzccWPyXywE&" + 
                    "showMetadata=mB")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/groupBy/tag
    * 3 - (400) POST:/elements/perimeter/groupBy/tag
    * 4 - (400) POST:/elements/perimeter/groupBy/tag
    * 5 - (400) POST:/elements/perimeter/groupBy/tag
    * 6 - (200) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_110() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "filter=nyLgAr1OR1QMGKqG&" + 
                    "groupByKey=jDF5iUovktCKo6Nj&" + 
                    "showMetadata=hJdsQVxMda1ifC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=OO1jtZ8&" + 
                    "bcircles=7Ff_y6Z&" + 
                    "bpolys=_MrrJHxd&" + 
                    "filter=Bc&" + 
                    "format=&" + 
                    "groupByKey=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bcircles=PRIhFdXt9xE&" + 
                    "bpolys=EvkV2z834zFKUO&" + 
                    "groupByKey=zAV&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=d_2q&" + 
                    "bcircles=ToUbQFSioqfA&" + 
                    "bpolys=fRbVls&" + 
                    "groupByKey=yLgWZ&" + 
                    "groupByValues=130239.01&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bcircles=Cbd2&" + 
                    "filter=Cc0vvXyclkU&" + 
                    "format=hJ16QPwVd&" + 
                    "groupByKey=fQ0_77HKQoUf&" + 
                    "groupByValues=8797443.19&" + 
                    "showMetadata=3NPA1cA&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=hWa4&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("hWa4=0.0"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(743636.1));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 4 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 5 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 6 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 7 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 8 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 9 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 10 - (200) GET:/elements/area/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_111() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=GPvd&" + 
                    "bpolys=kjfp&" + 
                    "filter=&" + 
                    "groupByKey=piiqEtBu&" + 
                    "groupByValues=1261521.49&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=cpU&" + 
                    "bcircles=EW&" + 
                    "bpolys=lZ&" + 
                    "groupByKey=wel4yi2SrtRSKb_V&" + 
                    "timeout=avipClxByZRPITA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=9j2QEc9KzXOFqPWI&" + 
                    "bpolys=I09xVI4VDpZ&" + 
                    "filter=&" + 
                    "groupByKey=_TKFBS_Xxd8hlYb&" + 
                    "groupByValues=130239.01&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=j07x9sfnG2tfBn42&" + 
                    "bpolys=qWLy&" + 
                    "filter=pxlMn&" + 
                    "groupByKey=N2FlONRYby8j&" + 
                    "showMetadata=mCT91fs3G")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=IQcb&" + 
                    "format=2ie2vc7e3qmpMEJ3&" + 
                    "groupByKey=5EFsf&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=2p8WnR8Z7&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=AQlO0bVNu6COVrD&" + 
                    "groupByKey=9FervllDVTMQ3&" + 
                    "showMetadata=Q46ty4G9pVilth_n&" + 
                    "time=Js")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "filter=Hmd9ZQdCBUoCznE&" + 
                    "format=ibMKUqbRS1WM&" + 
                    "groupByKey=XlYmHpPMaVc&" + 
                    "showMetadata=2yrpssBE7zeRGo5")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=F&" + 
                    "format=xnz2Nr7NFyMZ1&" + 
                    "groupByKey=iOrc7FCKLbTu0&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=jDluf_H2")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=d00GjFXN&" + 
                    "bpolys=Myz5&" + 
                    "format=OqKCVqK3jyR&" + 
                    "groupByKey=C8T3OeK&" + 
                    "showMetadata=2rZ&" + 
                    "time=MultiPolygon&" + 
                    "timeout=7trq36yAE")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=&" + 
                    "groupByKey=Jpvo7LSaq1iP")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4.617347922E7));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/centroid
    * 2 - (200) POST:/elements/centroid
    * 3 - (400) POST:/elements/centroid
    * 4 - (400) POST:/elements/centroid
    * 5 - (400) POST:/elements/centroid
    * 6 - (400) POST:/elements/centroid
    * 7 - (400) POST:/elements/centroid
    * 8 - (400) GET:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_112() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=dTfCkMAxOQB5_nV&" + 
                    "bcircles=fu0Nv4WgCiaE&" + 
                    "bpolys=0M8jy&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("*/*")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(200)
                .assertThat()
                ; // the response payload was too large, above the threshold of 1000000 bytes. No assertion on it is therefore generated.
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "clipGeometry=IedhjtDKqeKta4&" + 
                    "properties=tags&" + 
                    "showMetadata=xv&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=ViJh4Qcj3vviEj&" + 
                    "bcircles=KHl2S1&" + 
                    "bpolys=&" + 
                    "showMetadata=cA0nrXCLfNmTZ4bp&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bcircles=Lt4fflx&" + 
                    "clipGeometry=gwrabOEBW&" + 
                    "filter=XTi_FvEyH4uuVT&" + 
                    "time=MultiPolygon&" + 
                    "timeout=X")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=2cZWSkO&" + 
                    "bcircles=Oo1RRDxH3&" + 
                    "bpolys=W8n&" + 
                    "clipGeometry=rL6AT7oyd&" + 
                    "filter=d_5YmwXLCKohqU&" + 
                    "showMetadata=&" + 
                    "time=Gwfq2H3rtG5mO8e&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=XuHM_UyI19kCj1h8&" + 
                    "bcircles=wkJiho&" + 
                    "bpolys=L55U&" + 
                    "clipGeometry=hvTUr5&" + 
                    "filter=tTOnxHBCHt&" + 
                    "showMetadata=jX4Ask_&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=VUy&" + 
                    "bcircles=USntS&" + 
                    "bpolys=ThGzIhZ1&" + 
                    "clipGeometry=euxGC&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/tag
    * 3 - (200) POST:/elements/area/groupBy/tag
    * 4 - (400) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_113() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=U0&" + 
                    "filter=YCI&" + 
                    "groupByKey=2sFB_WcbiGzTSxgj&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=y9cmBKg0d4b3GJ&" + 
                    "bcircles=i7xoF004FTOcta&" + 
                    "filter=w2Z7a2YIi874&" + 
                    "groupByKey=aYOSxe4gERoCe&" + 
                    "showMetadata=b&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=building&" + 
                    "groupByValues=687909.51&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4.617347922E7))
                .body("'groupByResult'[1].'groupByObject'", containsString("building=687909.51"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(0.0));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=OsLa5JhLYAml&" + 
                    "bpolys=5U&" + 
                    "filter=8zNXE4_aCJ5cYn&" + 
                    "groupByKey=2s7rktF5vIi&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/tag
    * 2 - (400) POST:/elements/area/density/groupBy/tag
    * 3 - (400) POST:/elements/area/density/groupBy/tag
    * 4 - (400) POST:/elements/area/density/groupBy/tag
    * 5 - (400) POST:/elements/area/density/groupBy/tag
    * 6 - (400) POST:/elements/area/density/groupBy/tag
    * 7 - (400) POST:/elements/area/density/groupBy/tag
    * 8 - (400) POST:/elements/area/density/groupBy/tag
    * 9 - (400) POST:/elements/area/density/groupBy/tag
    * 10 - (200) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_114() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=k_LGmUTi9FhIO&" + 
                    "bcircles=ABnZKi8zW&" + 
                    "groupByKey=3bl&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bcircles=T&" + 
                    "groupByKey=O_yX6&" + 
                    "groupByValues=130239.01&" + 
                    "showMetadata=GU9NRMW_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=nfsL8I&" + 
                    "bcircles=yiYOGJ2rp92&" + 
                    "bpolys=RHM8qJNWT3I2IlD&" + 
                    "groupByKey=J6B&" + 
                    "groupByValues=4.617347922E7&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bpolys=klU&" + 
                    "format=BFxS3im&" + 
                    "groupByKey=LR&" + 
                    "showMetadata=JQVPcnR&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=T6csGwR_c&" + 
                    "filter=8gyEhiK44g&" + 
                    "format=Rec&" + 
                    "groupByKey=building&" + 
                    "groupByValues=698802.99&" + 
                    "time=MultiPolygon&" + 
                    "timeout=4w0HP53GuER7V4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=lZ&" + 
                    "bcircles=G6NLWJ0&" + 
                    "bpolys=0zbO325hKJzHPM&" + 
                    "filter=phELQQm&" + 
                    "format=IJ6miND&" + 
                    "groupByKey=cjesL5&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=52aipuue&" + 
                    "timeout=Wd6T73DNH2C2")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bcircles=TAO&" + 
                    "bpolys=&" + 
                    "filter=44XSUHy0Ka2Sh3IR&" + 
                    "groupByKey=mV1CoEzwHYsLY&" + 
                    "groupByValues=698802.99&" + 
                    "time=VGVp3epmV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=&" + 
                    "filter=cejdCfJZMpw&" + 
                    "format=&" + 
                    "groupByKey=V0UT&" + 
                    "groupByValues=130239.01&" + 
                    "showMetadata=Kvz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bcircles=TACFed6ELhB&" + 
                    "filter=6qB&" + 
                    "groupByKey=Hzdvz&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=HYiKSuDHQspIa&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=&" + 
                    "groupByKey=1gWwrRR&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4766932.83));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/groupBy/tag
    * 3 - (400) POST:/elements/perimeter/groupBy/tag
    * 4 - (400) POST:/elements/perimeter/groupBy/tag
    * 5 - (200) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_115() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=OdF&" + 
                    "bpolys=hXJBpAxa&" + 
                    "filter=0w8zerXRIN4Q&" + 
                    "groupByKey=PTm058ncFblRZQ&" + 
                    "showMetadata=mZu4&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bcircles=XB9ccoWi4eB&" + 
                    "bpolys=_p&" + 
                    "filter=&" + 
                    "groupByKey=9X4LG&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=LNRKv&" + 
                    "format=bnwvs954p&" + 
                    "groupByKey=2e5zul&" + 
                    "showMetadata=KG6PiBEcjMP4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=d21PD2dZVqLbYa5u&" + 
                    "bcircles=tI5ShAW3iK&" + 
                    "bpolys=_ojj9&" + 
                    "groupByKey=DjYb6AE2o&" + 
                    "groupByValues=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=XrxHuqFnfp&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(743636.1));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 4 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 5 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 6 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 7 - (200) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 8 - (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_116() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=KsaW4vM1b8GHRl&" + 
                    "bcircles=6XmwLQeOOm&" + 
                    "bpolys=seAbKCKwtSyrpr2&" + 
                    "filter=P&" + 
                    "groupByKey=nGIjIIfKiQmkq&" + 
                    "groupByValues=130239.01&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=f&" + 
                    "filter=84gWaG&" + 
                    "format=m_x&" + 
                    "groupByKey=eaqaYodZPj_ez8uv&" + 
                    "groupByValues=718314.9&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=yihPgQAtOBwkXMbP&" + 
                    "filter=&" + 
                    "format=&" + 
                    "groupByKey=C&" + 
                    "groupByValues=8797443.19&" + 
                    "showMetadata=4&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "groupByKey=DpMkH&" + 
                    "groupByValues=4.617347922E7&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=runLhfgj&" + 
                    "format=f944ryh5CzBv&" + 
                    "groupByKey=jYFqMZ_&" + 
                    "groupByValues=130239.01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=Dm&" + 
                    "bpolys=P_JNfyQE&" + 
                    "filter=_hx7ozjQf&" + 
                    "format=o1KiRVOjFmwgRII&" + 
                    "groupByKey=8DTZ8Qtrn8kTk&" + 
                    "time=pa4a5CJo0CWNohn&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=_HnC&" + 
                    "showMetadata=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(130239.01));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=7aYmHkRDfPs&" + 
                    "bpolys=Fq8&" + 
                    "filter=JQVK&" + 
                    "groupByKey=G1on8eAqTkDAjRkz&" + 
                    "showMetadata=JlxB7RWj0N4XmdP&" + 
                    "time=MultiPolygon&" + 
                    "timeout=pLjLiVri2zl")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 2 - (200) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 4 - (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_117() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=gpdXc6_&" + 
                    "bcircles=GbgjfO&" + 
                    "filter=AHqHjhc4uXwZJz&" + 
                    "groupByKey=&" + 
                    "groupByValues=3.737603603E7&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=building&" + 
                    "groupByValues=3.737603603E7")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(130239.01))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "building=3.737603603E7"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(0.0));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=Wg_BKvDOcS0a9Vh&" + 
                    "filter=eOPUPJZHDRONZZ7u&" + 
                    "groupByKey=OXGxm93lPUq&" + 
                    "time=fl6JzvEIFeUi_SL&" + 
                    "timeout=HxDsYO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?groupByKey=0TZ7F14S3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/tag
    * 2 - (200) POST:/elements/area/groupBy/tag
    * 3 - (400) POST:/elements/area/groupBy/tag
    * 4 - (400) POST:/elements/area/groupBy/tag
    * 5 - (400) POST:/elements/area/groupBy/tag
    * 6 - (400) POST:/elements/area/groupBy/tag
    * 7 - (400) POST:/elements/area/groupBy/tag
    * 8 - (400) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_118() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=ZQIR2&" + 
                    "bpolys=J1_PI2dfjVSptKF7&" + 
                    "format=rGBFSX4K&" + 
                    "groupByKey=fiELZTzi&" + 
                    "showMetadata=&" + 
                    "time=DOhcgcsqfHg3G")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=EWjWc8&" + 
                    "showMetadata=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=lYPH00e_tVSqB&" + 
                    "bpolys=pidDvmVjaNEVesIE&" + 
                    "groupByKey=W&" + 
                    "showMetadata=o&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=gSADu66xGG6&" + 
                    "bcircles=ZUb_k&" + 
                    "filter=OfzvchhEIav2&" + 
                    "groupByKey=5xK&" + 
                    "showMetadata=7pgLjIiLga1&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=j33KHLrS&" + 
                    "bpolys=zdddg8cYN&" + 
                    "groupByKey=W6_JM&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=TKd&" + 
                    "bcircles=H8DcfnP9RYc&" + 
                    "filter=1IXprxwS&" + 
                    "groupByKey=t6uoNTOZhNV7n&" + 
                    "groupByValues=651044.38&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=6HFo9j0VK&" + 
                    "bcircles=bLlpikXwjZUYq&" + 
                    "filter=_4a_IjYpo7qv&" + 
                    "groupByKey=YHDfk6d&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "groupByKey=H&" + 
                    "showMetadata=05&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elementsFullHistory/bbox
    * 2 - (400) POST:/elementsFullHistory/bbox
    * 3 - (400) POST:/elementsFullHistory/bbox
    * 4 - (400) POST:/elementsFullHistory/bbox
    * 5 - (400) POST:/elementsFullHistory/bbox
    * 6 - (400) POST:/elementsFullHistory/bbox
    * 7 - (200) POST:/elementsFullHistory/bbox
    * 8 - (400) POST:/elementsFullHistory/bbox
    * 9 - (400) POST:/elementsFullHistory/bbox
    * 10 - (400) GET:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_119() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bcircles=z55fCeyuC9Lkd&" + 
                    "bpolys=he&" + 
                    "properties=KN&" + 
                    "showMetadata=lg4SyDOnX&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bpolys=JCpDdqzaPXV&" + 
                    "filter=cT&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=i0vATCWpgv")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bcircles=LRYr2e&" + 
                    "bpolys=&" + 
                    "clipGeometry=W&" + 
                    "properties=iVimqs1NN6Ucw&" + 
                    "time=sJCwPpye8etO2rRj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=T&" + 
                    "clipGeometry=xIdOnPQN4w&" + 
                    "properties=AqjRui29pm3Rk&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bcircles=1_Y4PoZCxPVcPh&" + 
                    "filter=ztnSb2SnYoQ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bcircles=SHUSplM20zuC&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("*/*")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "clipGeometry=true&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                ; // the response payload was too large, above the threshold of 1000000 bytes. No assertion on it is therefore generated.
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=4gU2eyoHB7tZ&" + 
                    "filter=2&" + 
                    "showMetadata=pztm0NaUD&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bcircles=hYSh&" + 
                    "filter=1K&" + 
                    "properties=NH_fIO8mXThUaf&" + 
                    "showMetadata=F0y&" + 
                    "time=tzDaC5&" + 
                    "timeout=snFB8bSOEEE")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "clipGeometry=xO3UXlM5x_70sYYf&" + 
                    "properties=s&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/length/density/groupBy/tag
    * 2 - (400) POST:/elements/length/density/groupBy/tag
    * 3 - (400) POST:/elements/length/density/groupBy/tag
    * 4 - (400) POST:/elements/length/density/groupBy/tag
    * 5 - (400) POST:/elements/length/density/groupBy/tag
    * 6 - (400) POST:/elements/length/density/groupBy/tag
    * 7 - (400) POST:/elements/length/density/groupBy/tag
    * 8 - (400) POST:/elements/length/density/groupBy/tag
    * 9 - (400) POST:/elements/length/density/groupBy/tag
    * 10 - (400) GET:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_120() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=&" + 
                    "groupByKey=iRE53h0YNTSHs&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(130239.01));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bpolys=PzjST&" + 
                    "format=YdeSCVXJ9QpkMb&" + 
                    "groupByKey=MzvuLd7iHERc&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bcircles=AFBfWA&" + 
                    "groupByKey=BOG7QRoY5ad&" + 
                    "groupByValues=76772.71&" + 
                    "showMetadata=n&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=EpO&" + 
                    "bpolys=P_zm5rV_MGJ3&" + 
                    "format=v2s73k&" + 
                    "groupByKey=tJk_R8Q2rKLnm&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bcircles=swhw69UYEzHuIUAd&" + 
                    "filter=aMPh4F&" + 
                    "format=65ey_3wQ9HyO3&" + 
                    "groupByKey=m&" + 
                    "showMetadata=8QdND&" + 
                    "time=wTj894Yvl")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bcircles=E8xdPU7&" + 
                    "groupByKey=hV&" + 
                    "showMetadata=mNc3_GfD29nOhV&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bcircles=iWvdTBrWJk&" + 
                    "bpolys=wAXfxRU8KXY&" + 
                    "format=O&" + 
                    "groupByKey=f9H2pQVq0xEXaETS&" + 
                    "showMetadata=VU4FeZQHbH_W&" + 
                    "time=trrjfXl")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=sUYjXLsG5Ug1R4&" + 
                    "bcircles=OY_kbtf&" + 
                    "bpolys=0iLcID&" + 
                    "filter=6_5PNe8pXzZZX&" + 
                    "format=Ng9ACWqY&" + 
                    "groupByKey=j4_2hNLAm&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=KlX_ySpTKzotg")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=22eHGqhv&" + 
                    "filter=Umf6j_avBYxk3h6h&" + 
                    "format=HTNcv&" + 
                    "groupByKey=8EaSRt0OI7AhcYK9&" + 
                    "showMetadata=GW5H&" + 
                    "time=MultiPolygon&" + 
                    "timeout=Wrc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=Msrc0qDZoVb8Vqp&" + 
                    "bcircles=&" + 
                    "bpolys=d&" + 
                    "filter=e_8wHU&" + 
                    "format=yYeQo1t5tXxd0&" + 
                    "groupByKey=C8UQ8QUotcgFYFBZ&" + 
                    "groupByValues=ZUp&" + 
                    "showMetadata=Z6yfUrAdL&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/tag
    * 2 - (200) POST:/elements/area/density/groupBy/tag
    * 3 - (400) POST:/elements/area/density/groupBy/tag
    * 4 - (400) POST:/elements/area/density/groupBy/tag
    * 5 - (400) POST:/elements/area/density/groupBy/tag
    * 6 - (400) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_121() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=PlRg7Z8AsDqhG8&" + 
                    "bcircles=NVnhmFvfB8&" + 
                    "format=5T2&" + 
                    "groupByKey=O_5V&" + 
                    "groupByValues=3367.16")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "groupByKey=rRaM&" + 
                    "groupByValues=4.617347922E7&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("rRaM=4.617347922E7"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(4766932.83));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=&" + 
                    "filter=mDhTVLBdz2Ql&" + 
                    "groupByKey=building&" + 
                    "showMetadata=wtAie")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "filter=XRHWHeM3oGEv_L9&" + 
                    "groupByKey=in&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=SmGJHS8BjZu&" + 
                    "bcircles=nr&" + 
                    "filter=xdBnsvd6jre22&" + 
                    "format=qahONU_NhhkfT&" + 
                    "groupByKey=8K4QVEqoT6B&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=MAMKAMPoo&" + 
                    "bpolys=gq&" + 
                    "groupByKey=&" + 
                    "showMetadata=Qss")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/tag
    * 3 - (200) POST:/elements/area/groupBy/tag
    * 4 - (400) POST:/elements/area/groupBy/tag
    * 5 - (400) POST:/elements/area/groupBy/tag
    * 6 - (400) POST:/elements/area/groupBy/tag
    * 7 - (400) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_122() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=LdOmc1U&" + 
                    "bcircles=m3DTsy4_gz&" + 
                    "bpolys=&" + 
                    "filter=QSI8&" + 
                    "groupByKey=pB3MWO0OMZd&" + 
                    "groupByValues=8797443.19&" + 
                    "showMetadata=GTtIsMmfinsd&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bpolys=o_Mr7tCVLZHn&" + 
                    "filter=bZ2RH&" + 
                    "groupByKey=BrfF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=&" + 
                    "groupByKey=e7d52_558o")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=goLJJG9Pp4&" + 
                    "bcircles=Wbdi9rl74uzBc&" + 
                    "groupByKey=mtAwpDgLYh&" + 
                    "timeout=V5vWYkzzkKgH2R")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=fn2Oc126VHp3eWkd&" + 
                    "filter=cMsbss&" + 
                    "groupByKey=O3SF&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=ZLdqJBj4hBprZiN&" + 
                    "bpolys=XyclAYlN0nqBTi&" + 
                    "filter=NeN7LKGT6wB&" + 
                    "format=json&" + 
                    "groupByKey=NZ9rP&" + 
                    "groupByValues=130239.01&" + 
                    "showMetadata=nJ19AVHCDKetwqe&" + 
                    "timeout=B7d")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "filter=tjXAmPDF&" + 
                    "groupByKey=Eb7ZNKPatE&" + 
                    "groupByValues=IFB_Z4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/groupBy/tag
    * 3 - (400) POST:/elements/perimeter/groupBy/tag
    * 4 - (400) POST:/elements/perimeter/groupBy/tag
    * 5 - (400) POST:/elements/perimeter/groupBy/tag
    * 6 - (400) POST:/elements/perimeter/groupBy/tag
    * 7 - (200) POST:/elements/perimeter/groupBy/tag
    * 8 - (400) POST:/elements/perimeter/groupBy/tag
    * 9 - (400) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_123() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=G_CDJx&" + 
                    "bpolys=gO0&" + 
                    "filter=O&" + 
                    "format=RJee4E0QeutGOn&" + 
                    "groupByKey=137adtZAp3_e&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bcircles=v9m&" + 
                    "filter=4S0AaZwq&" + 
                    "groupByKey=cWtHE0x2ph3JqE7G&" + 
                    "groupByValues=RhL5WSyv&" + 
                    "showMetadata=nH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=s0pZC8kxhf&" + 
                    "bcircles=_vC&" + 
                    "filter=m_BnNY3nsDRicoY&" + 
                    "format=json&" + 
                    "groupByKey=wf&" + 
                    "groupByValues=5_dgG_N8&" + 
                    "showMetadata=2JRLT1Itz14a8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bpolys=Kun9bUBuLOYU6&" + 
                    "filter=fVHEhnaZ4Jq1zOL&" + 
                    "format=1K2OI&" + 
                    "groupByKey=7fJLm_XcZNVqURXN&" + 
                    "showMetadata=BZAZi7Q0zeeg&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=ySqYZi56vgp&" + 
                    "bpolys=g9&" + 
                    "groupByKey=aFdq&" + 
                    "showMetadata=zBb&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=Qt5Z&" + 
                    "bcircles=TrB_g&" + 
                    "filter=No00bcHLnvZ9d6Gh&" + 
                    "format=OtZvzHOCMwU_GI&" + 
                    "groupByKey=jJsmJ4nZtuZU_b&" + 
                    "groupByValues=n1JF&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=jj&" + 
                    "groupByValues=4766932.83&" + 
                    "time=")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("jj=4766932.83"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(743636.1));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "filter=vQM4VvsREcu&" + 
                    "format=d0SmJx&" + 
                    "groupByKey=HFSaswqpu&" + 
                    "showMetadata=EZE1XT_nVRvmq&" + 
                    "time=QDhT0c3sEUGsda")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bcircles=nfvfhSM8OaBsAaIS&" + 
                    "bpolys=uOQm_Eexdp3&" + 
                    "groupByKey=Z6QatgHezXsex&" + 
                    "groupByValues=76772.71&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 4 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 5 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 6 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 7 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 8 - (200) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 9 - (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_124() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=D3ZdEBlamR_NJ3x&" + 
                    "filter=cUIxEI5pxS99&" + 
                    "groupByKey=1NW&" + 
                    "showMetadata=n&" + 
                    "time=MultiPolygon&" + 
                    "timeout=Zm8BxHtnOqG")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=13udXnYsF4oUvLM&" + 
                    "bcircles=ak9MOzcVxKnco&" + 
                    "filter=UqSaUfxQ&" + 
                    "groupByKey=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=f5KVsaVxY&" + 
                    "bcircles=numk_g2H2BFH&" + 
                    "filter=y4wuGnlq&" + 
                    "groupByKey=ykA&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=YwRp&" + 
                    "groupByKey=4L256ObMc_EJ5LZn&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=a7jK7ENpcFbo7z&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=NtPdw&" + 
                    "bpolys=IysH62MjURevRMqA&" + 
                    "groupByKey=Sj8dwhsQOf&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=Q8&" + 
                    "filter=bIiTuw6hQV&" + 
                    "groupByKey=RN2NBhHAJQ3m76eJ&" + 
                    "groupByValues=4766932.83&" + 
                    "timeout=mLM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=uY3CvQNQ0rWX&" + 
                    "filter=aC1Cr&" + 
                    "groupByKey=yWIUKiEeA&" + 
                    "showMetadata=HvdLDvU4&" + 
                    "time=MultiPolygon&" + 
                    "timeout=qZyq105vTe0S9G")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=gFfCNCEKm&" + 
                    "groupByValues=3.737603603E7&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "gFfCNCEKm=3.737603603E7"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=K1kpRiCCMGDFlSBa&" + 
                    "bcircles=1&" + 
                    "bpolys=KWicFUX&" + 
                    "filter=eHYwvSpK&" + 
                    "format=onphGDW3cfQHLd&" + 
                    "groupByKey=OeMBL75oleho&" + 
                    "groupByValues=687909.51&" + 
                    "showMetadata=kSM&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 4 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 5 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 6 - (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_125() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=qSOgb&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(5.37));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=vIyM1zpIP1sHwk_T&" + 
                    "groupByKey=0ZlbfCo&" + 
                    "groupByValues=651044.38")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "format=1Gha3Rjr87hYc&" + 
                    "groupByKey=QQZkNAyrA&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=RBvwfn1nx2B&" + 
                    "filter=6&" + 
                    "groupByKey=iUgKpBv5SfEwx5i_&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=ancr2UTziAxJoto&" + 
                    "bcircles=BfbxiYuCscpB&" + 
                    "filter=W97dIsbolUigdMu&" + 
                    "format=6hK3_&" + 
                    "groupByKey=building&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "format=bGE5QWNTDNYKY&" + 
                    "groupByKey=gW&" + 
                    "groupByValues=4766932.83&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 4 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 5 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 6 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 7 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 8 - (200) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 9 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 10 - (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_126() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=fWhWIt0vxqkSzy1&" + 
                    "bcircles=DXt&" + 
                    "bpolys=WIyI3Dj6PEKqN&" + 
                    "filter=GjBODuZDtumg7WOY&" + 
                    "groupByKey=hCg9E3nPdPLvzE")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=fYB&" + 
                    "bcircles=Gs9oBx_gVAfKVTf5&" + 
                    "filter=xLuCuJ9wmNJ&" + 
                    "format=Cy8Fhc9uec&" + 
                    "groupByKey=Qcty&" + 
                    "groupByValues=687909.51&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=padnHj62Xi&" + 
                    "bcircles=x7mFrd&" + 
                    "bpolys=WGJMvv8&" + 
                    "filter=86T8N&" + 
                    "groupByKey=6z9aBqL&" + 
                    "groupByValues=hw3NJh&" + 
                    "timeout=QL")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=n8yEd83v3YCtVrEs&" + 
                    "format=json&" + 
                    "groupByKey=8Mies1lXvJcGUGN&" + 
                    "groupByValues=1771.28")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=oI0DAY1kFUX&" + 
                    "bpolys=ck1ZPS8T&" + 
                    "filter=XwswftjLv&" + 
                    "format=vP9Qqje0H&" + 
                    "groupByKey=lgIyTx&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "filter=ae2Bc_7KCJEUU&" + 
                    "groupByKey=QRfuoDTuWvzPLCa7&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=GnUuhpyKnE7OT&" + 
                    "bcircles=Qm0IS&" + 
                    "groupByKey=90gCHLiqLIOO&" + 
                    "showMetadata=kNd3BTxAvjF&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=aNdvq5&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=IbW_8rTOzk2n7&" + 
                    "bcircles=YZu2pRhjs&" + 
                    "filter=fhj4biCoAn_h&" + 
                    "groupByKey=YXaWPyXRhgIRy8&" + 
                    "groupByValues=1529.91")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=8&" + 
                    "bpolys=gYgR&" + 
                    "format=L7FB3i1zfAG1oh&" + 
                    "groupByKey=aF0M3a&" + 
                    "groupByValues=743636.1&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 4 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 5 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 6 - (200) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_127() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=hWQAxFwefx&" + 
                    "groupByKey=QJQ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=D5druAyauUmK&" + 
                    "groupByKey=GB")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=cdq3_FE&" + 
                    "bpolys=z&" + 
                    "groupByKey=btCntljtDP4RsW&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=zp&" + 
                    "bcircles=3KBmRQCr52&" + 
                    "groupByKey=M&" + 
                    "groupByValues=698802.99")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=x&" + 
                    "bcircles=sPAlWw&" + 
                    "bpolys=9oaDJUXxcUKM&" + 
                    "filter=MfGI0uvOzh&" + 
                    "format=Y0Ny5knhM&" + 
                    "groupByKey=building&" + 
                    "groupByValues=8797443.19&" + 
                    "showMetadata=8jjQakQ4O7Dzupau")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=json&" + 
                    "groupByKey=6vS&" + 
                    "groupByValues=687909.51")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "6vS=687909.51"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(76772.71));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/tag
    * 3 - (400) POST:/elements/area/groupBy/tag
    * 4 - (400) POST:/elements/area/groupBy/tag
    * 5 - (400) POST:/elements/area/groupBy/tag
    * 6 - (400) POST:/elements/area/groupBy/tag
    * 7 - (400) POST:/elements/area/groupBy/tag
    * 8 - (400) POST:/elements/area/groupBy/tag
    * 9 - (400) POST:/elements/area/groupBy/tag
    * 10 - (200) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_128() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bpolys=Qf&" + 
                    "filter=Ewd2pWgv&" + 
                    "groupByKey=YNZ7nVU4nfWn_8j&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=3etYhtOMr0xV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=0ukpPqcNyduNY&" + 
                    "bpolys=uXs9gPUcXPrYpijC&" + 
                    "filter=osd_GMViJq8t&" + 
                    "groupByKey=xgrZGcPJZH&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=Nl170cCn&" + 
                    "bpolys=nTYZBq&" + 
                    "filter=O75F&" + 
                    "groupByKey=PzMl87zt6K27Ssbi&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=ttrfJINmc&" + 
                    "time=1PV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=GYMBERqL9StwWo48&" + 
                    "bcircles=UONN&" + 
                    "bpolys=IdPq&" + 
                    "groupByKey=G2Qqdy&" + 
                    "groupByValues=0.0&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bpolys=eD&" + 
                    "filter=5WLyV5xY&" + 
                    "format=84xDN&" + 
                    "groupByKey=nufRL5&" + 
                    "groupByValues=J_t&" + 
                    "showMetadata=SgCJj3F5377IFCGl&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=3&" + 
                    "bpolys=&" + 
                    "filter=slDH&" + 
                    "format=Wxt0thuJbKtU42&" + 
                    "groupByKey=QUKY6z7rcG6dXu&" + 
                    "time=MultiPolygon&" + 
                    "timeout=tPWoTfwsTSxI")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=uBu3&" + 
                    "bpolys=5oYR&" + 
                    "format=VQcYCDnZ1PxE4T4&" + 
                    "groupByKey=q7HZU&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=c2sABjqXQ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bpolys=F8fF46J9GekNyHfD&" + 
                    "groupByKey=0iMLf8vlUOu3Hx&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=q6R&" + 
                    "bpolys=sxd9Yb&" + 
                    "filter=rqxvylnXbpXf0&" + 
                    "format=cRuoZE&" + 
                    "groupByKey=building&" + 
                    "groupByValues=4.617347922E7&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=json&" + 
                    "groupByKey=9")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(4.617347922E7));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 4 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 5 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 6 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 7 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 8 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 9 - (200) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 10 - (400) GET:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_129() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=4c2jaPxCWFgRsu&" + 
                    "time=vUE0YVknfZSuK&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=BZcBCqZIgJfHUbJE&" + 
                    "bpolys=bknw&" + 
                    "filter=GCvaA9LS3PG1Y7&" + 
                    "format=k9dWmTp6&" + 
                    "groupByKey=VgEsWJ&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=jwy3OqHeU&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=yP7L5Tj9nM&" + 
                    "filter=A8jvXask79X&" + 
                    "groupByKey=&" + 
                    "time=s")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=nOa&" + 
                    "filter=LwGqMLSH96sAD&" + 
                    "groupByKey=KmodWJ76i89z1_9&" + 
                    "groupByValues=fohmQ8k6mLIh1&" + 
                    "timeout=8S6vr5EIR7d2Yz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "format=7cyW&" + 
                    "groupByKey=t2&" + 
                    "showMetadata=00Iw")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=RGAO1YkeS2C&" + 
                    "format=lGYaNcIMF&" + 
                    "groupByKey=Q49Jw0t&" + 
                    "groupByValues=3.737603603E7&" + 
                    "showMetadata=w8PC6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=2jpudo6Vw&" + 
                    "bcircles=atMzmw9CfIjk5Y0&" + 
                    "bpolys=Fn6wVBA&" + 
                    "groupByKey=7SNsO&" + 
                    "showMetadata=JVk2KMJ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=CLL8muKd&" + 
                    "groupByKey=mMXz2rgg_4y&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=wpLF6m3Gqyj4N&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(32615.0));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=OeQ2Wel5jQ8gNgb&" + 
                    "bcircles=tOZAR&" + 
                    "bpolys=ubauPzJMKcCY&" + 
                    "groupByKey=e3kScOApyE7std&" + 
                    "groupByValues=718314.9&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/area/density/groupBy/tag
    * 2 - (400) POST:/elements/area/density/groupBy/tag
    * 3 - (400) POST:/elements/area/density/groupBy/tag
    * 4 - (400) POST:/elements/area/density/groupBy/tag
    * 5 - (400) POST:/elements/area/density/groupBy/tag
    * 6 - (400) POST:/elements/area/density/groupBy/tag
    * 7 - (400) POST:/elements/area/density/groupBy/tag
    * 8 - (400) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_130() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=Gyd4Yx&" + 
                    "groupByValues=718314.9")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("Gyd4Yx=718314.9"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(4766932.83));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=QhVlHi7Cnk&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=uqV10maB9&" + 
                    "groupByKey=KnUVWQTKbudN&" + 
                    "time=MultiPolygon&" + 
                    "timeout=SoDtlCJTu")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=efzMxQEi55uHNu&" + 
                    "bpolys=G6bToOJyf&" + 
                    "format=QcH&" + 
                    "groupByKey=kIUVb0rv2T&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=Jm1iNLWliL&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=H1rmUuAu6&" + 
                    "bcircles=3HSa5D5&" + 
                    "bpolys=ekq&" + 
                    "groupByKey=92tJmLgl1Jxs_rwE&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=GYgYLmtx2V&" + 
                    "bcircles=2E&" + 
                    "groupByKey=SNJWoGVpH_bn&" + 
                    "groupByValues=718314.9&" + 
                    "showMetadata=OowR5kTgZFA_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=33&" + 
                    "bcircles=umtnXN&" + 
                    "bpolys=&" + 
                    "filter=u619WAy&" + 
                    "format=tvYkq&" + 
                    "groupByKey=dj9tbriRub86YDU&" + 
                    "showMetadata=TKV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=HX8NjrOMFbWvzqXI&" + 
                    "filter=GonOID&" + 
                    "format=json&" + 
                    "groupByKey=FPurPRVQw&" + 
                    "groupByValues=1u&" + 
                    "showMetadata=0cS8P")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "filter=I_F25WHmlx&" + 
                    "format=json&" + 
                    "groupByKey=zNjbSH&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=GBFCoRu")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 4 - (200) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 5 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 6 - (400) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_131() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=yEMg&" + 
                    "bcircles=ir1oXwdQvSjh&" + 
                    "filter=Uo7N&" + 
                    "groupByKey=D0OXVpKMdag2aNU&" + 
                    "groupByValues=xS&" + 
                    "showMetadata=g6w6DqWOzVk7R7s6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=M6vx0RytbBJ&" + 
                    "groupByKey=tN3IIZC8_7OudG&" + 
                    "timeout=NUuieJz0e76N")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "format=ho6EQ&" + 
                    "groupByKey=0omEpZPdTNS&" + 
                    "groupByValues=J&" + 
                    "showMetadata=GTBhffptSpCyOD&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=json&" + 
                    "groupByKey=j_w&" + 
                    "groupByValues=130239.01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "j_w=130239.01"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(76772.71));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=&" + 
                    "bpolys=em33E&" + 
                    "groupByKey=Vg4QTL2y80&" + 
                    "showMetadata=_Q_aahc&" + 
                    "timeout=8A7nxS1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=z80y2RtRQ_KSq&" + 
                    "groupByKey=59PTQW1V&" + 
                    "showMetadata=mUajf0tD&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/tag
    * 2 - (400) POST:/elements/count/density/groupBy/tag
    * 3 - (200) POST:/elements/count/density/groupBy/tag
    * 4 - (400) POST:/elements/count/density/groupBy/tag
    * 5 - (400) POST:/elements/count/density/groupBy/tag
    * 6 - (400) POST:/elements/count/density/groupBy/tag
    * 7 - (400) POST:/elements/count/density/groupBy/tag
    * 8 - (400) GET:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_132() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "groupByKey=building&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=8lSJ36sR3m")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "filter=UHR3ES9wTOz&" + 
                    "format=X3Wc7GEnc2Dcq&" + 
                    "groupByKey=&" + 
                    "groupByValues=743636.1&" + 
                    "time=iZ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=json&" + 
                    "groupByKey=9rAaBcpxEGjH2J")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(3367.16));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bpolys=KtVG&" + 
                    "filter=oP_&" + 
                    "format=EH6H0hOe0e5Ie39&" + 
                    "groupByKey=pFQUmtzghNN0me&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=hrSW2dn&" + 
                    "filter=ea9coK&" + 
                    "groupByKey=EtzNKk9fYcUS00x&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bcircles=&" + 
                    "bpolys=f&" + 
                    "format=DHupgT8w3wuzIhMP&" + 
                    "groupByKey=EphLXWAB_txN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=FtFPyldG4WvbU84O&" + 
                    "bpolys=U&" + 
                    "groupByKey=Bohm&" + 
                    "showMetadata=yyl")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=7GNLg&" + 
                    "bcircles=X6RSj&" + 
                    "filter=KCl5&" + 
                    "groupByKey=Hw_A1dMT47QeQV&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=viSCnsk0zvp&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 3 - (200) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 4 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 5 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 6 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 7 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 8 - (400) GET:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_133() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=Y&" + 
                    "bcircles=Qg2&" + 
                    "filter=D2&" + 
                    "groupByKey=qKUCBxQrAoQK&" + 
                    "time=MultiPolygon&" + 
                    "timeout=bDrFBuHR0v4ZEF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=qzDgUHn&" + 
                    "format=BQZcEPLO&" + 
                    "groupByKey=F5D5FG&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=u&" + 
                    "groupByValues=4.617347922E7")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "u=4.617347922E7"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(1261521.49));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=5ty&" + 
                    "bcircles=Je&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=6nE_h_NUGHKDI&" + 
                    "groupByKey=3VjnHE30qnJCEPO&" + 
                    "groupByValues=651044.38&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=0bxlgb9uAJAN&" + 
                    "filter=i39sCin&" + 
                    "groupByKey=building&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=u9fF00XJLe7Rjs4&" + 
                    "time=MultiPolygon&" + 
                    "timeout=BBtBb39X5049YdEq")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=VmmaMGJ4OLO4sFhz&" + 
                    "bpolys=rbQO2e8nlu&" + 
                    "filter=fJZoOw&" + 
                    "groupByKey=UqUhMdUfv1upf&" + 
                    "showMetadata=yXg&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=CPFbL4n5EeEyh_kB&" + 
                    "bcircles=EPSZsYzo&" + 
                    "groupByKey=2qD&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "format=fCW&" + 
                    "groupByKey=ADPefe92Rvb&" + 
                    "groupByValues=TY1wSbSbKNXY1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/tag
    * 2 - (400) POST:/elements/length/groupBy/tag
    * 3 - (400) POST:/elements/length/groupBy/tag
    * 4 - (400) POST:/elements/length/groupBy/tag
    * 5 - (400) POST:/elements/length/groupBy/tag
    * 6 - (400) POST:/elements/length/groupBy/tag
    * 7 - (200) POST:/elements/length/groupBy/tag
    * 8 - (400) GET:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_134() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "filter=Gyt6&" + 
                    "format=json&" + 
                    "groupByKey=highway&" + 
                    "showMetadata=UXT&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bpolys=qwL&" + 
                    "filter=817Om5dWMGXTN&" + 
                    "groupByKey=highway&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=bK2M&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "filter=kS3ilqT0nR7NKK1&" + 
                    "format=oc_1ZmTSt__c&" + 
                    "groupByKey=0_PVXahj&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=tYW7wO4mGQv3UBmj&" + 
                    "bcircles=6zOoC3jyr5W1XZJD&" + 
                    "filter=Wg_eMlnGmA&" + 
                    "groupByKey=highway&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bcircles=WSO&" + 
                    "filter=8BEKNT&" + 
                    "groupByKey=W&" + 
                    "showMetadata=h&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bcircles=pXbo_&" + 
                    "bpolys=TVgz&" + 
                    "format=VMcE&" + 
                    "groupByKey=&" + 
                    "showMetadata=lcbWta4oZxePxWF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=c7M2WWA")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(518.57));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=Vs1sSh_8Qo&" + 
                    "bcircles=s7RicwHR&" + 
                    "bpolys=vlQt_4JNRFPU8&" + 
                    "filter=Xmq1t6fU_&" + 
                    "groupByKey=a7ddOjywXPwATZ&" + 
                    "time=MultiPolygon&" + 
                    "timeout=sDQgxzOTAlsFfv")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 4 - (200) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 5 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 6 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 7 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 8 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 9 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 10 - (400) GET:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_135() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=Jz_Hi6hfiYgoqT&" + 
                    "filter=oOp&" + 
                    "format=_2ymRRZg&" + 
                    "groupByKey=cPq4&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=tUN79jhAA&" + 
                    "timeout=mRPbXfGL10N")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=swSLJThuw1a&" + 
                    "bpolys=gQdgoIRHO5Le&" + 
                    "filter=o&" + 
                    "format=eI0z3tE&" + 
                    "groupByKey=aJ8hRo&" + 
                    "showMetadata=BCjwT6Hj1v&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=v1R0t7HbwC&" + 
                    "bpolys=yh4sSk6cyXmKaKR&" + 
                    "groupByKey=e6IdqjyDEW3S&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=building&" + 
                    "groupByValues=4766932.83")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", hasItems("boundary1", "remainder"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(52.0))
                .body("'groupByResult'[1].'groupByObject'.size()", equalTo(2))
                .body("'groupByResult'[1].'groupByObject'", hasItems("boundary1", "building=4766932.83"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(0.0));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=fjurD&" + 
                    "bcircles=N7&" + 
                    "bpolys=eJY&" + 
                    "filter=FyZXin&" + 
                    "groupByKey=h9tlHLTkSuYABL&" + 
                    "showMetadata=aZxjH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=9GmtcoxT&" + 
                    "bpolys=bPUV3lcRcWe_xmfw&" + 
                    "filter=j_H08SWEOwvD5&" + 
                    "format=mPIfOsdS9&" + 
                    "groupByKey=building&" + 
                    "time=MultiPolygon&" + 
                    "timeout=fvZ60LK")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=aTmD8c1gVfcbSR&" + 
                    "bcircles=sJ57wDsO0KJ&" + 
                    "format=&" + 
                    "groupByKey=yH7g&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=Kv9xt_aPATPl&" + 
                    "filter=MyTx&" + 
                    "format=Dl&" + 
                    "groupByKey=MFTxOeZrYJ8&" + 
                    "showMetadata=DAn&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=MXweQmgIH&" + 
                    "bpolys=oUuek&" + 
                    "groupByKey=w&" + 
                    "showMetadata=YcR1nP26uuS7aMs3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=g&" + 
                    "groupByKey=xH2QT3Ejgwbn_0Ff&" + 
                    "showMetadata=sczY19a")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/users/count/density/groupBy/tag
    * 2 - (400) POST:/users/count/density/groupBy/tag
    * 3 - (400) POST:/users/count/density/groupBy/tag
    * 4 - (400) POST:/users/count/density/groupBy/tag
    * 5 - (400) POST:/users/count/density/groupBy/tag
    * 6 - (400) POST:/users/count/density/groupBy/tag
    * 7 - (400) POST:/users/count/density/groupBy/tag
    * 8 - (400) POST:/users/count/density/groupBy/tag
    * 9 - (400) GET:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_136() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=80tEZ1&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("total"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'fromTimestamp'", containsString("2007-10-08T00:00:00Z"))
                .body("'groupByResult'[0].'result'[0].'toTimestamp'", containsString("2020-07-23T03:00:00Z"))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(6.71))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'fromTimestamp'", containsString("2007-10-08T00:00:00Z"))
                .body("'groupByResult'[1].'result'[0].'toTimestamp'", containsString("2020-07-23T03:00:00Z"))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(6.71));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bpolys=DYxdYtL5UoAq&" + 
                    "contributionType=Xq2U&" + 
                    "format=O&" + 
                    "groupByKey=t&" + 
                    "showMetadata=pZ4eKXuAckUv&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bpolys=RqKh5bgIsShaj&" + 
                    "format=yKxF&" + 
                    "groupByKey=ysdJD&" + 
                    "groupByValues=687909.51&" + 
                    "showMetadata=iHI6RL2t&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "contributionType=WSA_k&" + 
                    "filter=I7uU5x22_c&" + 
                    "format=F78Uh1Gav31lmtTF&" + 
                    "groupByKey=sN53q_pn&" + 
                    "groupByValues=8797443.19&" + 
                    "time=MultiPolygon&" + 
                    "timeout=gu1R1wUfjmU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bcircles=7DVs99D&" + 
                    "contributionType=fj&" + 
                    "format=cuObq_wZveyPqu&" + 
                    "groupByKey=gvJVJEU&" + 
                    "groupByValues=32iZr4NiFl12FH&" + 
                    "timeout=YsmCs6V465AklR1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=7K&" + 
                    "contributionType=PnKtRuwNS&" + 
                    "filter=pT2VKOK&" + 
                    "groupByKey=SvA5KKG&" + 
                    "groupByValues=698802.99&" + 
                    "showMetadata=emQ8vlOC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "contributionType=9Ksq8&" + 
                    "format=FKzQ&" + 
                    "groupByKey=mTnPnNlkT5FzpI&" + 
                    "groupByValues=718314.9&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=ygtsI6h1zzqA&" + 
                    "bcircles=rnzY2&" + 
                    "bpolys=hTpFKpmZ&" + 
                    "contributionType=9ouexVK&" + 
                    "filter=9emDjC0Mw_VeoZ&" + 
                    "groupByKey=UX1kYM5kqNAv8g&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "contributionType=T4TF&" + 
                    "filter=FhkYpihYAjChK&" + 
                    "format=ZYp8kFsclXT&" + 
                    "groupByKey=2eS&" + 
                    "showMetadata=5RXLwQU&" + 
                    "timeout=_AAbR7oS")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) GET:/elements/perimeter/density/groupBy/type
    * 2 - (400) GET:/elements/count/groupBy/key
    * 3 - (400) POST:/contributions/geometry
    * 4 - (400) GET:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_137() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(3))
                .body("'groupByResult'[0].'groupByObject'", containsString("node"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("way"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(61015.69))
                .body("'groupByResult'[2].'groupByObject'", containsString("relation"))
                .body("'groupByResult'[2].'result'.size()", equalTo(1))
                .body("'groupByResult'[2].'result'[0].'value'", numberMatches(15757.02));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=K5G49IWLRZ&" + 
                    "bpolys=j0kM&" + 
                    "filter=sW7yOnHW&" + 
                    "format=fIDuKY8n9hQg7X5_&" + 
                    "groupByKeys=8&" + 
                    "showMetadata=y1sPxDFVQU_Bx4&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "clipGeometry=&" + 
                    "filter=YSVjfoJIVlQ2t&" + 
                    "time=k73&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=ip&" + 
                    "bpolys=Rle&" + 
                    "clipGeometry=zbvvFn&" + 
                    "filter=jdPxBK68KgjY&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length
    * 2 - (200) POST:/elements/area/groupBy/key
    * 3 - (400) GET:/elements/perimeter/groupBy/boundary
    * 4 - (400) GET:/elements/geometry
    * 5 - (400) POST:/elements/length/density/groupBy/type
    * 6 - (400) GET:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_138() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?" + 
                    "bcircles=iD8&" + 
                    "bpolys=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=&" + 
                    "groupByKeys=5pyQnfrrsHSOF&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("5pyQnfrrsHSOF"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "showMetadata=KM_qzqsTwjfcFf&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "clipGeometry=NbDwF&" + 
                    "properties=&" + 
                    "showMetadata=ygnv7t&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=&" + 
                    "filter=9Q&" + 
                    "showMetadata=R1VKWOzCAYTDAk&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bboxes=tdBE_aBOTFF&" + 
                    "bcircles=bdOGNbqgoh8zAbrH&" + 
                    "bpolys=MQj1Y5F29neK&" + 
                    "filter=_o6DZ_b&" + 
                    "showMetadata=y2&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elementsFullHistory/geometry
    * 2 - (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    * 3 - (200) GET:/metadata
    * 4 - (400) GET:/contributions/centroid
    * 5 - (400) GET:/users/count/density/groupBy/tag
    * 6 - (400) POST:/users/count/groupBy/type
    * 7 - (400) POST:/elementsFullHistory/centroid
    */
    @Test(timeout = 60000)
    public void test_139() throws Exception {
        
        given().accept("*/*")
                .post(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "clipGeometry=true&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(200)
                .assertThat()
                ; // the response payload was too large, above the threshold of 1000000 bytes. No assertion on it is therefore generated.
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=LEekKW4&" + 
                    "bcircles=stQNOsypOHg&" + 
                    "bpolys=Jekip&" + 
                    "filter=N&" + 
                    "format=5hwZ4lD5uRs&" + 
                    "groupByKey=z7JhJLSM&" + 
                    "groupByValues=0.0&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/metadata")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'timeout'", numberMatches(100.0))
                .body("'extractRegion'.'spatialExtent'.'type'", containsString("MultiPolygon"))
                .body("'extractRegion'.'spatialExtent'.'coordinates'.size()", equalTo(1))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0].size()", equalTo(1))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0].size()", equalTo(966))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][0].size()", equalTo(2))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][0][0]", numberMatches(8.5731788))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][0][1]", numberMatches(49.4236))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][1].size()", equalTo(2))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][1][0]", numberMatches(8.5742426))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][1][1]", numberMatches(49.4240214))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][2].size()", equalTo(2))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][2][0]", numberMatches(8.5752902))
                .body("'extractRegion'.'spatialExtent'.'coordinates'[0][0][2][1]", numberMatches(49.4244224))
                // Skipping assertions on the remaining 963 elements. This limit of 3 elements can be increased in the configurations
                .body("'extractRegion'.'temporalExtent'.'fromTimestamp'", containsString("2007-10-08T00:00:00Z"))
                .body("'extractRegion'.'temporalExtent'.'toTimestamp'", containsString("2020-07-23T03:00:00Z"))
                .body("'extractRegion'.'replicationSequenceNumber'", numberMatches(68900.0));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=mtYx&" + 
                    "bcircles=PA&" + 
                    "bpolys=&" + 
                    "showMetadata=iusL&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=3mMAxFtQil1&" + 
                    "format=pZpqffrnVOTmxA&" + 
                    "groupByKey=aHeZRjHQ6FnaJ&" + 
                    "showMetadata=3GIKrcY5Zat0UzN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=b3&" + 
                    "bcircles=MGw5fUJnzz&" + 
                    "filter=yB5DWi65Tuh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bpolys=PvB&" + 
                    "filter=n3WG2Z2v95Qn5Yrt&" + 
                    "properties=sMSk5&" + 
                    "showMetadata=tzMCc0Rv8&" + 
                    "time=MultiPolygon&" + 
                    "timeout=R7qIBURWppx")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/latest/centroid
    * 2 - (400) POST:/contributions/geometry
    * 3 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 4 - (400) GET:/elements/perimeter/groupBy/boundary
    * 5 - (200) POST:/contributions/count/density/groupBy/boundary
    * 6 - (400) GET:/contributions/latest/geometry
    * 7 - (400) POST:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_140() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=BE&" + 
                    "bcircles=&" + 
                    "bpolys=8_jnirseIBuRb&" + 
                    "filter=Xaq7muU8zhAE&" + 
                    "properties=gys3SxP_h&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "bcircles=d&" + 
                    "bpolys=&" + 
                    "showMetadata=W1K6AKGmlY_Gc&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=Jk2NEUB&" + 
                    "format=gt05OxcB5NicGKh&" + 
                    "groupByKey=58NHGqNtvsm_sIZ&" + 
                    "groupByValues=76772.71&" + 
                    "showMetadata=WQBGpSEjbX&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=wMEIPqVhMHog3z&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(1))
                .body("'groupByResult'[0].'groupByObject'", containsString("boundary1"))
                .body("'groupByResult'[0].'result'.size()", equalTo(3))
                .body("'groupByResult'[0].'result'[0].'fromTimestamp'", containsString("2014-01-01T00:00:00Z"))
                .body("'groupByResult'[0].'result'[0].'toTimestamp'", containsString("2015-01-01T00:00:00Z"))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(2485.39))
                .body("'groupByResult'[0].'result'[1].'fromTimestamp'", containsString("2015-01-01T00:00:00Z"))
                .body("'groupByResult'[0].'result'[1].'toTimestamp'", containsString("2016-01-01T00:00:00Z"))
                .body("'groupByResult'[0].'result'[1].'value'", numberMatches(2005.33))
                .body("'groupByResult'[0].'result'[2].'fromTimestamp'", containsString("2016-01-01T00:00:00Z"))
                .body("'groupByResult'[0].'result'[2].'toTimestamp'", containsString("2017-01-01T00:00:00Z"))
                .body("'groupByResult'[0].'result'[2].'value'", numberMatches(1509.78));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bboxes=jpp&" + 
                    "bcircles=IUrT7kUIHsp_AVx4&" + 
                    "properties=LJqu2T5ZncxBiIrJ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "clipGeometry=Rvm_F&" + 
                    "properties=E6xm&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The provided time parameter is not ISO-8601 conform."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/density/groupBy/tag
    * 3 - (200) POST:/elements/count/density
    * 4 - (400) GET:/users/count/groupBy/key
    * 5 - (400) GET:/users/count/density/groupBy/tag
    * 6 - (400) POST:/users/count/density/groupBy/boundary
    * 7 - (400) POST:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_141() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=QG07A9qsQ3&" + 
                    "bpolys=LKxDwX_Z&" + 
                    "filter=HJgE35bvz4QF4&" + 
                    "format=json&" + 
                    "groupByKey=Ygke&" + 
                    "showMetadata=8b&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bcircles=j_cVF8&" + 
                    "filter=WgViWkuvTWKvv1&" + 
                    "format=Cn9HJ&" + 
                    "groupByKey=building&" + 
                    "groupByValues=4766932.83&" + 
                    "showMetadata=WIVUzcdKuxZGW&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(3367.16));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bcircles=BqfyTVE&" + 
                    "bpolys=bPh9Wtibe&" + 
                    "contributionType=cJShK&" + 
                    "groupByKeys=P4NfJ5wzo&" + 
                    "time=azAqKH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=KfHXJaij&" + 
                    "contributionType=CBECEDidua3B&" + 
                    "filter=meEX8GaaAi6gjQkh&" + 
                    "format=ruJQvHrIH&" + 
                    "groupByKey=2DPiYkq40leNECF&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=NvF67r3V&" + 
                    "time=dwtBse")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "filter=BQO5_QNHbl&" + 
                    "time=_mc2SRaCBQmP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bcircles=&" + 
                    "bpolys=rGmBVuQAc&" + 
                    "contributionType=Z8t7e1&" + 
                    "filter=00c9JxQb")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (200) POST:/elements/area/density
    * 2 - (400) POST:/elements/perimeter/groupBy/type
    * 3 - (400) POST:/elements/area/ratio/groupBy/boundary
    * 4 - (400) GET:/elements/count/density/groupBy/tag
    * 5 - (400) POST:/contributions/count
    * 6 - (400) GET:/users/count/groupBy/type
    * 7 - (400) GET:/contributions/count/density/groupBy/boundary
    * 8 - (400) POST:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_142() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=&" + 
                    "format=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'result'.size()", equalTo(1))
                .body("'result'[0].'value'", numberMatches(4766932.83));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?filter=TRByqkDsZRDDGEAa")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bcircles=q2uLpyy6ecnhv&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bpolys=GIcZZlvXFZ0S2C&" + 
                    "groupByKey=CB&" + 
                    "groupByValues=698802.99&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=x6dQFuy&" + 
                    "bcircles=K&" + 
                    "bpolys=ZlFcsgaOc&" + 
                    "contributionType=4d43t2vw&" + 
                    "showMetadata=zy&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=K&" + 
                    "bcircles=bSodjmq&" + 
                    "bpolys=N917Xq&" + 
                    "format=upH2wHfPks&" + 
                    "showMetadata=_NlMPvd&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=pq_NXDqGw&" + 
                    "bpolys=ZGv24R7ZvnhNPz3&" + 
                    "format=5V")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=ysmuqG1COMM8lPzl&" + 
                    "bpolys=G1&" + 
                    "filter=YSsb4gi&" + 
                    "format=nvWYoIrY4kJI&" + 
                    "groupByKey=&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=zGU_KcTzkKEGhg8&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count/density/groupBy/boundary
    * 2 - (400) POST:/elements/area/ratio/groupBy/boundary
    * 3 - (200) GET:/elements/length/groupBy/tag
    * 4 - (400) POST:/users/count/groupBy/tag
    * 5 - (400) GET:/elements/area
    * 6 - (400) GET:/contributions/count/density/groupBy/boundary
    * 7 - (400) POST:/elements/length/groupBy/tag
    * 8 - (400) GET:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_143() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=X77GDNn&" + 
                    "bcircles=A_QqwCJLvbAtLcRK&" + 
                    "showMetadata=b1sRWtOT_r9OMa&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=8RhcM&" + 
                    "filter2=FHP&" + 
                    "format=irQEkXaat45usy&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=&" + 
                    "filter=&" + 
                    "groupByKey=j6EJHm&" + 
                    "groupByValues=76772.71&" + 
                    "timeout=100.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("j6EJHm=76772.71"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(1261521.49));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=TIBQPuPAg&" + 
                    "contributionType=i6o&" + 
                    "groupByKey=qf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=dcQXPuVtijcGdoeL&" + 
                    "bcircles=H7SIM0DVRxv82&" + 
                    "bpolys=HTWWqoE3&" + 
                    "filter=9mYg5&" + 
                    "format=rL&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?format=VqV_sD4xL")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=3Bkjcv88GWrIh&" + 
                    "bpolys=H&" + 
                    "filter=xz0g9suK_Ej4p&" + 
                    "format=6JY6p3xMV3pgt&" + 
                    "groupByKey=emuBGCJ31E6iUnpg&" + 
                    "groupByValues=SRfHqWiby1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=&" + 
                    "bcircles=yRoX8BHi3shR9&" + 
                    "bpolys=GpiVH5h0QG&" + 
                    "format=fEdso&" + 
                    "showMetadata=BGmnj7HMLDT&" + 
                    "timeout=2euyLTh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/type
    * 2 - (400) GET:/elements/bbox
    * 3 - (400) GET:/users/count/groupBy/boundary
    * 4 - (400) GET:/users/count/groupBy/type
    * 5 - (400) POST:/elements/area/density
    * 6 - (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    * 7 - (400) GET:/contributions/count
    * 8 - (400) POST:/elements/count/density
    * 9 - (200) GET:/elements/area/groupBy/key
    * 10 - (400) POST:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_144() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bpolys=UQTYg&" + 
                    "format=json&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=Ct&" + 
                    "bcircles=_nLB9SDILeNcC&" + 
                    "properties=qtlIei1taLG&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=cuny6E7o3C3_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=wo7dTYwRCDbN2&" + 
                    "bcircles=qR1MyyIhCS58PyX&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=hgysg&" + 
                    "bpolys=nHUq76ecP&" + 
                    "filter=dVENFL7I&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "filter=5DX&" + 
                    "format=oGPLeNVQl3SfWCQs&" + 
                    "showMetadata=Hfw&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=QIlhEbvUz&" + 
                    "bcircles=gOSTYwMKmD&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=wkF9fTqk&" + 
                    "groupByValues=743636.1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count?" + 
                    "bpolys=bA0BA3B62Jx_L&" + 
                    "showMetadata=zLbDo_TQ0ymP1P&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=wpdY9cBSwF&" + 
                    "bpolys=b1naau&" + 
                    "filter=dM&" + 
                    "showMetadata=wFpKcfLzl7Oe&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKeys=rgSG5oPzHozywk")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'attribution'.'url'", containsString("https://ohsome.org/copyrights"))
                .body("'attribution'.'text'", containsString("© OpenStreetMap contributors"))
                .body("'apiVersion'", containsString("1.9.0-SNAPSHOT"))
                .body("'groupByResult'.size()", equalTo(2))
                .body("'groupByResult'[0].'groupByObject'", containsString("rgSG5oPzHozywk"))
                .body("'groupByResult'[0].'result'.size()", equalTo(1))
                .body("'groupByResult'[0].'result'[0].'value'", numberMatches(0.0))
                .body("'groupByResult'[1].'groupByObject'", containsString("remainder"))
                .body("'groupByResult'[1].'result'.size()", equalTo(1))
                .body("'groupByResult'[1].'result'[0].'value'", numberMatches(4.617347922E7));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=wB&" + 
                    "format=PPm53tr1&" + 
                    "showMetadata=91O75SHn6fOp&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_145() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=OvRmh&" + 
                    "bcircles=w8mhL8dHF5tKP8dK&" + 
                    "bpolys=qazllSvDG5SCLJw&" + 
                    "filter=fdKWFWaAzFvmna&" + 
                    "showMetadata=x")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_146() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=ctKcQjVj&" + 
                    "bpolys=9RYuXEw&" + 
                    "format=jd4VreC6IFCX")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_147() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=uwZRtkdaPBY6_&" + 
                    "bcircles=coP_HY3LJ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_148() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=&" + 
                    "bpolys=u4JGF&" + 
                    "filter=SgmIbLooyn&" + 
                    "showMetadata=GpMpm4r9wwA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_149() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bcircles=di&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_150() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bcircles=nLOR_EwF15&" + 
                    "bpolys=5L55&" + 
                    "showMetadata=lbeMLHobyecGIR&" + 
                    "time=rAZ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_151() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=jT&" + 
                    "bpolys=zVXpbNpD&" + 
                    "time=MultiPolygon&" + 
                    "timeout=gZSkW3vwIjaPu")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_152() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=&" + 
                    "bcircles=&" + 
                    "filter=KhllH&" + 
                    "format=MnKfMOIvg2I&" + 
                    "showMetadata=IDF5Ts3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_153() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=3SukBc4zMNK&" + 
                    "bcircles=QiM5BSMBoCz&" + 
                    "filter=M_1Deac&" + 
                    "showMetadata=J&" + 
                    "time=N3t")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_154() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bcircles=PhV_OVnzvV6&" + 
                    "bpolys=CZsIK&" + 
                    "format=CPKOR3Nlco&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_155() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bcircles=ZIt9rPwG2&" + 
                    "format=6BZ3_vcuVkY05R&" + 
                    "showMetadata=MQnfj&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_156() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "showMetadata=A8rLLfCFgiH&" + 
                    "time=ZVYEXDt3B&" + 
                    "timeout=mXrVp7O0x5")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_157() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=x08saFbjz&" + 
                    "bcircles=hiznM&" + 
                    "bpolys=dI1zRJcBBPQKX")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_158() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=s3Ndt&" + 
                    "bpolys=_yOXf3bP&" + 
                    "format=__OLKNrNTX&" + 
                    "showMetadata=nFGNw4wu2NGs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_159() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bpolys=g7HyycbhFcr&" + 
                    "showMetadata=ZdTsNFQ1&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_160() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=SpFf2qnjeaXN&" + 
                    "format=6y4niBROz0e80&" + 
                    "showMetadata=v2AOhzGWjcwW&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area
    */
    @Test(timeout = 60000)
    public void test_161() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "showMetadata=2wj&" + 
                    "timeout=N1pO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_162() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bcircles=7gATtjcPnLFNqPB&" + 
                    "filter=jPadEFIMZz4qB&" + 
                    "format=&" + 
                    "showMetadata=GnX")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_163() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=w_JNl&" + 
                    "bpolys=M&" + 
                    "format=dwE55V&" + 
                    "showMetadata=99RPZ25&" + 
                    "timeout=I_NgVo")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_164() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bcircles=Zi1FyEUpp&" + 
                    "filter=NE_MaNhNi9ghD&" + 
                    "format=Wplc99RAASJOHa&" + 
                    "time=cuAXCZsAFz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_165() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=22lq&" + 
                    "bpolys=CEIf5x1fJsGPi&" + 
                    "filter=g3ARKnqA64bN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_166() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bcircles=&" + 
                    "filter=IAs_Wna&" + 
                    "format=NYCPES&" + 
                    "showMetadata=5cE&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_167() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=SVbtESAnvb&" + 
                    "bpolys=y4teAbyy31vlHgxs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_168() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=mPTLqLh0Ed0ClrE&" + 
                    "bcircles=LBWJ65h7J&" + 
                    "bpolys=nEy_R2PMo0&" + 
                    "filter=soJrN&" + 
                    "format=xap&" + 
                    "showMetadata=6jX7kTX&" + 
                    "timeout=5cwItZ8T3r8dKsxr")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_169() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=0Yo&" + 
                    "format=iQQreONZ&" + 
                    "showMetadata=OtLPF8xPVu&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_170() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bcircles=w0ErayLxdY2JQFH&" + 
                    "bpolys=sEv47qYAKEMK2Ea&" + 
                    "format=&" + 
                    "showMetadata=eVhtvjQVfD&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_171() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=rk82Smsa&" + 
                    "bcircles=E5uCcFqtVnM2LSlC&" + 
                    "format=UYW2QviBfsccM9&" + 
                    "time=WnXzDCJalpQh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length
    */
    @Test(timeout = 60000)
    public void test_172() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?" + 
                    "bpolys=pxU0GmNOmweK&" + 
                    "filter=u3zh6mj9kD01v&" + 
                    "format=ys762f&" + 
                    "showMetadata=oh4l4NEMQLZP&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length
    */
    @Test(timeout = 60000)
    public void test_173() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?" + 
                    "bcircles=&" + 
                    "filter=AB&" + 
                    "showMetadata=Nl5DUPTeZTZ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length
    */
    @Test(timeout = 60000)
    public void test_174() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=iIgCqe5&" + 
                    "bcircles=ex2GP1EhGE&" + 
                    "bpolys=XJT83&" + 
                    "showMetadata=M4XtDw")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_175() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=yirj&" + 
                    "bpolys=EPVtcNrTw&" + 
                    "filter=5M3ABovS&" + 
                    "format=07mRjWzYM3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_176() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bpolys=7IgFmtZMTKdARmjy&" + 
                    "filter=gR_KHw&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_177() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "showMetadata=rsQ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_178() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bpolys=eQDM7r&" + 
                    "filter=wKdaSDqL&" + 
                    "showMetadata=02xS735ooH0YQCQ&" + 
                    "timeout=RmoEL1FdYBJpQDLM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_179() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bpolys=17trKDhM&" + 
                    "filter=T_Z")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_180() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "filter=EtdSX&" + 
                    "time=E0ifXO5Pgj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_181() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=lzV9zoN1rVZ6_nE&" + 
                    "bcircles=&" + 
                    "format=KE1xY9mt58XMIAp&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_182() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bcircles=A06_zwjW08M&" + 
                    "bpolys=&" + 
                    "showMetadata=GcBETdKXyiRAr&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_183() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=Lw92LiF&" + 
                    "filter=LKCt5ryZorkd&" + 
                    "showMetadata=yR62dg&" + 
                    "time=g6zoGYTECL352i_N")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density
    */
    @Test(timeout = 60000)
    public void test_184() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density?" + 
                    "bcircles=uPpW0bb5J2ZS5KFt&" + 
                    "filter=UhMvu_noY&" + 
                    "format=b&" + 
                    "showMetadata=mR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count
    */
    @Test(timeout = 60000)
    public void test_185() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=JbxVC2se&" + 
                    "bcircles=emKV6PVra2zpsLn&" + 
                    "bpolys=DOM9uwr6GuUKu&" + 
                    "time=l3F5RJ1QKV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_186() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bcircles=Yb5TRM9qt&" + 
                    "timeout=8QqbOxh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_187() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=PsgE0YpENp7iH&" + 
                    "filter=riUHL2v&" + 
                    "format=SiSnTeh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_188() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bcircles=tQ7CPfsnA0Twc&" + 
                    "bpolys=nhPAXfBgoUx4m&" + 
                    "filter=OzJLSz&" + 
                    "showMetadata=U5Bq3eNosu&" + 
                    "time=MultiPolygon&" + 
                    "timeout=q7poipP_vRPqE")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_189() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=Z&" + 
                    "bcircles=5ufvSNX&" + 
                    "showMetadata=gOZqX9Ygt&" + 
                    "timeout=OuOEKjGUcf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_190() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=7QHVLxICaHy&" + 
                    "bcircles=8XwjE6NF&" + 
                    "bpolys=vEAl0XL9R&" + 
                    "showMetadata=fkwmkuK82nENqC3O")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_191() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "filter=4ArYpQm&" + 
                    "showMetadata=X1&" + 
                    "time=urhu&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_192() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bcircles=dMy6EDgcufA_I&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_193() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bcircles=dnRUofsUMiwX1&" + 
                    "filter=A3LAIEAZL&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_194() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=l5i2JVA5l&" + 
                    "bcircles=5Q84bC0NZK_geZ&" + 
                    "bpolys=Ngf9wbonB1n_o6&" + 
                    "format=lSKWYtYP&" + 
                    "timeout=aokQm0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_195() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bcircles=OQNkf54GwD&" + 
                    "filter=&" + 
                    "showMetadata=ZspLoNHjFKR5PYYM&" + 
                    "timeout=TZSwoyOyeWUBppy4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_196() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density?" + 
                    "bcircles=zAjkG8FqRiSo&" + 
                    "bpolys=qH3QIJUP&" + 
                    "filter=zhN&" + 
                    "time=v1t4W_LCEUlPqM6r&" + 
                    "timeout=cw_8iorSVLapO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_197() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "filter=gYknJfXROr4YZ&" + 
                    "format=jtmhB4lTPU9PPc4&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density
    */
    @Test(timeout = 60000)
    public void test_198() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=l&" + 
                    "bcircles=qy&" + 
                    "time=AgU6FRiE&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_199() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density?" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_200() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=x8hLU&" + 
                    "bcircles=w&" + 
                    "filter=r&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_201() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=5X&" + 
                    "filter=6o2q41Sv&" + 
                    "format=vg&" + 
                    "showMetadata=EtbRYWI5Ig4_bR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_202() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=RvRnmS9xYp&" + 
                    "bcircles=AkIph4UIzbuZk&" + 
                    "format=73jBTb_9R&" + 
                    "time=IWBF&" + 
                    "timeout=H")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_203() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/type?bcircles=2NtQ3yiPOzh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_204() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=p2I2&" + 
                    "bcircles=_GQa4Eyn&" + 
                    "format=umt8uI0OFUAT&" + 
                    "showMetadata=r")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_205() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bpolys=&" + 
                    "showMetadata=w8zjQMT5&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count
    */
    @Test(timeout = 60000)
    public void test_206() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count?" + 
                    "bpolys=peAEPxYcjoU2&" + 
                    "format=iNzmeX&" + 
                    "showMetadata=ZVP6ZlTPfZEo7&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count
    */
    @Test(timeout = 60000)
    public void test_207() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=1RvkTxHcNaqwZ_wA&" + 
                    "bcircles=3eyuAuEi3CwHqKC1&" + 
                    "bpolys=08czy4nuLP&" + 
                    "filter=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count
    */
    @Test(timeout = 60000)
    public void test_208() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=2e1mqVJR&" + 
                    "bcircles=Oe85a&" + 
                    "format=m6QvRjI9OP&" + 
                    "time=&" + 
                    "timeout=Y1NZz1T")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count
    */
    @Test(timeout = 60000)
    public void test_209() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=ERbl5b&" + 
                    "bcircles=Cf467U4mc18br1j&" + 
                    "showMetadata=42sest_gKTJn")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_210() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=4gs89&" + 
                    "bpolys=6XlBtcf4T52R&" + 
                    "format=D1DQY2_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_211() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=5ydnd&" + 
                    "bpolys=lzMVrNB&" + 
                    "filter=SoML2&" + 
                    "format=b&" + 
                    "showMetadata=51kWI&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_212() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bcircles=qYYoRujkL&" + 
                    "bpolys=D5Tq&" + 
                    "filter=K8C6IxqjrR8ayr&" + 
                    "format=27CtB48s&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_213() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/centroid?" + 
                    "bcircles=bzY7&" + 
                    "clipGeometry=1lI&" + 
                    "filter=YunL&" + 
                    "time=C4Kg09a&" + 
                    "timeout=5Yq")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_214() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=u69E85&" + 
                    "bcircles=6Duwa&" + 
                    "showMetadata=sR6w&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_215() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bboxes=&" + 
                    "bpolys=IANggCD1eLUqXc4Q&" + 
                    "clipGeometry=3ZgfKjTD&" + 
                    "filter=xFb3YlAoFzM_bHd&" + 
                    "properties=7MX&" + 
                    "time=N&" + 
                    "timeout=I6V1GLJjyFVX4Sk")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_216() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bcircles=NQXtLmzi0&" + 
                    "bpolys=iAcUqvmiRVw&" + 
                    "properties=kYKP&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_217() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=GZ9SRV&" + 
                    "clipGeometry=5vSysQSd&" + 
                    "filter=JGcBdr3m1p&" + 
                    "properties=VBu3A&" + 
                    "showMetadata=fBS&" + 
                    "time=XC19Cv&" + 
                    "timeout=SkeOyrJ4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_218() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "clipGeometry=giP&" + 
                    "showMetadata=l9kH02J&" + 
                    "time=p2tERC&" + 
                    "timeout=iiFcUd7HOlw")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_219() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=2&" + 
                    "bpolys=6rGdLx76o&" + 
                    "showMetadata=VoQ88H&" + 
                    "time=1goVZfbGMYd_COw")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_220() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/centroid?" + 
                    "bcircles=&" + 
                    "filter=Bh3ERS_q7hGoDYAI&" + 
                    "properties=COPy9jPInR_&" + 
                    "time=MultiPolygon&" + 
                    "timeout=9z3mn8AiM1RkOI")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_221() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/bbox?" + 
                    "filter=30ou_BmoF&" + 
                    "properties=qdQbWF2klX5&" + 
                    "time=O4TxFaMq&" + 
                    "timeout=O0gN2qykFq")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/geometry
    */
    @Test(timeout = 60000)
    public void test_222() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "filter=LgdSmsxcl2&" + 
                    "properties=W6It9gt3dWqH&" + 
                    "showMetadata=aQUBuyIasx3Nv&" + 
                    "time=o6gba")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_223() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=ta&" + 
                    "bcircles=DXCE1RYKlAKujITm&" + 
                    "bpolys=VQexzqYlBC5z0&" + 
                    "time=vfvQi9pV5z_&" + 
                    "timeout=Tx")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_224() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/geometry?" + 
                    "properties=A&" + 
                    "time=B")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_225() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=Q9hkPCWeu&" + 
                    "bcircles=&" + 
                    "clipGeometry=55Jx346&" + 
                    "filter=xwoi&" + 
                    "showMetadata=JB9K2iJq&" + 
                    "time=L1ofz&" + 
                    "timeout=EhFPmpvY")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_226() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bcircles=H7A6FsiZ&" + 
                    "bpolys=LU53bR0n2mB_zaqK&" + 
                    "format=zY0qhX&" + 
                    "showMetadata=SzjJn&" + 
                    "time=HHs&" + 
                    "timeout=3dsCg83Aw")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_227() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=1W3C8z&" + 
                    "bpolys=nXYmsZRgFy8&" + 
                    "format=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_228() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bpolys=u8lzHxhEPOg3&" + 
                    "contributionType=0PeBx6_fGUIlhXV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_229() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bboxes=siJGsu&" + 
                    "bpolys=sbrnA4CCWPr&" + 
                    "filter=onU0&" + 
                    "format=MrP2&" + 
                    "showMetadata=FVzjEaH&" + 
                    "time=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_230() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density?" + 
                    "contributionType=r&" + 
                    "filter=z5xfGXg2n2nL5")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count
    */
    @Test(timeout = 60000)
    public void test_231() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count?" + 
                    "bboxes=M42&" + 
                    "bpolys=grY70N5DqV&" + 
                    "contributionType=Nujq__rt&" + 
                    "filter=&" + 
                    "format=qgEaxi&" + 
                    "showMetadata=sdwy6VDyl_u&" + 
                    "timeout=HSxzdTFkoLP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_232() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "filter=njZnjLZju4jbA&" + 
                    "filter2=icaVuWyeiAsIGr&" + 
                    "showMetadata=RCgjEpus6I14P&" + 
                    "time=_tidJ_BGwinwAR3&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_233() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=kda&" + 
                    "bcircles=d8F3qcU4f7gxXZi&" + 
                    "bpolys=lAFMr_Xp97g&" + 
                    "filter2=TEUxlS4aIyzTuWyb&" + 
                    "format=XYIiTKXAL&" + 
                    "showMetadata=P&" + 
                    "time=14oy7GzvdQNnbEs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_234() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bcircles=FU5gf5TMCs8TGJ&" + 
                    "format=Spi9f9rjkg&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_235() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=dGCwqDRBu1rqZL&" + 
                    "timeout=unMy")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_236() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bpolys=jI&" + 
                    "filter=A8k_qdUSHBLwoL&" + 
                    "format=ffA&" + 
                    "groupByKeys=q4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_237() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=CVRXAsF0HHCG2o&" + 
                    "bcircles=gflsyuBUtq3G&" + 
                    "filter=xE1QPAPBO&" + 
                    "format=tjRjk_7&" + 
                    "groupByKeys=0p6xJor8WbU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_238() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "filter=PLg32&" + 
                    "groupByKeys=9s&" + 
                    "showMetadata=oUwk4WfdLrqpmS&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_239() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=2&" + 
                    "bcircles=Dp9hPO9Zm&" + 
                    "bpolys=HL&" + 
                    "filter=ZznWnrggQ6q6&" + 
                    "format=Jy2WdfaTp&" + 
                    "groupByKeys=LjB&" + 
                    "timeout=CCYVENP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_240() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=7&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_241() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=emi&" + 
                    "filter=b_f9ExYN&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_242() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=567QTEkS&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_243() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bcircles=U2t24sr2Yt&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_244() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=oOH06SV3sGB&" + 
                    "format=json&" + 
                    "time=ejAgW")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_245() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=b9cC0_fsprdj&" + 
                    "bpolys=M8i3&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_246() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=U&" + 
                    "filter=ugwXp9B0n8yl9_&" + 
                    "format=eJK3wn2in&" + 
                    "groupByKeys=wYCi3ugyZr")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_247() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=yYXrCjhr&" + 
                    "bcircles=desI6t_QPbbti&" + 
                    "bpolys=Rt0StGlPDfU8s4KW&" + 
                    "filter=GD8&" + 
                    "groupByKeys=XQ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_248() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=5dW5CkfBpMHer&" + 
                    "bpolys=nSUBHxo&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_249() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "format=json&" + 
                    "showMetadata=hvLalSs8P9sZKm")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_250() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=z&" + 
                    "bcircles=jSjBDS7sM2qZ&" + 
                    "bpolys=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_251() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=NRXnW86p&" + 
                    "filter=z&" + 
                    "format=0nKcK2MOtw&" + 
                    "showMetadata=Tr25xB&" + 
                    "time=MultiPolygon&" + 
                    "timeout=BKPuP2gMR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_252() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=2AVwKGZhvm7mH8aD&" + 
                    "showMetadata=Yk&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_253() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bpolys=lCMSublZ&" + 
                    "filter=PMej6jWpn0&" + 
                    "format=json&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_254() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=dOpaPyu8wMA6O&" + 
                    "format=yGgE4O&" + 
                    "showMetadata=ChSogTWZD9JHVmP&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_255() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=xhw8cAvTk")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Invalid filter syntax. Please look at the additional info and examples about the filter parameter at https://docs.ohsome.org/ohsome-api. Detailed error message: line 1, column 10: whitespaces, EQUALS (=), NOT_EQUALS (!=) or in expected, EOF encountered."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_256() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bboxes=uW&" + 
                    "filter=17cXRHdJTV3GB2&" + 
                    "filter2=RPvINO4i08SKat&" + 
                    "format=X0pEmTeJzw&" + 
                    "timeout=5AG4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/ratio
    */
    @Test(timeout = 60000)
    public void test_257() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio?" + 
                    "filter2=2Sh_TmQUOhlc&" + 
                    "format=KYKDBm&" + 
                    "showMetadata=vDd3itpUgTF&" + 
                    "time=oj9H")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_258() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bcircles=DW&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=3R9Y&" + 
                    "showMetadata=tvF4Nq&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_259() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bcircles=y_NQ&" + 
                    "bpolys=M3sUm07wX_zMNV&" + 
                    "contributionType=jckett_XWCvXH1F&" + 
                    "showMetadata=1XLH_Sfm1smnd&" + 
                    "time=qSHEA1hiJJVWWx_F")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_260() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=V8TJQrtoEdyjg&" + 
                    "bpolys=Arj4K38&" + 
                    "filter=jylF3d_su9VglOK&" + 
                    "format=EpiI&" + 
                    "showMetadata=eKWRxPsGr7B&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_261() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "format=H857e4lsif&" + 
                    "groupByKeys=&" + 
                    "timeout=O1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_262() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "filter=IrCijmJ6h29XTcV&" + 
                    "groupByKeys=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_263() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bcircles=p&" + 
                    "groupByKeys=zBQ_THFBL&" + 
                    "time=MultiPolygon&" + 
                    "timeout=vyWgoBElQxFg")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_264() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "filter=2f72x15AoXwQzXQI&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_265() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=nZzscewhzEsoB51&" + 
                    "bpolys=xyZfjjMb&" + 
                    "format=7A_hKRHOHJM1HW&" + 
                    "showMetadata=jQTvj8UrG&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_266() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=Ak_213gGl&" + 
                    "filter=zC&" + 
                    "format=z69wHkLK1l&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_267() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=GqvoRLTTiW&" + 
                    "bcircles=PyhMAmWrAbrZ&" + 
                    "bpolys=x4haOofAbas&" + 
                    "format=json&" + 
                    "showMetadata=ltEWZUfbNqn14v&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_268() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=_&" + 
                    "bcircles=5CGC4MYa&" + 
                    "filter=nSzHWTbmU&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_269() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=z_YbFtixJmfb&" + 
                    "bpolys=JwBf&" + 
                    "format=BPTncHeYPt&" + 
                    "showMetadata=3G4NxRxxIg&" + 
                    "timeout=we7A3YNbB")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_270() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=mIB&" + 
                    "bpolys=p7tUNCjYIEep2d6E&" + 
                    "showMetadata=w&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_271() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bcircles=0JBVA_wX4cG&" + 
                    "bpolys=YWfnpdJtz4Pqb2QB&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=DcJX7Mt9RzCIVd&" + 
                    "showMetadata=Wgo_WijGAEPIJ6e&" + 
                    "time=pz3ajUmoIMWc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_272() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=tNL_CcHgAUPTDi&" + 
                    "bpolys=tbC47rNEX58X&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_273() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bcircles=zQI&" + 
                    "format=ZIYfLLn&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_274() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=_DwQyiM&" + 
                    "bpolys=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=Es8WyT&" + 
                    "showMetadata=uytI2hSG&" + 
                    "time=aVJdoCpy")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length
    */
    @Test(timeout = 60000)
    public void test_275() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=uL12MRdqJyi")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given 'format' parameter is invalid. Please choose between 'geojson'(only available for /groupBy/boundary and data extraction requests), 'json', or 'csv'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length
    */
    @Test(timeout = 60000)
    public void test_276() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bcircles=M&" + 
                    "bpolys=LiG4&" + 
                    "filter=J7nsNQ&" + 
                    "format=json&" + 
                    "showMetadata=Yrt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length
    */
    @Test(timeout = 60000)
    public void test_277() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?" + 
                    "bcircles=_R6D56yH&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length
    */
    @Test(timeout = 60000)
    public void test_278() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=pKgJW&" + 
                    "bcircles=20nw4L2&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_279() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bcircles=&" + 
                    "bpolys=qsUxNwQ0ZBivf&" + 
                    "filter=QQMZY&" + 
                    "filter2=XYa4gJlP8t0By9uf&" + 
                    "showMetadata=&" + 
                    "time=rIGDq7eHrcrQ&" + 
                    "timeout=nXJY")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_280() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The query did not specify any parameter. Please remember: You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_281() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=LSoK7fxSFFybT2&" + 
                    "bpolys=cjl6&" + 
                    "showMetadata=F")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_282() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=KD&" + 
                    "filter=lvvR&" + 
                    "format=HrLu5JgRK2ON_n1&" + 
                    "showMetadata=6qXbx2fpnCTW&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_283() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bpolys=Tmm61y6fgb7&" + 
                    "showMetadata=hTpdj4b9qvsWTZuW&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_284() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=W_WiKVyX&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The provided time parameter is not ISO-8601 conform."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_285() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bcircles=ik&" + 
                    "bpolys=zp3sKPFUsjIx&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=1Gh390R1iQvL&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_286() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "filter=joNPFIooKe8d&" + 
                    "showMetadata=WvFAfohQvkZJH&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_287() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=pflqZHx&" + 
                    "format=json&" + 
                    "time=bE")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_288() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=F0XZIN5&" + 
                    "bpolys=vZsM8k&" + 
                    "filter=r&" + 
                    "format=vL5K&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_289() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bcircles=&" + 
                    "bpolys=2n&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_290() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=bc&" + 
                    "bcircles=MtKObQqVOro&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=LUf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_291() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=pG2XRYEEfmqxeG&" + 
                    "filter=Fob5&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count
    */
    @Test(timeout = 60000)
    public void test_292() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=cSCNWAMWonJ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_293() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "filter=X5jo&" + 
                    "format=VKb1mS3YB&" + 
                    "showMetadata=PP&" + 
                    "time=9MSaaFFQu&" + 
                    "timeout=LI")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_294() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bcircles=7z7l&" + 
                    "filter=2jRVH_f&" + 
                    "showMetadata=y&" + 
                    "time=rvzfjYWBsV&" + 
                    "timeout=WyGtdysCVp2eHn2N")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_295() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=PowkHm&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=vX9fpyWA58Ptt&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_296() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=DzD6REeeX&" + 
                    "bpolys=JXAmMC&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_297() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=4xlqyMdRPXjXX&" + 
                    "bcircles=F_3USaALq&" + 
                    "filter=J5MXqLqcZB&" + 
                    "groupByKeys=KQ&" + 
                    "time=G")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_298() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=cBRi9274A5w&" + 
                    "bcircles=lk4WkxaMvp&" + 
                    "bpolys=j8Ts9JBs3NVgkxD&" + 
                    "clipGeometry=CqLYfSzSa9V_nJdz&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_299() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bcircles=JMjZwVOULYG&" + 
                    "bpolys=R0WniX&" + 
                    "contributionType=Pksup6&" + 
                    "filter=RqpD_huEmZ&" + 
                    "format=SycFY7WJst9&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_300() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "contributionType=Mc9uEbzGYdBZfbO&" + 
                    "format=OwV205&" + 
                    "showMetadata=pqIgpLetOohv")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_301() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bpolys=6VYYyfB6jYP2M&" + 
                    "showMetadata=13WBsMERA1_xuLO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_302() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bpolys=4OHfJ3Y&" + 
                    "filter=&" + 
                    "format=OHumrjlAC_7y&" + 
                    "showMetadata=2N3Aa&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_303() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bcircles=ADP0&" + 
                    "bpolys=y17mXlcrsIhh0C&" + 
                    "contributionType=BXEiyxi&" + 
                    "filter=3ke1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_304() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bcircles=eS_GaFXXQJKc7IPg&" + 
                    "contributionType=NEaZ9v&" + 
                    "filter=vFt6Myzz&" + 
                    "format=PbFX8pZS&" + 
                    "showMetadata=6Y1PMCOOpG8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_305() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=fe&" + 
                    "format=Y0WaP0dq5&" + 
                    "time=HCsArG07xNbw&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_306() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count?contributionType=GN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_307() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count?" + 
                    "bpolys=L9soNgvFr7&" + 
                    "filter=R4rXzI&" + 
                    "format=xQWSKdcJdAGEZe&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_308() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=xpoG9bnZWKf&" + 
                    "format=lgIK&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_309() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=iVqE50&" + 
                    "bpolys=gx_WYoU2fo&" + 
                    "filter=V&" + 
                    "showMetadata=epI1a2aku_ADIt&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_310() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bpolys=Kz3&" + 
                    "filter=hlm9WpJ067AI7_R&" + 
                    "showMetadata=l&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_311() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=qNVZsPP&" + 
                    "bcircles=tB3z9IrEkd_&" + 
                    "format=st4QMcodXdh35mCc&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_312() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bcircles=Vq1O61cdyU32I&" + 
                    "format=json&" + 
                    "showMetadata=KAjXYeY&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_313() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=Sv&" + 
                    "bcircles=H_sL&" + 
                    "filter=HJV0&" + 
                    "format=json&" + 
                    "showMetadata=szhxmrmutRc&" + 
                    "time=QR&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_314() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bcircles=1O&" + 
                    "bpolys=mSDeSlrNflyjxHro&" + 
                    "filter=aHJStnkW0J&" + 
                    "format=json&" + 
                    "showMetadata=Z&" + 
                    "time=h4XfPI&" + 
                    "timeout=qZ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_315() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=9u82v4cnra&" + 
                    "bpolys=HuTeRAA3U7tWFma&" + 
                    "showMetadata=I4goog&" + 
                    "time=FwU&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_316() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=BQRE3SSuNxbgj2z&" + 
                    "bcircles=rX8WG7&" + 
                    "bpolys=J&" + 
                    "showMetadata=r6VjHVlgMJNwkad&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_317() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=1WMPBaTDmK&" + 
                    "bpolys=Mld08S8nMFs89i&" + 
                    "filter=10pHt4A5UmW_in3&" + 
                    "timeout=eVq8sh0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_318() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=BtBqSl78RR&" + 
                    "bpolys=ug0p&" + 
                    "filter=HLw&" + 
                    "showMetadata=RZ__KRGK&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area
    */
    @Test(timeout = 60000)
    public void test_319() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Who2yutctL&" + 
                    "bpolys=_Qy9vaSQv4&" + 
                    "filter=5lfft9C5Jk9&" + 
                    "format=9dyCLlJxR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_320() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=ZI4W7kbLvX&" + 
                    "contributionType=4B8Dbxe&" + 
                    "filter=dVG&" + 
                    "format=vjQuisH&" + 
                    "timeout=KD")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_321() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bcircles=rIU&" + 
                    "contributionType=OCTKWf&" + 
                    "filter=BzFi8wogJK7C&" + 
                    "timeout=kcx")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_322() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bcircles=ig80QHv&" + 
                    "contributionType=ru2&" + 
                    "filter=Fg7UMxPxljLmef7&" + 
                    "showMetadata=_u&" + 
                    "time=hNDa9")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count/density
    */
    @Test(timeout = 60000)
    public void test_323() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density?" + 
                    "contributionType=_HoJiahqBdd7sdo&" + 
                    "filter=SCF1&" + 
                    "format=A&" + 
                    "showMetadata=l&" + 
                    "time=6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_324() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bboxes=Wt&" + 
                    "bcircles=Vvps&" + 
                    "bpolys=YmUqet&" + 
                    "filter=MaaLMasIsa&" + 
                    "filter2=GsTNmK0&" + 
                    "format=IIYAgYoeDTDmOtD&" + 
                    "showMetadata=Eq&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_325() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bcircles=&" + 
                    "bpolys=WQrSHR55XCN9VI&" + 
                    "format=ZeAeC&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_326() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bcircles=BJ&" + 
                    "filter2=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_327() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/bbox?" + 
                    "clipGeometry=GShPalsKeWhYpMpa&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/centroid
    */
    @Test(timeout = 60000)
    public void test_328() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bcircles=KnTm3b9&" + 
                    "bpolys=Duch1rCsQORmjp&" + 
                    "clipGeometry=pa&" + 
                    "filter=Vk7Xy3gIsAuvvJ&" + 
                    "properties=AgfBH&" + 
                    "showMetadata=TeaShFcWeuOFl&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_329() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=T9&" + 
                    "bpolys=&" + 
                    "filter2=8HJs0cFN0w9m&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_330() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=XH&" + 
                    "bcircles=&" + 
                    "filter2=7tzVQfLN8&" + 
                    "showMetadata=ncR8Wot5vLUD9mgA&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_331() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=ogZ4gwJcC&" + 
                    "format=Ahx1eVU&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_332() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=kTQC&" + 
                    "bpolys=yrSBys9BAS1E&" + 
                    "filter=Y&" + 
                    "showMetadata=wfP&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_333() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bcircles=p2&" + 
                    "bpolys=tjkFrWKd&" + 
                    "showMetadata=UC0Yqm5779NKKm&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/centroid
    */
    @Test(timeout = 60000)
    public void test_334() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bcircles=Tv6_MvuT7W_6tR&" + 
                    "bpolys=m8sFd&" + 
                    "properties=_vDd8pEz_Ly8I&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_335() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bboxes=PsR8aFZG0_&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_336() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bcircles=AOpY&" + 
                    "filter=nEyxpw61pGuubxl&" + 
                    "properties=YZuyykbB&" + 
                    "showMetadata=Z1E4&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_337() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bcircles=OjvMW_c0l&" + 
                    "bpolys=LyMzEfu9MMd&" + 
                    "filter=b7r&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_338() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bcircles=24N8PlQR&" + 
                    "bpolys=e&" + 
                    "filter=8SXJfTM&" + 
                    "format=Xhy6mcV6YA2iXplw&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_339() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bcircles=QOQf4TYr&" + 
                    "groupByKeys=LJMifvcV_2&" + 
                    "showMetadata=cY2LJ6tgO2&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count/density
    */
    @Test(timeout = 60000)
    public void test_340() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=R9aKM&" + 
                    "bcircles=DY&" + 
                    "bpolys=_1kboxJPVg&" + 
                    "contributionType=mJAd7dlchYdWBPdA&" + 
                    "filter=pCmJvHnrSCOz&" + 
                    "showMetadata=e&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count/density
    */
    @Test(timeout = 60000)
    public void test_341() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=9WlN&" + 
                    "contributionType=wIoNGGFb6M0&" + 
                    "format=1j29g&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_342() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bcircles=NgHZZ4u&" + 
                    "bpolys=_Unec7grQ_Mvp&" + 
                    "time=s")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_343() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bcircles=Ipfw5&" + 
                    "bpolys=nofQ&" + 
                    "format=6j63l")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_344() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bboxes=BExaFeiGc&" + 
                    "bpolys=HgidX6qwt&" + 
                    "contributionType=njOxVVydRI&" + 
                    "filter=IkXc5HkEMKSMl0p&" + 
                    "format=Ym&" + 
                    "showMetadata=_i_AVLxNFNP&" + 
                    "time=0gd&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_345() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "filter=RVn2A&" + 
                    "format=90piDou2dZbR9VCS&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count
    */
    @Test(timeout = 60000)
    public void test_346() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count?" + 
                    "bcircles=A9E9YfolZiN&" + 
                    "filter=3M&" + 
                    "time=dLzHmRGZ5dEfy&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count
    */
    @Test(timeout = 60000)
    public void test_347() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count?" + 
                    "format=9Y&" + 
                    "time=W1d9Vy&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_348() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=x&" + 
                    "bpolys=&" + 
                    "filter=jzZFFa&" + 
                    "showMetadata=6BQri6h")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/geometry
    */
    @Test(timeout = 60000)
    public void test_349() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bboxes=tNr5&" + 
                    "bcircles=rwZB7Hf&" + 
                    "bpolys=U&" + 
                    "clipGeometry=__n56&" + 
                    "filter=MwQm9voYeIxWSZSb&" + 
                    "properties=pha&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count
    */
    @Test(timeout = 60000)
    public void test_350() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count?" + 
                    "bboxes=ezwzOVF8qzkgAWXT&" + 
                    "bpolys=bMQaeAaQNQ0&" + 
                    "filter=sN3y8jkH&" + 
                    "format=0DDJ2hSfmy_fOv&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density
    */
    @Test(timeout = 60000)
    public void test_351() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "format=json&" + 
                    "showMetadata=c5tUn6xl3EDEe&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_352() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bcircles=U0mZoGShWrXHE&" + 
                    "bpolys=P8IZL&" + 
                    "filter2=e9CIRt&" + 
                    "format=NppJeAE&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_353() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/type")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The query did not specify any parameter. Please remember: You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_354() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bpolys=JKDjmTqx&" + 
                    "filter=LFQSeI_uLC83Rd&" + 
                    "format=json&" + 
                    "showMetadata=70eNT1L&" + 
                    "time=ILw")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_355() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/geometry?" + 
                    "bboxes=7jW5blMc5td&" + 
                    "properties=xVs&" + 
                    "showMetadata=l82g7UrI&" + 
                    "time=MultiPolygon&" + 
                    "timeout=XEmRDaSTXW")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_356() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "filter2=9&" + 
                    "showMetadata=9d1q2gBvj04rw9fT&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_357() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bboxes=W2sLanJ&" + 
                    "bcircles=TM_sWx&" + 
                    "filter=6u1RE45x&" + 
                    "filter2=jo9h&" + 
                    "format=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_358() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bboxes=QXX&" + 
                    "bpolys=vXc4xcvbFXm3dR&" + 
                    "format=&" + 
                    "showMetadata=CnfkL3WjRZ&" + 
                    "time=VehKlgnT1oG2")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_359() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bboxes=lxVEorDB9JPE&" + 
                    "bcircles=i&" + 
                    "format=QvWO6oaM&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_360() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bpolys=sO1rFgseJV94FI75&" + 
                    "contributionType=G3euXxnYl6dGzkn&" + 
                    "showMetadata=nj53&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_361() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bpolys=sT0C2BHkc6FMR&" + 
                    "format=json&" + 
                    "showMetadata=Z2&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_362() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=U_b&" + 
                    "bcircles=Uh67vQVsx2q&" + 
                    "bpolys=&" + 
                    "contributionType=JOwyqc&" + 
                    "format=l_Zltfs5N2Rnv&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_363() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=ew&" + 
                    "bpolys=VvtAorF9IAHROMYl&" + 
                    "format=F5zPc_EDQn43&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_364() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bcircles=9HTwoyw2tJ55l&" + 
                    "contributionType=r7pm1R&" + 
                    "format=FYnM1tCamf&" + 
                    "showMetadata=Lfs2D9CV4vffbKV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_365() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/bbox?" + 
                    "bcircles=tnC&" + 
                    "showMetadata=vMM9WFn&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_366() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=N7Hrcq0WYy&" + 
                    "bcircles=&" + 
                    "bpolys=&" + 
                    "filter=S2iP&" + 
                    "properties=YbY5ZU4YSco4u&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_367() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bboxes=aEiFpG5nV0_&" + 
                    "bcircles=xskRPwaaws&" + 
                    "bpolys=H&" + 
                    "filter=4EDEqiO6jVdlY8&" + 
                    "time=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_368() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bcircles=PHOS35P8DQGe&" + 
                    "bpolys=Qdbt&" + 
                    "filter=ICKsTM3341B&" + 
                    "filter2=wXt3TBK")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_369() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=YfJDooTAtU&" + 
                    "clipGeometry=dL8R0nSKjv&" + 
                    "filter=kBJkXJWGfEscxr&" + 
                    "properties=J4j9Biipq&" + 
                    "showMetadata=y_FC1Ixl6R2d&" + 
                    "time=MultiPolygon&" + 
                    "timeout=j")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_370() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=qxJGV&" + 
                    "bcircles=&" + 
                    "clipGeometry=reqXb9dPEFb&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_371() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bboxes=Gda6l&" + 
                    "bpolys=glJ9SUhZlgNkhbB&" + 
                    "filter=&" + 
                    "format=A0QaowbkzmFz&" + 
                    "showMetadata=jVJrWIeMNf&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_372() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "filter2=Cy0PTrI&" + 
                    "format=_QNHT&" + 
                    "showMetadata=_gmbHPsF6&" + 
                    "time=MultiPolygon&" + 
                    "timeout=JqD0t_2xPLl")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_373() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bcircles=XawMoDem2x293YrF&" + 
                    "filter=xiFSBRinauZteOFy&" + 
                    "format=z4kOT&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_374() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bcircles=Qyv2le0LxG&" + 
                    "filter=8&" + 
                    "showMetadata=NWsrecJ4Z_iqfVg&" + 
                    "time=MultiPolygon&" + 
                    "timeout=UxPrHxyt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_375() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=8OdscGbc&" + 
                    "bcircles=&" + 
                    "bpolys=o1u9&" + 
                    "filter=2zoQS6PeE&" + 
                    "properties=QQFoXZYB&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_376() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bcircles=60L&" + 
                    "bpolys=Iv1H2pZSAo&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_377() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=YYzWMXf4ZEPFu1o&" + 
                    "bcircles=WQweARc&" + 
                    "bpolys=5GZtKYsnhVhYuYQ&" + 
                    "clipGeometry=z4yZPqS0YVIul&" + 
                    "filter=p&" + 
                    "showMetadata=a_xfkXtp&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_378() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=Hpy&" + 
                    "bcircles=5&" + 
                    "bpolys=47u2&" + 
                    "clipGeometry=pFmc3pOlwBbGQRsi&" + 
                    "filter=g4_SH7wj&" + 
                    "properties=d8BJe2Gknum&" + 
                    "showMetadata=n0YBebflBI&" + 
                    "time=ZxIf0WQemNtfU4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_379() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=xCT&" + 
                    "bcircles=KbgZSt&" + 
                    "filter=gn7PswdvoDOUCZ&" + 
                    "filter2=A3ZoUcvXa")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_380() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bboxes=oz0jkn9O2Z6TjyP&" + 
                    "bcircles=H9RCfrAdZD7t9t&" + 
                    "bpolys=RUbaYaNYwlGYG&" + 
                    "filter=7D7o8M2a4u8avvJk&" + 
                    "showMetadata=EZ&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_381() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=EHh9aPLY1o8iQd7H&" + 
                    "bpolys=XSSCRVF&" + 
                    "showMetadata=M&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_382() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=8&" + 
                    "bpolys=O7zU2kTHHVe9qyn&" + 
                    "groupByKeys=Bod9Ct2tPI&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_383() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bpolys=PZoVlmKwkRYKWL&" + 
                    "filter=v&" + 
                    "format=json&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_384() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=D9sZRCiy1&" + 
                    "bpolys=VWxoJ&" + 
                    "filter=V&" + 
                    "format=json&" + 
                    "showMetadata=HqiG3T7trlsZ7K")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_385() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=dybsH7wUnAJq7N3&" + 
                    "bcircles=PWVnFNO&" + 
                    "format=Y4jNq&" + 
                    "groupByKeys=7kI1w7_4Irzjdmx&" + 
                    "showMetadata=uMqSX_AHNKS")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_386() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=V_SueUs8sDD&" + 
                    "showMetadata=HfPVU1135J")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_387() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "filter=RLaLwNmra&" + 
                    "groupByKeys=FJe&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_388() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=JF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_389() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=&" + 
                    "bpolys=CtZ1ViV2nXnyttY&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=9og&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_390() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bcircles=MioVh8u00lVXqt&" + 
                    "bpolys=2dvaPGGNJwJRj_&" + 
                    "clipGeometry=I7sYjv&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_391() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bboxes=cDWicPVj&" + 
                    "clipGeometry=DydDsJfGTUyWr6&" + 
                    "properties=tags&" + 
                    "time=MultiPolygon&" + 
                    "timeout=hN0DGof1SzRuaY")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_392() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=WZ&" + 
                    "bcircles=1O&" + 
                    "bpolys=Jtf&" + 
                    "filter=jQjnSfYEqScu&" + 
                    "groupByKey=h6xF3VG&" + 
                    "timeout=RtdXWQDJLP1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_393() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=fd&" + 
                    "bpolys=4Ew6kUOlBBDVEv6&" + 
                    "format=bOJXi&" + 
                    "groupByKey=L&" + 
                    "groupByValues=698802.99")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_394() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=rTRtWcHAn8qP&" + 
                    "properties=tags&" + 
                    "time=x0zIYJgqjh&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_395() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=brYndBcnC9T&" + 
                    "bpolys=_l2h8MYnV&" + 
                    "contributionType=6NWJIVMGM9C&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=FxWInfH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_396() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bcircles=z8Ued6tH&" + 
                    "bpolys=CQzii3ulg3&" + 
                    "filter=nsXp&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_397() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bcircles=am2&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=7glFItR&" + 
                    "showMetadata=q&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_398() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=1T1V2jS5ee&" + 
                    "showMetadata=FsvtJrpK&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_399() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=&" + 
                    "filter=2uTLweLxlw&" + 
                    "properties=ENO2oJ&" + 
                    "showMetadata=n3TyN&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_400() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=RbF3h3ar&" + 
                    "bpolys=xu6EvPg9eGyv9&" + 
                    "clipGeometry=l8O1ny1NvE1&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=UPos")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_401() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/centroid?" + 
                    "bcircles=ZBCP3FsR&" + 
                    "bpolys=EQBdk&" + 
                    "properties=tags&" + 
                    "showMetadata=1mYWW8HmOmU_vN9L&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_402() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bcircles=yrXu3SL&" + 
                    "clipGeometry=bN&" + 
                    "filter=z2eAT&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_403() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/geometry?" + 
                    "bboxes=ux8Xu9g&" + 
                    "bcircles=qZl8UmUg4rKz&" + 
                    "bpolys=2luOL8SdAV05Z&" + 
                    "clipGeometry=Pvb2c6ckt5A&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_404() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "properties=p_TmM_&" + 
                    "showMetadata=sYxUNZu8&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_405() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bcircles=1ubc&" + 
                    "bpolys=Ia&" + 
                    "contributionType=1hlmwWPdXI&" + 
                    "format=0zsQ&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_406() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=1oFi1zBC&" + 
                    "bcircles=ZZZ13CTPUmR&" + 
                    "bpolys=lOseXZSERs&" + 
                    "format=Isox&" + 
                    "showMetadata=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_407() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=5URwf03&" + 
                    "filter=SIMqHYmg&" + 
                    "format=5VStq49JFQt3&" + 
                    "groupByKeys=3VDhAT89JFSPOqXm&" + 
                    "showMetadata=8iQlQVQZbFL_bE&" + 
                    "timeout=XC7md")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_408() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=4&" + 
                    "bcircles=o&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=uB&" + 
                    "showMetadata=h7WdAE8dHrf_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_409() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bpolys=rL1HsN&" + 
                    "contributionType=63cMeHdddeuo&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_410() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bboxes=5EaUj5R5Wrcemun&" + 
                    "bpolys=pyCRymE8NF&" + 
                    "filter=x1&" + 
                    "format=json&" + 
                    "showMetadata=CY7&" + 
                    "timeout=3LdMf0q")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_411() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_412() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bpolys=q_EYe1hE6xjvLm3&" + 
                    "contributionType=sfH7xdLrDj8&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=10GRz0C6W&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_413() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=fBwQhkxC&" + 
                    "showMetadata=mBH0&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_414() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=5C9Uv6k_MNI5oQ&" + 
                    "bpolys=QpDG&" + 
                    "format=kXN&" + 
                    "showMetadata=UrVPdGAvhLv&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_415() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=klymBWSw_J&" + 
                    "contributionType=X&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_416() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Lm&" + 
                    "contributionType=QgtlBs&" + 
                    "filter=ZJoh3UW0Sq8wDg&" + 
                    "format=j7wjhzxZU&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_417() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "bpolys=jOuA&" + 
                    "format=u&" + 
                    "showMetadata=NH9n2V_0&" + 
                    "timeout=NVCtBevP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count
    */
    @Test(timeout = 60000)
    public void test_418() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bboxes=0a0E70MK_f4De&" + 
                    "bcircles=96YuT&" + 
                    "bpolys=9to202lmMLWwzO&" + 
                    "format=json&" + 
                    "timeout=3euRY1k")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_419() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_420() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=S1BIQO5Xanx3&" + 
                    "format=nuZRr&" + 
                    "showMetadata=UGye9rdi9vs5&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_421() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=cWdKLKeJEngf&" + 
                    "filter2=ro&" + 
                    "format=ltY_chKrtMahUs&" + 
                    "time=MultiPolygon&" + 
                    "timeout=B1Px3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_422() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=Z_kmt5BgkheW3w&" + 
                    "filter=68sw&" + 
                    "format=yOpauhl7&" + 
                    "showMetadata=oOEoSfguwz2Wt&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_423() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=D&" + 
                    "bpolys=UtsXjR2uM&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=8mWmhDBTMn4Tu0LV&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_424() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bcircles=ih&" + 
                    "bpolys=w5r9dnXMp88&" + 
                    "filter=J6UYa&" + 
                    "groupByKey=YSLadAJM88s&" + 
                    "groupByValues=9gsoALG&" + 
                    "time=XRSmvxj5zebo&" + 
                    "timeout=3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_425() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "format=bVwe9d&" + 
                    "groupByKey=BFGgQDEk7N1&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=Tapk4SxDt&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_426() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=ZTzNfgXSu&" + 
                    "filter=Ly5WMwoZEMbBvt&" + 
                    "groupByKey=A&" + 
                    "groupByValues=0fJGKdamXqmOWbyn&" + 
                    "timeout=wxFznpzUemYIv")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_427() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=qvv_QE1Ze&" + 
                    "filter=type%3Away+and+natural%3D*")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_428() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=r&" + 
                    "bcircles=ixm85RVZT3&" + 
                    "bpolys=q5kXEh&" + 
                    "filter=mtZE&" + 
                    "format=json&" + 
                    "showMetadata=5M1j_&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_429() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bcircles=dtfui9S6eVep&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "format=json&" + 
                    "showMetadata=0inRWlmv&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_430() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=ebHVG0Mx&" + 
                    "bcircles=TLS5h7ctkY6Rw&" + 
                    "format=json&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=FooJ2JjXLuBc9zW")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_431() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=gASXCDkXvDdKTlT&" + 
                    "bpolys=61HGYd&" + 
                    "format=Dw7v&" + 
                    "groupByKey=k0x_jS&" + 
                    "groupByValues=UOEvsA6eKjU9&" + 
                    "showMetadata=2E&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_432() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=CAOFf72h&" + 
                    "bcircles=YBFZ1IsdjJP&" + 
                    "bpolys=La15XSLkRTDnm&" + 
                    "filter=YBK&" + 
                    "groupByKey=&" + 
                    "groupByValues=c2&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_433() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=f&" + 
                    "bcircles=&" + 
                    "bpolys=LoMM0&" + 
                    "groupByKey=goCP&" + 
                    "showMetadata=uF7_s9jlwuiJYyR&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_434() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=vjf&" + 
                    "bpolys=9r5vr&" + 
                    "groupByKey=Ikq5XVoiPt4h6DV&" + 
                    "groupByValues=tmhsZFgoowaN&" + 
                    "time=dV1rmuo19sP7OvS4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_435() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=xLhTN&" + 
                    "bpolys=BNQ&" + 
                    "groupByKey=LRiF0U&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_436() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=&" + 
                    "bcircles=E1tWu7wc9OlOy8_y&" + 
                    "bpolys=S&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_437() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bcircles=pFt8&" + 
                    "bpolys=QeN&" + 
                    "filter=&" + 
                    "format=json&" + 
                    "showMetadata=6P1GlyYjxO&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_438() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=F760lierr1YObL&" + 
                    "filter=type%3Away+and+natural%3D*")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_439() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=doAyX4xWgjZ2Yvbl&" + 
                    "filter=c28R01Mb0oG_5W&" + 
                    "format=json&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_440() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bcircles=YTQvETe6EtRs&" + 
                    "bpolys=1qClGq&" + 
                    "format=json&" + 
                    "showMetadata=kK51aC&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_441() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=hHmeLX&" + 
                    "bpolys=MTcrXb0&" + 
                    "filter=iWAzw3ZbvYh&" + 
                    "format=json&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/ratio
    */
    @Test(timeout = 60000)
    public void test_442() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "filter=HP9ISO&" + 
                    "filter2=type%3Away+and+highway%3Dresidential&" + 
                    "format=&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_443() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bcircles=4mXyhA&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "showMetadata=QzIr&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_444() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=8mrAji8aBsxkDXI7&" + 
                    "bpolys=mYFQF4ht&" + 
                    "filter=h4ubxTIpEDU4Ww1&" + 
                    "format=GMrpwcnqqc&" + 
                    "groupByKey=hcUhsL083RTlYq&" + 
                    "showMetadata=30tCALlzblj1&" + 
                    "time=YWZYe")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_445() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=UhMUySZFulv&" + 
                    "time=MultiPolygon&" + 
                    "timeout=kqPro_NeYKAc1F")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_446() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=zMsIPdZphBBE&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=AgPWIDOxRFdxcI")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_447() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=KbZWIdbL&" + 
                    "bpolys=9IcOiB84bE7&" + 
                    "filter=Gry9j&" + 
                    "groupByKey=KhhLHk0i2Gc_W&" + 
                    "groupByValues=1529.91&" + 
                    "showMetadata=QenZniv71UxggY")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_448() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bcircles=o&" + 
                    "filter=rVPy2_euZPyGq&" + 
                    "format=k&" + 
                    "groupByKey=YWz&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=TFPNOdQ1&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_449() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=etg6VJnS&" + 
                    "bpolys=P86dAbfW2KwvhRP&" + 
                    "format=_mmdP4R&" + 
                    "groupByKey=BHfC93txTG1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_450() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=MOOwycB")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Invalid filter syntax. Please look at the additional info and examples about the filter parameter at https://docs.ohsome.org/ohsome-api. Detailed error message: line 1, column 8: whitespaces, EQUALS (=), NOT_EQUALS (!=) or in expected, EOF encountered."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_451() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=n7T8UI2hMLeFvOdS&" + 
                    "bpolys=&" + 
                    "format=z_6hS9u84HvtYLE&" + 
                    "groupByKey=G7JGh8i0Xo&" + 
                    "groupByValues=si&" + 
                    "time=0DFdyfBl6ECEIp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_452() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Q&" + 
                    "bpolys=7FSN&" + 
                    "filter=MQZ&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_453() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=T3loILymOEEePH&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=lSz74HuVbyOM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_454() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_455() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=av91MvzyJEdL&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=7xnrkX&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_456() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=Ocv&" + 
                    "bcircles=9b22Z1&" + 
                    "groupByKey=s&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=kTIvhqHBey&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_457() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bpolys=O3cbjyDV54Yt&" + 
                    "filter=WPjlhc7&" + 
                    "format=CHY&" + 
                    "groupByKey=OxyR&" + 
                    "showMetadata=RAkXppqx9yMSqh&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_458() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "filter=WCL&" + 
                    "format=ovw8XzhHZE8&" + 
                    "groupByKey=&" + 
                    "showMetadata=uXCq4G4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_459() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=f&" + 
                    "groupByKey=te5ar&" + 
                    "groupByValues=dz3TBH4&" + 
                    "showMetadata=yKoyG&" + 
                    "timeout=QiOVixaSxbWGgCSZ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_460() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=hHH0MW&" + 
                    "bpolys=uS_IEa0NIUBeL8Y&" + 
                    "format=s89g&" + 
                    "groupByKey=_s&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=zZOdh5L58l2vrI&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_461() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=1Qp58IDFR&" + 
                    "bcircles=DG5Pr7&" + 
                    "filter=a&" + 
                    "format=wfy2qBlaSC2UCRL&" + 
                    "groupByKey=Y0jjCToskXozTGm&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=kKNqfrlclt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_462() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=AqV1OzMVF1I7ry&" + 
                    "groupByKey=cqX0w&" + 
                    "showMetadata=jVVUENxja0txc60&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_463() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=YErhzg&" + 
                    "bcircles=l5w&" + 
                    "filter=vSWqvXtHL&" + 
                    "groupByKey=mYpHzOEdm&" + 
                    "groupByValues=3.737603603E7&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_464() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=dpaBuQXjgJI&" + 
                    "bpolys=1OX1qX&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=Zxaz4yCIAaXPD")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length
    */
    @Test(timeout = 60000)
    public void test_465() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=5Sr4MrxtW&" + 
                    "bpolys=CvgV1&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=wgEYUjwbbuoQ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length
    */
    @Test(timeout = 60000)
    public void test_466() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=18bYq2RLZDePTgmi&" + 
                    "filter=Mh&" + 
                    "showMetadata=wR0&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_467() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bcircles=Ur&" + 
                    "bpolys=Aa5Pq8HzZ&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=r128XD&" + 
                    "format=A_OcCf&" + 
                    "showMetadata=5zLM5&" + 
                    "time=_Dj&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_468() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bboxes=8&" + 
                    "format=json&" + 
                    "showMetadata=N57gI4pK&" + 
                    "time=MultiPolygon&" + 
                    "timeout=LMva")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_469() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio?" + 
                    "filter=_FUg4iSdCmY&" + 
                    "format=json&" + 
                    "showMetadata=_ML")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_470() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bboxes=UK0uHMfU21wQOeM&" + 
                    "bcircles=dCfZ4se2SY&" + 
                    "bpolys=SkSDC3qIwFb7I&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_471() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=O&" + 
                    "bcircles=f7hHopUB&" + 
                    "filter=QwB&" + 
                    "format=json&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_472() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bpolys=CyuqGzpQp&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "format=json&" + 
                    "showMetadata=esB_BZiDGfrL1&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_473() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "format=ExBh2e0&" + 
                    "showMetadata=8o&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_474() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=gTf5S4jEPoPSfSR&" + 
                    "bpolys=cGiVh4nh56Ro4LL&" + 
                    "filter=722FG5Rto2&" + 
                    "groupByKey=jaGtIvV&" + 
                    "showMetadata=qEhkaUCxX105xq&" + 
                    "time=rtBfO2Ki&" + 
                    "timeout=BQRuq4Lk0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_475() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=hl5Gz5ntTCu&" + 
                    "bpolys=_cxxCBjyx&" + 
                    "format=G&" + 
                    "groupByKey=zBuQX6LN&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_476() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bpolys=8NG_ik5GGNffTP6&" + 
                    "groupByKeys=building&" + 
                    "showMetadata=YNQB&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_477() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=7iq&" + 
                    "bpolys=wn4&" + 
                    "groupByKey=ApD74g5yoXC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_478() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bpolys=EcMc2KCs&" + 
                    "format=qbCyx4g1G&" + 
                    "groupByKey=mo&" + 
                    "groupByValues=Uo_Xz&" + 
                    "time=U8EA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_479() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bcircles=xNno3x&" + 
                    "bpolys=Yf9zxIuJAC1uY&" + 
                    "groupByKey=imXoOFWp&" + 
                    "showMetadata=qk78sQCZ20abdj3z&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_480() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=uymsFYNOLq&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given 'format' parameter is invalid. Please choose between 'geojson'(only available for /groupBy/boundary and data extraction requests), 'json', or 'csv'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density
    */
    @Test(timeout = 60000)
    public void test_481() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=sNbwcy_&" + 
                    "filter=type%3Away+and+natural%3D*")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density
    */
    @Test(timeout = 60000)
    public void test_482() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The provided time parameter is not ISO-8601 conform."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density
    */
    @Test(timeout = 60000)
    public void test_483() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=RmKQYG&" + 
                    "bpolys=wDTkF7Ar74BuMe&" + 
                    "format=&" + 
                    "showMetadata=L_pUftVFHwNK0tIw&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_484() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bpolys=4PQTZ&" + 
                    "filter=M6&" + 
                    "groupByKeys=1__OecEVTP3jR7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_485() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=lMQ22uKbpaReYIMo&" + 
                    "bcircles=BkHcLQKl&" + 
                    "contributionType=gCn0o&" + 
                    "format=IyoBbPkyV3wq&" + 
                    "groupByKeys=jKJZQRYuQfGOjv&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_486() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=cU&" + 
                    "bpolys=KrWwj&" + 
                    "contributionType=mdZ28&" + 
                    "filter=IDkBJ7TrYXndS4&" + 
                    "groupByKeys=w8zc&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_487() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bcircles=y8tAqJVDh8T&" + 
                    "bpolys=uSkzH05p4hVToagP&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=Wljy0p&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_488() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=XJGsKqLp2kbe9R&" + 
                    "bcircles=RsDUK5RCXF&" + 
                    "bpolys=vK6O7CN&" + 
                    "contributionType=y&" + 
                    "filter=jcpLKpvWX85AxAIE&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count
    */
    @Test(timeout = 60000)
    public void test_489() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The provided time parameter is not ISO-8601 conform."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count
    */
    @Test(timeout = 60000)
    public void test_490() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count?" + 
                    "format=json&" + 
                    "showMetadata=4O&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count
    */
    @Test(timeout = 60000)
    public void test_491() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=Qny2j_D4G&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_492() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=KeDTIAnr7xKo&" + 
                    "filter2=U&" + 
                    "format=&" + 
                    "showMetadata=bjDtDo2EZbJXFN8&" + 
                    "time=Qw")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_493() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bpolys=kN_SDkNOhotnLy&" + 
                    "format=json&" + 
                    "showMetadata=sGZkG&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_494() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=rTzkKJGjBQ7&" + 
                    "bcircles=2tJOz2s7rz6IFg98&" + 
                    "bpolys=C1IOYx&" + 
                    "format=json&" + 
                    "showMetadata=SCwUa&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_495() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bpolys=gFAQ&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "format=json&" + 
                    "showMetadata=WXjRASP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_496() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=UM32YfYQEm6QI4e&" + 
                    "bpolys=mpSrY57&" + 
                    "showMetadata=6hYqmqMiiVONUa&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_497() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bpolys=3Y_t6S4HDr3A&" + 
                    "filter=ML_V1G4&" + 
                    "format=YX0Jzom0U&" + 
                    "groupByKey=_MU&" + 
                    "groupByValues=o_eXwVkdGY4wfRf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_498() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=vadK&" + 
                    "bcircles=L_ZfYs6Xfrb&" + 
                    "bpolys=MGhUWezJ2PZ8sb&" + 
                    "groupByKey=Ua4TOfri&" + 
                    "showMetadata=0wMW_EZGVchl7&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_499() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "filter=X3&" + 
                    "groupByKey=4aCZuh8md&" + 
                    "groupByValues=8797443.19&" + 
                    "timeout=Z_wo_9tp8AWIvm")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_500() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=vqiKPaYFA83N6_81&" + 
                    "format=HBF3AidIv&" + 
                    "groupByKeys=b&" + 
                    "timeout=JAU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_501() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bpolys=CiAukzoN7yPKP_qV&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=ag4&" + 
                    "showMetadata=D&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_502() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=Tk1G&" + 
                    "bcircles=7zaHtwF2Pr&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "format=json&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_503() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=lGTQFs&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_504() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "format=4ZHjzt&" + 
                    "groupByKey=Rg&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_505() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bpolys=HQ&" + 
                    "filter=PS35UkAJLBqEmi&" + 
                    "format=_O8GyF&" + 
                    "groupByKey=Gz&" + 
                    "showMetadata=2e5&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_506() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=Xyy2APHmyfJ0T6&" + 
                    "format=cwbKLm_svEZuR&" + 
                    "groupByKey=Ro03s9Dp8OvcO0&" + 
                    "groupByValues=BhJ2vgMnq&" + 
                    "showMetadata=zd")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_507() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=4HUPK4k&" + 
                    "bpolys=3A_eGoG5&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=AO0qtNBMUTErqR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_508() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=pJ&" + 
                    "format=2fyJ_Oo&" + 
                    "showMetadata=Twmv&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_509() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=OVB7keBvekb&" + 
                    "format=json&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area
    */
    @Test(timeout = 60000)
    public void test_510() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bpolys=8f_c7_tG0MnSyv34&" + 
                    "format=json&" + 
                    "showMetadata=3JfXtzwlUJV6YHn&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area
    */
    @Test(timeout = 60000)
    public void test_511() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=FCKBYmMVtq5AX&" + 
                    "bcircles=yUlhiv7&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=fE&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_512() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "contributionType=zpQiPEiGG2tVN&" + 
                    "filter=NdnaIbe2RBHhbN&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_513() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bboxes=3VC0kWOOV3Q9CV&" + 
                    "bpolys=o6WNRXfZ&" + 
                    "filter=type%3Away+and+natural%3D*")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_514() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=9kyScvKgI3284DL&" + 
                    "bpolys=Fe7LXL&" + 
                    "filter=5gDGbIAElp&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_515() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=JN6daPhm&" + 
                    "contributionType=iL&" + 
                    "showMetadata=P9Tban&" + 
                    "timeout=Sj0QKBzcvWXTL")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_516() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=862G&" + 
                    "bpolys=PWfq9QmbMNXHa&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=i3C7o10lpPq55ms3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_517() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bcircles=uKdQr&" + 
                    "contributionType=zFfBgC4O&" + 
                    "filter=noa8RUYdXWf&" + 
                    "showMetadata=zW29I&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/density
    */
    @Test(timeout = 60000)
    public void test_518() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=qAe4KtKqfPq7xH&" + 
                    "contributionType=D&" + 
                    "format=W&" + 
                    "timeout=GbbX1FA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/count/density
    */
    @Test(timeout = 60000)
    public void test_519() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=3T4YnBCvYS0ZWdX&" + 
                    "bpolys=3d_95p&" + 
                    "contributionType=cGfh&" + 
                    "format=G8KUFCYT7QxaWX&" + 
                    "time=MultiPolygon&" + 
                    "timeout=JAy")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_520() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bcircles=s2vk8q3K&" + 
                    "filter=ut2el0_&" + 
                    "format=ktcU&" + 
                    "showMetadata=Jt9NvalL23&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_521() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bboxes=zOoYD&" + 
                    "bcircles=y&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=r5&" + 
                    "time=eC&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_522() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bcircles=jGupYj_9&" + 
                    "bpolys=NQ&" + 
                    "filter2=ehvxffHuYsM&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_523() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bcircles=&" + 
                    "bpolys=OeqWY&" + 
                    "contributionType=eIGrOf&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_524() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bcircles=q&" + 
                    "bpolys=FWnBnFAY7B&" + 
                    "contributionType=A79WgAvuM&" + 
                    "format=2TRmKtm0GDrk6d1&" + 
                    "showMetadata=ceY_ewg0D8E72l&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_525() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=o8cYPCAhEm8yP40C&" + 
                    "groupByKey=AWL&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/centroid
    */
    @Test(timeout = 60000)
    public void test_526() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=JiSuO0LTozserdi_&" + 
                    "bpolys=HRO7OtQA&" + 
                    "filter=y4g&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_527() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=mRb3wrxC&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count
    */
    @Test(timeout = 60000)
    public void test_528() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "contributionType=z2&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=YrrXJ6b&" + 
                    "showMetadata=7oLWpUp6gvs257r")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_529() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "filter=QzvGSGOR9pcu&" + 
                    "format=I1gRec&" + 
                    "groupByKey=BoW1e5CZcR&" + 
                    "time=v0jXrA2RK&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_530() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=e5Sz_&" + 
                    "bpolys=_OBzrNZ&" + 
                    "groupByKey=z_ANdwKiKGbTY&" + 
                    "groupByValues=76772.71&" + 
                    "time=pD7mgi3tJ8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_531() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bpolys=&" + 
                    "contributionType=xjjdY3&" + 
                    "showMetadata=9&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count
    */
    @Test(timeout = 60000)
    public void test_532() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bboxes=L08&" + 
                    "bcircles=IfT3tWQ&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_533() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=9BnUb0rXWkjPhs&" + 
                    "time=H")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_534() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "contributionType=1RhLiDXr5i8&" + 
                    "filter=rBBd8XWXAAK&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_535() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=4TF1qgvnSH75l0&" + 
                    "bpolys=NX&" + 
                    "filter=OxdgT5mS&" + 
                    "groupByKey=rt&" + 
                    "groupByValues=vxCK_f")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_536() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=kTece9XhTDecqv45&" + 
                    "bcircles=0vYhtV01nh1m905m&" + 
                    "format=&" + 
                    "groupByKey=Du&" + 
                    "showMetadata=Gaj&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_537() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=R9qrnIwb&" + 
                    "bcircles=&" + 
                    "bpolys=_6Ni_x&" + 
                    "clipGeometry=VENkyWXj2A&" + 
                    "properties=tags&" + 
                    "time=D")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count
    */
    @Test(timeout = 60000)
    public void test_538() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=XHU2fTHv19tyYCU&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=9IQoTSJErwKwbB")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/density
    */
    @Test(timeout = 60000)
    public void test_539() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=ONG&" + 
                    "bpolys=wpVIgJB1&" + 
                    "contributionType=vny33fC6Zo0k7M&" + 
                    "filter=MrAklICc&" + 
                    "format=json&" + 
                    "showMetadata=n9ZfTA1IyveeGZ&" + 
                    "time=t1SblKl1ia&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_540() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=TPW9g3J6MZv&" + 
                    "bpolys=s9IzPMWceP7n4&" + 
                    "filter=Gw0v&" + 
                    "groupByKey=0&" + 
                    "showMetadata=IOxjjA47cM&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/ratio
    */
    @Test(timeout = 60000)
    public void test_541() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bboxes=4ms5XhtnEPon&" + 
                    "bcircles=2&" + 
                    "filter2=type%3Away+and+highway%3Dresidential&" + 
                    "showMetadata=mpK6eOiZqB&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_542() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=TzqWYgHKq2&" + 
                    "bcircles=z5BDsARLBn1ip&" + 
                    "format=dFKq8bV3OzMdPKTm&" + 
                    "groupByKey=6pk&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=m6j8aFhzrusv&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_543() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=f&" + 
                    "bcircles=AZwt&" + 
                    "bpolys=IFDKB1m&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKeys=VCFSFWr&" + 
                    "showMetadata=c01mJ2qPbnQSsyq0&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_544() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bcircles=wHK3I_c4RS&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=uFRDDnRe4WEWAtV4&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_545() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bboxes=Au_0mZN&" + 
                    "bcircles=RVNw&" + 
                    "filter=IpIA1otNPM&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_546() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=lqiHl4MJv&" + 
                    "bpolys=HvAjurn&" + 
                    "clipGeometry=true&" + 
                    "filter=NzdAmthLzRl&" + 
                    "properties=Dv9QUml3O&" + 
                    "showMetadata=3GTmibzl&" + 
                    "time=WOduTjovUxImCL&" + 
                    "timeout=wY8tQtnld7clLc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_547() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=53k&" + 
                    "bcircles=V&" + 
                    "filter=irWLYHzoB8S1liyM&" + 
                    "groupByKey=MX3wS_KYi&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=HUGLi70V&" + 
                    "time=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_548() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "filter=Nae7Y&" + 
                    "format=jitEXo&" + 
                    "groupByKeys=9&" + 
                    "showMetadata=YPJluxVqStBf&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_549() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=x&" + 
                    "filter2=qZQjWW65X6sXV&" + 
                    "format=DpI6gn6bL&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_550() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "clipGeometry=true&" + 
                    "filter=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_551() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bcircles=OHji&" + 
                    "clipGeometry=true&" + 
                    "properties=ipGZCy&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_552() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "clipGeometry=panTTarnjC&" + 
                    "filter=&" + 
                    "showMetadata=i1d&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_553() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "clipGeometry=&" + 
                    "properties=_a6KUU1RQqs30t23&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The provided time parameter is not ISO-8601 conform."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_554() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "contributionType=s1sXQtuVFL5nxh&" + 
                    "filter=B06TomT&" + 
                    "format=json&" + 
                    "showMetadata=TcnK&" + 
                    "time=rX9MINykKK14Ss3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_555() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bcircles=AXcF0PBLN3O&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=XC9mMA0ekM&" + 
                    "showMetadata=c&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/ratio
    */
    @Test(timeout = 60000)
    public void test_556() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bcircles=5UDPSJY&" + 
                    "bpolys=Qw5iRHT3nJmN&" + 
                    "filter2=EHXizbrMsIT9tipd&" + 
                    "format=json&" + 
                    "showMetadata=BzAgKmfadz8T&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_557() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=TAosIPVI2_&" + 
                    "bpolys=mSq&" + 
                    "showMetadata=OwroselDWPJc&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_558() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=9if1&" + 
                    "bpolys=z&" + 
                    "filter=&" + 
                    "showMetadata=UGFw&" + 
                    "timeout=ECN3OrZOR5hjZsR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_559() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/geometry?" + 
                    "bboxes=WTuHOjJ0MEDoHAb&" + 
                    "bcircles=U3o50K&" + 
                    "bpolys=HG&" + 
                    "clipGeometry=q2&" + 
                    "filter=hwHYFSxQ7E&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_560() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=fBUwFVbE0Dpp5gTI&" + 
                    "groupByKeys=pTd&" + 
                    "showMetadata=Nt&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_561() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bcircles=6g0cbaJecWfiem&" + 
                    "bpolys=jz7Q0iwkLvFF&" + 
                    "groupByKey=ZQRR&" + 
                    "groupByValues=76772.71&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_562() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=f1mMnsxTMtz6tiBA&" + 
                    "contributionType=axVEXHjTnkQQfs7v&" + 
                    "format=j0jRuPD0&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_563() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=GbawvpkOVtk&" + 
                    "bpolys=Q7L8_i4H49xWpE&" + 
                    "contributionType=2tm0&" + 
                    "format=VaQG2g&" + 
                    "showMetadata=EPI1Q8wrv&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_564() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Xx4_xBWUQh&" + 
                    "bpolys=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon&" + 
                    "timeout=Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_565() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=WV8J5DesB&" + 
                    "bpolys=exqW_kP&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=r")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_566() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bboxes=Isb4m_OCdtnnoagc&" + 
                    "bcircles=PEpaWUSEct&" + 
                    "bpolys=qDe1t0ZRTvRyf&" + 
                    "clipGeometry=true&" + 
                    "filter=_tXkF5&" + 
                    "properties=uQJION&" + 
                    "showMetadata=O_&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_567() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=SXP2hJqfQOfYH&" + 
                    "showMetadata=K9G_75_jlCMjRTo&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_568() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=Ure_NBL0U9sG&" + 
                    "showMetadata=0ReYv&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_569() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "contributionType=9D&" + 
                    "groupByKey=Ssq0WP&" + 
                    "groupByValues=5GlT1ORL&" + 
                    "time=s4HYr1av")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_570() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bcircles=BsYqhQgHvNP5&" + 
                    "bpolys=wdhwN_&" + 
                    "contributionType=beKsIqo&" + 
                    "filter=xWkq4t&" + 
                    "format=M2crDu_Jnl8f&" + 
                    "groupByKey=XEb_sgzU7qfXo7&" + 
                    "showMetadata=cyXYrXEOPE0ZhrYz&" + 
                    "time=5us93ihg")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_571() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=GrC4OQIuYKR&" + 
                    "bpolys=Ul6&" + 
                    "filter=z&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_572() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=0is9iGlbUR_1Z1t&" + 
                    "contributionType=yHWTBL7jnTPiJf&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/centroid
    */
    @Test(timeout = 60000)
    public void test_573() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bboxes=ZwvPlHaStUhw1&" + 
                    "bcircles=3qzB&" + 
                    "bpolys=Ik95&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=tags&" + 
                    "showMetadata=8JSEss&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/centroid
    */
    @Test(timeout = 60000)
    public void test_574() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "properties=tags&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/centroid
    */
    @Test(timeout = 60000)
    public void test_575() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=uHJud&" + 
                    "clipGeometry=LoZ6&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=Ot9TW&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/centroid
    */
    @Test(timeout = 60000)
    public void test_576() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=W_1MHA3oMe7UF7R&" + 
                    "clipGeometry=true&" + 
                    "properties=Ui9w0&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elementsFullHistory/centroid
    */
    @Test(timeout = 60000)
    public void test_577() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bpolys=3qEDKweYoW&" + 
                    "clipGeometry=sELdUZb6eTXHIq&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=tags&" + 
                    "time=ZS029c3_3BMp31&" + 
                    "timeout=nmXIBcUli39")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_578() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=&" + 
                    "clipGeometry=hq4BTvKj2m6lm&" + 
                    "properties=tags&" + 
                    "showMetadata=ZVNJstIc8n3Aq&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_579() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "clipGeometry=true&" + 
                    "filter=gO4m&" + 
                    "properties=&" + 
                    "showMetadata=P&" + 
                    "time=fAhO101iQfP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_580() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=tags&" + 
                    "time=W6GRBP3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_581() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=KS6M_Qi19n4ej&" + 
                    "bpolys=y&" + 
                    "clipGeometry=true&" + 
                    "properties=tags&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_582() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bcircles=dVqQ_uHvoATFsLN&" + 
                    "clipGeometry=MXOEfTKomFkPRvO&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=uFC6ggNsYD&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_583() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=9aplTlL6ec&" + 
                    "bcircles=&" + 
                    "clipGeometry=true&" + 
                    "properties=tags&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_584() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bpolys=8&" + 
                    "clipGeometry=true&" + 
                    "properties=_3M97fzq5sLvh&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_585() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bpolys=m45V5T78LHh&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=RsGr6BEjImtpnTsA&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_586() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Ke6P5iTU8xombVC&" + 
                    "clipGeometry=Y9BoDurQ&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=euwHM5tTU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_587() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=oW77HuV&" + 
                    "clipGeometry=true&" + 
                    "properties=d&" + 
                    "showMetadata=8zLv6c&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_588() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "bcircles=K&" + 
                    "bpolys=V2t&" + 
                    "clipGeometry=true&" + 
                    "filter=5Rt4BiSpJ2OGbK0&" + 
                    "properties=tags&" + 
                    "showMetadata=Yd96TwEO2nGp0e7z&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_589() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=n3vsh03CKZv5fEo&" + 
                    "bcircles=U126&" + 
                    "bpolys=LXQ8lAhXdGxIs&" + 
                    "clipGeometry=true&" + 
                    "filter=ewdqQGiAwAdDZMiL&" + 
                    "showMetadata=kRxny7&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_590() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=xN8H5&" + 
                    "bcircles=eSamzpox&" + 
                    "clipGeometry=5JonI8cwJ8lNBk&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/geometry
    */
    @Test(timeout = 60000)
    public void test_591() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bcircles=yGq0c&" + 
                    "clipGeometry=true&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=zI&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/geometry
    */
    @Test(timeout = 60000)
    public void test_592() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bpolys=zytTkzTJuZFX&" + 
                    "properties=tags&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_593() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=L9uN71u2FS6dg&" + 
                    "clipGeometry=true&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_594() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "properties=tags&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_595() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=d9WseAhaCJY&" + 
                    "bcircles=A&" + 
                    "bpolys=8yALK6u2HF_Qi&" + 
                    "clipGeometry=YubPYVuc37uCCu4&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=17rKrI49N_Ch&" + 
                    "showMetadata=JI2AxhQnA&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_596() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bboxes=u9qny44I&" + 
                    "bcircles=&" + 
                    "clipGeometry=liYHyLl&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=tags&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_597() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bpolys=F8HSVcG1XPf_&" + 
                    "properties=tags&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=JXd")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_598() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "clipGeometry=true&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_599() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=U3JR9vEpG68YG5l&" + 
                    "filter=TFmwJvJ5&" + 
                    "properties=tags&" + 
                    "showMetadata=6Jz&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_600() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "bboxes=T9eQA8X&" + 
                    "bcircles=&" + 
                    "bpolys=y2Q8&" + 
                    "clipGeometry=YNNiB0G69Oj5VGT&" + 
                    "properties=tags&" + 
                    "showMetadata=vVcEvkNl_FoA2&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=4P")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_601() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "properties=tags&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=RWSrAp3vWZ1dk")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_602() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "bboxes=yApzSdi6u6Qi1&" + 
                    "clipGeometry=true&" + 
                    "filter=2h4wa72zMHLn3EE&" + 
                    "showMetadata=lvC6aSxr2JFz&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_603() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "clipGeometry=true&" + 
                    "properties=tags&" + 
                    "showMetadata=jVF_rF8Bpp&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_604() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=6MhX&" + 
                    "bpolys=7bOAm4xnFyvrAZ&" + 
                    "clipGeometry=true&" + 
                    "properties=uLOEv04IOa1lHFsn&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_605() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=WIaMdh5u4LaSO&" + 
                    "showMetadata=OJz&" + 
                    "time=F0ECjFYJSE0Y2pR1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_606() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=F6p29&" + 
                    "bcircles=e&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=tags&" + 
                    "showMetadata=kOyvRLn2YmRm0C&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_607() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=HgYhB32eTjhZKyS3&" + 
                    "clipGeometry=true&" + 
                    "properties=aNjPJ&" + 
                    "showMetadata=dAdh&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_608() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=poLZ5BjzJ7o&" + 
                    "properties=JK01IFFVthkfhYD&" + 
                    "showMetadata=2h1s4Hy&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_609() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=cofspCS&" + 
                    "bcircles=ywOj5cgtWYWI&" + 
                    "groupByKey=hsCds")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_610() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "contributionType=s&" + 
                    "filter=weku64cF1NY_fE&" + 
                    "format=json&" + 
                    "showMetadata=6S4cy&" + 
                    "time=T_J&" + 
                    "timeout=KqaaSkKA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_611() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bcircles=oei&" + 
                    "bpolys=a6fNivq9phN86y1B&" + 
                    "contributionType=kqeVJqNSti1wmxt_&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=7xu4j0BUfE&" + 
                    "showMetadata=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_612() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=jbiT&" + 
                    "format=json&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_613() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bpolys=85RMRG3Y44UWFcX0&" + 
                    "contributionType=ty8sWl9DMqnfQr&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=GN98&" + 
                    "showMetadata=rRgd8qUdT&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_614() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=QckZrKYI&" + 
                    "bpolys=Dn&" + 
                    "format=json&" + 
                    "showMetadata=S&" + 
                    "time=MultiPolygon&" + 
                    "timeout=QXLznBA92RN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_615() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=2&" + 
                    "bpolys=t_0pyCw&" + 
                    "contributionType=60&" + 
                    "filter=8bxT&" + 
                    "format=json&" + 
                    "showMetadata=Lcw4ixFvGH&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_616() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bcircles=1hXY3aOgi6ewkxf&" + 
                    "bpolys=Iwz5G2L6YNOO&" + 
                    "contributionType=0DM38N&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "showMetadata=elsKi&" + 
                    "timeout=MiHEUjds")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_617() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bcircles=hpzk&" + 
                    "filter=ofagtQXV5z&" + 
                    "format=json&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count
    */
    @Test(timeout = 60000)
    public void test_618() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=KlpMLtD5dOkvk&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=IM3r&" + 
                    "showMetadata=oovmh&" + 
                    "timeout=e8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count
    */
    @Test(timeout = 60000)
    public void test_619() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=FxhlKtsqTUI1Q&" + 
                    "contributionType=U&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=Zjjbt&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count
    */
    @Test(timeout = 60000)
    public void test_620() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "contributionType=W2ngAn3nrOT&" + 
                    "filter=HUt34pbooE&" + 
                    "format=json&" + 
                    "showMetadata=O46zbsOuHQoqwCn&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=NQ2pMCUiuQgA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_621() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bboxes=7QcN&" + 
                    "bpolys=2&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=2vSRYi2&" + 
                    "format=json&" + 
                    "showMetadata=p4mXp&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_622() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "filter=veY3ON&" + 
                    "filter2=geometry%3Apolygon+and+building%3Dhouse&" + 
                    "format=json&" + 
                    "showMetadata=_nZuAsI1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_623() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=jlHm9v1m&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "format=5&" + 
                    "showMetadata=nSMZ&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_624() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=y5Q&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=geometry%3Apolygon+and+building%3Dhouse&" + 
                    "showMetadata=HsE9HSjZ&" + 
                    "timeout=KwHRB")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_625() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=IplIB96VBesndLkt&" + 
                    "format=json&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_626() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=DGDO3nvPPaWt5&" + 
                    "filter=&" + 
                    "groupByKey=DO3aMg&" + 
                    "showMetadata=m_4wN5KnaSuhO3M5&" + 
                    "time=nxdu4FmJ6Hbq2kUi&" + 
                    "timeout=bd4iNQqz3H")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_627() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bpolys=X4km_nE94&" + 
                    "format=ZMFNmab&" + 
                    "groupByKey=wD2cPz&" + 
                    "groupByValues=r701Ire&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_628() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=JlsfPfdxD&" + 
                    "filter=1WDqZ8T&" + 
                    "format=json&" + 
                    "groupByKeys=hQxB5SdNu75jv&" + 
                    "showMetadata=QSJg0FUQJfre&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_629() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bcircles=f3HzfizE7Ige&" + 
                    "filter=JS5ys&" + 
                    "format=json&" + 
                    "groupByKeys=ArAlmGR85BL&" + 
                    "showMetadata=yNGZb0plKft&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=PSpFD37hog9H")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_630() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=UMzvFK0rL&" + 
                    "format=&" + 
                    "groupByKey=3ni&" + 
                    "showMetadata=lzI6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_631() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=IURAVMaKzO&" + 
                    "filter=22V75bpGNm7P&" + 
                    "format=json&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_632() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=u9PMI3R4Bg&" + 
                    "format=mde6Rt&" + 
                    "groupByKey=building&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_633() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=sLAHPRhHkb6QOLz5&" + 
                    "filter=type%3Away+and+highway%3D*&" + 
                    "format=qs2O70OfEhnxMz&" + 
                    "showMetadata=L1k9lHMA0XmeM&" + 
                    "time=MultiPolygon&" + 
                    "timeout=h0Dv")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_634() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bpolys=h&" + 
                    "filter=type%3Away+and+highway%3D*&" + 
                    "filter2=type%3Away+and+highway%3Dresidential&" + 
                    "showMetadata=VLKRcVFPyhnlZ5&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_635() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=8HxNLH&" + 
                    "filter2=type%3Away+and+highway%3Dresidential&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/ratio
    */
    @Test(timeout = 60000)
    public void test_636() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "filter=type%3Away+and+highway%3D*&" + 
                    "filter2=A7QR_s&" + 
                    "format=sDColpbSwXwh&" + 
                    "showMetadata=O1gus&" + 
                    "time=b4zERucXcQa&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/ratio
    */
    @Test(timeout = 60000)
    public void test_637() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bpolys=FmQBKE9ZyUMYeT&" + 
                    "filter=type%3Away+and+highway%3D*&" + 
                    "format=wa8kh5&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/ratio
    */
    @Test(timeout = 60000)
    public void test_638() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bboxes=Ud6pKyVnM399&" + 
                    "bpolys=6aK4IIrHz&" + 
                    "filter=Jf3N&" + 
                    "filter2=type%3Away+and+highway%3Dresidential&" + 
                    "showMetadata=TbjbEHHL&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_639() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=VyN9OT3iU6qAl&" + 
                    "groupByValues=gdv5BBErbD&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_640() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=LLwD&" + 
                    "bpolys=hzEY3FGGx&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=WMNvIfidc&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_641() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=O1pTtRlD_lNNjBe_&" + 
                    "contributionType=cql2ern&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=2CnH0j1D7&" + 
                    "showMetadata=Wd&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_642() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter2=w1_uky0uS&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=Fq")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_643() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bpolys=&" + 
                    "filter2=geometry%3Apolygon+and+building%3Dhouse&" + 
                    "format=json&" + 
                    "showMetadata=8F&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_644() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=GXC8edJ16gMh&" + 
                    "filter=LOn8bDmm&" + 
                    "format=rJ2iNSOsEI07iXxd&" + 
                    "groupByKeys=highway&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_645() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bpolys=ZQiXM&" + 
                    "groupByKeys=highway&" + 
                    "showMetadata=Cz0Mr1_l7EowYu5&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_646() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=o6Th&" + 
                    "bpolys=r0P5H&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=dBtORdnCC&" + 
                    "groupByKeys=highway&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_647() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=DvC&" + 
                    "bcircles=yT3UwO_A&" + 
                    "filter=&" + 
                    "groupByKey=building")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_648() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=OhNBpCi49&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=hGkayAIYfsoKyO&" + 
                    "showMetadata=AUEfgTaLPb39Mx&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_649() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=type%3Anode+and+%22addr%3Ahousenumber%22%3D*&" + 
                    "format=Pd7soSEvgfyNDX&" + 
                    "showMetadata=cwPgKU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_650() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bcircles=20y2iYyxT&" + 
                    "filter2=type%3Anode+and+%22addr%3Ahousenumber%22%3D*&" + 
                    "format=json&" + 
                    "showMetadata=n7H&" + 
                    "time=d0DDl")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_651() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "format=hRr&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_652() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=AzvMq&" + 
                    "filter2=wL9s9X_5e&" + 
                    "format=S2_GaYrjy&" + 
                    "showMetadata=GHfKqbq8_&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_653() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio?" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=type%3Anode+and+%22addr%3Ahousenumber%22%3D*&" + 
                    "format=reW8mB8SBV9V21&" + 
                    "showMetadata=5HDcc0MP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_654() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Tbd&" + 
                    "filter=8&" + 
                    "filter2=4OeYNaxoWqNr&" + 
                    "format=json&" + 
                    "showMetadata=0HXSo5cquT&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_655() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=uBj5&" + 
                    "bcircles=kOt_g&" + 
                    "bpolys=LF8g&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "groupByKeys=hRSonS_Pi&" + 
                    "time=MultiPolygon&" + 
                    "timeout=jHIOp9CJVqeNOu")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_656() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=wd&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "groupByKeys=ri&" + 
                    "showMetadata=a&" + 
                    "timeout=KF6tMdCfqd1RKC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_657() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Ria&" + 
                    "format=jHNelL&" + 
                    "groupByKey=Ah1J&" + 
                    "groupByValues=ES_bVfaV6&" + 
                    "showMetadata=_XS&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_658() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=5NQ6nns3U&" + 
                    "bpolys=EvPOV1543KWpaXa&" + 
                    "filter=Fua3e4CUroblIHh&" + 
                    "format=MsVQQedOO5_NP&" + 
                    "groupByKey=Co1IJyhD&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_659() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "format=z&" + 
                    "groupByKey=building&" + 
                    "groupByValues=651044.38&" + 
                    "showMetadata=9Hi7kyjOO9SeQ8Q&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_660() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=3BcVJiuASD&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=zNUAP&" + 
                    "groupByKey=dTqI")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_661() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=b&" + 
                    "bpolys=RyzlCcmER&" + 
                    "filter=o&" + 
                    "format=ZceSZa8rl512OZ&" + 
                    "groupByKey=building&" + 
                    "showMetadata=L68C6IPl&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_662() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "contributionType=AaeyZnKc1klb69N&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_663() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=CKnrY_KJ3gkB_Pz&" + 
                    "filter=vwXChZo6mKYY9&" + 
                    "format=TPfrPdHm9nhSsc0&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_664() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=jHiEikO4x&" + 
                    "format=nFTyaIyCneKF&" + 
                    "showMetadata=CV68DhqFsBcf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_665() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=6z0pYRHyTER2&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=oGHTxSt_cL_V&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_666() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bcircles=xh&" + 
                    "bpolys=Feo2Mfki&" + 
                    "filter2=geometry%3Apolygon+and+building%3Dhouse&" + 
                    "showMetadata=ub&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_667() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio?" + 
                    "filter2=geometry%3Apolygon+and+building%3Dhouse&" + 
                    "format=json&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_668() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=kJiQLCqIXlb&" + 
                    "bpolys=UJ5O9RT&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=QG0a0gCj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_669() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=i&" + 
                    "bpolys=gbSo6iM&" + 
                    "filter=kaVWUn5&" + 
                    "groupByKey=aVjCn0&" + 
                    "showMetadata=f&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_670() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bpolys=ahiob1tv3&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKeys=building&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_671() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=qZewb&" + 
                    "groupByKeys=building")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_672() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=yaYq4pSOmLO&" + 
                    "bcircles=CwC72nxYU&" + 
                    "bpolys=4YLHKyz6nWz8qh&" + 
                    "format=json&" + 
                    "groupByKeys=building&" + 
                    "showMetadata=xvN5qRcW3TodZ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_673() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=y2zP0dea&" + 
                    "bcircles=_pnt_jXt&" + 
                    "bpolys=PDA&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=jOy7R7BdfqE81&" + 
                    "groupByKeys=t0&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_674() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=EwHwUc0nZvn2c&" + 
                    "bpolys=GvQK&" + 
                    "filter=AstkGnZy&" + 
                    "groupByKey=tO54JrPtstSZ&" + 
                    "groupByValues=SZ&" + 
                    "showMetadata=ctoTrKPWxjBWK83B&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=wGp8Rb56RtJ9JytO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_675() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=1Ae5zLg&" + 
                    "bpolys=33SXXuskITfayo&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "format=81T_&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_676() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=us1&" + 
                    "bcircles=KLoE0TfMUC6&" + 
                    "bpolys=QcrL&" + 
                    "groupByKey=bDUGc7Yva14bKl&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_677() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bcircles=dFj&" + 
                    "filter=kyU28CZkfMeKSCz&" + 
                    "format=UCw7S6xH50&" + 
                    "groupByKey=building")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_678() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=ZfkDXpi6PVrcTqbi&" + 
                    "format=json&" + 
                    "showMetadata=OC&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_679() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=rUxwFRADCg&" + 
                    "bpolys=D2srdbYyGY&" + 
                    "contributionType=gVS0s50pY&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_680() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=JEdO3ySfC3PF3ZaF&" + 
                    "contributionType=8U93A1rRO&" + 
                    "filter=zTt&" + 
                    "format=json&" + 
                    "showMetadata=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_681() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=pb4P8d3TKIGV3w&" + 
                    "contributionType=6f7&" + 
                    "filter=9N_gIDO2uJGzl&" + 
                    "format=json&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/density
    */
    @Test(timeout = 60000)
    public void test_682() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density?" + 
                    "bcircles=1CO2I&" + 
                    "bpolys=NmKH&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=lF5IenHNDmZO&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count/density
    */
    @Test(timeout = 60000)
    public void test_683() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=UpS3u&" + 
                    "contributionType=zjgA8chcs&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=8vr&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_684() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=LuRg&" + 
                    "bpolys=ip&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_685() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=O_RKeO2&" + 
                    "bpolys=&" + 
                    "format=json&" + 
                    "showMetadata=MxWJ_JzlIp0f7Yh&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_686() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=ymbtPaAND7kLp5Ue&" + 
                    "contributionType=0mV&" + 
                    "format=NKdeoi6b4DmAvbh&" + 
                    "showMetadata=LBew&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=gRYcx3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_687() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=ImM&" + 
                    "bpolys=zHtqV4UHfX&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_688() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=68PLDPWimDhXK&" + 
                    "bcircles=uCXu9QfsqdFetYfe&" + 
                    "filter=GNZE&" + 
                    "format=&" + 
                    "groupByKey=DKWIv2I7nV&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_689() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=n2HGvl&" + 
                    "bpolys=_czH_Iz&" + 
                    "format=SnEXC&" + 
                    "groupByKey=msR&" + 
                    "groupByValues=0.0&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_690() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=7Bt5N2&" + 
                    "showMetadata=vZK5wAWu4NYN&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_691() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bcircles=&" + 
                    "bpolys=BYAmQ0z93l99zu&" + 
                    "format=b4ajhf_HluYe&" + 
                    "groupByKey=LvTPaSuzj&" + 
                    "groupByValues=iHw&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_692() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=edliyzIhupHZzrdn&" + 
                    "contributionType=Rywa4z691Bw&" + 
                    "filter=AVrL0ol&" + 
                    "groupByKey=D5FECZg")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_693() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bcircles=TMLYvXkv6k7woT4K&" + 
                    "bpolys=i&" + 
                    "contributionType=g9wWWAxoi6_Ve&" + 
                    "groupByKey=sZ&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=NilLXWW&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_694() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bpolys=OjoO&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_695() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=ESyCp2Ar&" + 
                    "bpolys=JPWgfsg&" + 
                    "filter=sYPxSSsYfK8thhS&" + 
                    "format=xgyjIoU7Qo3l1ka&" + 
                    "showMetadata=N6EDpa3G_QoY81iu&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_696() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "bpolys=G80SOCodEi5gm&" + 
                    "filter=pWn&" + 
                    "format=PudL1IEqBKe&" + 
                    "groupByKeys=building")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_697() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=8cAXxPg0&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/geometry
    */
    @Test(timeout = 60000)
    public void test_698() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Ta&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_699() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=ux_JgX_6aVdey&" + 
                    "filter=1eY0C&" + 
                    "filter2=cxwh1tnyPjiyae&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_700() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=MaNS&" + 
                    "clipGeometry=vFt&" + 
                    "filter=JT90JO&" + 
                    "showMetadata=a&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_701() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=fYXaTpF3_44EF4G&" + 
                    "bpolys=zX&" + 
                    "groupByKey=a8tPPZyBRg4FsSQ&" + 
                    "groupByValues=0.0&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_702() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=KJnmeGLN2ND7Y&" + 
                    "format=json&" + 
                    "showMetadata=vuMSHtboA&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_703() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bcircles=NHCAPIF7N2cY8y&" + 
                    "format=json&" + 
                    "groupByKey=p7FdMzQztDy0&" + 
                    "showMetadata=Ki41&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_704() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "bpolys=&" + 
                    "clipGeometry=GSRek5SdULXt&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=h7qMqtAjMWEF&" + 
                    "showMetadata=F20jSki7UWo4n&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_705() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=vmD&" + 
                    "format=json&" + 
                    "groupByKey=qKlWpb&" + 
                    "showMetadata=5MmnZ&" + 
                    "timeout=bGa94R0U")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_706() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=bIMkhmkD4wtE&" + 
                    "format=json&" + 
                    "groupByKeys=NK58wUqe6wt9Al4&" + 
                    "showMetadata=z")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_707() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=W&" + 
                    "bpolys=XS&" + 
                    "format=WylSl&" + 
                    "groupByKey=P&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_708() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=pYVe7EYAf&" + 
                    "bcircles=K4KVTuJt&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=r1PisTKeoBuI&" + 
                    "groupByValues=0.0&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_709() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=jBVkP50t&" + 
                    "clipGeometry=RSwmVf9&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=xZ1Bipq0&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_710() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=VJ1&" + 
                    "bpolys=fiBsNTK_H53I&" + 
                    "clipGeometry=true&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=tags&" + 
                    "time=i&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_711() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "contributionType=iql301&" + 
                    "groupByKey=5AFM&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=xRs2IXHQVkcLDBJ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_712() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bcircles=Uh_2lEoze&" + 
                    "contributionType=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=BZIUsBTXB&" + 
                    "groupByKeys=75kG92&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_713() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=S6rbXBNboCG&" + 
                    "bcircles=_GWFN7PBnsi&" + 
                    "contributionType=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "groupByKeys=B0OTmWApWaPk&" + 
                    "showMetadata=GSd9_dSyAVo")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_714() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=tyMXY_J6&" + 
                    "bpolys=bYKFZsvPzVMt&" + 
                    "format=json&" + 
                    "groupByKeys=building&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_715() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=ilUkWj_jEJapPLAf&" + 
                    "bcircles=QsHFubNpubUzcr&" + 
                    "groupByKeys=building&" + 
                    "showMetadata=cpkiTMpgPxbLlu&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=les8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_716() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "filter=07lfgJ2DwM&" + 
                    "groupByKey=building&" + 
                    "groupByValues=ofDZ50Pea&" + 
                    "time=ipCUcKEB9&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_717() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=iXpcWoD56GvNAq&" + 
                    "bpolys=WkVm7Nak6TVt&" + 
                    "contributionType=UJZquXNBIS&" + 
                    "format=json&" + 
                    "groupByKey=FiY&" + 
                    "groupByValues=743636.1&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_718() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=rV&" + 
                    "bcircles=Nlv9iQqp4n&" + 
                    "contributionType=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=EYPWebFcOkWvLgKv&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=Yn2z1r&" + 
                    "time=MultiPolygon&" + 
                    "timeout=qn6m9wrju")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_719() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=l2o9uThjm&" + 
                    "format=TsGq&" + 
                    "groupByKey=building&" + 
                    "showMetadata=zn3kB&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_720() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=nlaKIJyF&" + 
                    "filter=&" + 
                    "format=Qaj4K3JWeEZCDl&" + 
                    "groupByKey=wq&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_721() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=6whlhZt&" + 
                    "bcircles=nvKuGTnl5Djiq&" + 
                    "bpolys=Y6UDH6o&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=txK75bjV39B&" + 
                    "groupByKey=building&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_722() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "filter=zmtnOVvTfNm5&" + 
                    "format=json&" + 
                    "groupByKey=building&" + 
                    "showMetadata=sNdhDtw9&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_723() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=syThBzBYw&" + 
                    "bpolys=b4&" + 
                    "filter=&" + 
                    "format=UIkBcjYI8&" + 
                    "groupByKey=building&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_724() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=cEzxZ9sA3w&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "groupByKey=AFy3So3_wxptMH&" + 
                    "groupByValues=RxMXBTtwl06OYxr_&" + 
                    "time=duRx")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_725() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=g&" + 
                    "bcircles=Xj7FBr&" + 
                    "groupByKey=building&" + 
                    "showMetadata=C9cv4RWxnjUJU&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_726() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=vW&" + 
                    "bcircles=CCuc_&" + 
                    "bpolys=&" + 
                    "format=json&" + 
                    "groupByKey=building&" + 
                    "groupByValues=3367.16")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_727() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=AY0Sap&" + 
                    "bpolys=DjGyCF&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=X&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_728() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bcircles=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=Ft5tRaRvPSNppT&" + 
                    "groupByValues=130239.01&" + 
                    "showMetadata=l5QdLFX&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_729() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=1sJE19&" + 
                    "bcircles=dozr6H&" + 
                    "bpolys=AZZ&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=7TaB&" + 
                    "groupByKey=building&" + 
                    "groupByValues=3.737603603E7&" + 
                    "showMetadata=j_uK_xGQx&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_730() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=DH9LE03&" + 
                    "groupByKey=Yhn43xktol&" + 
                    "showMetadata=vp&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_731() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=myJ_3idNQC&" + 
                    "filter=Ha5o9MKnfmXWd0&" + 
                    "format=json&" + 
                    "groupByKey=building&" + 
                    "time=CJc0T0J9Q4q")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_732() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=QvjDQtx6N4jWFk&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=h1bzFfMH8C&" + 
                    "groupByValues=0.0&" + 
                    "timeout=_A")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_733() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=kfS4LetzCJ&" + 
                    "bpolys=lZTMs&" + 
                    "filter=zxLj&" + 
                    "format=MVyiqpSWMNQHp&" + 
                    "groupByKey=building&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=bq9&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_734() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=cN1qUt&" + 
                    "format=json&" + 
                    "groupByKey=building&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=19tYd7PZVZN8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_735() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=COSZ&" + 
                    "bcircles=nM8t4lBK83Ms&" + 
                    "bpolys=mdm4ty1POD&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=building&" + 
                    "groupByValues=Hql0&" + 
                    "showMetadata=lqvCpX5Bg&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_736() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=hoi&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=ir1Y4s0&" + 
                    "groupByKey=building&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_737() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bpolys=Arg3ju2bkgxzodNe&" + 
                    "filter=5er2tr3&" + 
                    "groupByKey=highway&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_738() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=XSzeB3LaZ&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=qaPLozgZbfuPJMo")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_739() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=02De0&" + 
                    "filter=oU8sZ1bF&" + 
                    "format=json&" + 
                    "groupByKey=building&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_740() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=TaD&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=v&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=f3Ma6&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_741() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=ojj&" + 
                    "bpolys=H77m3PjywHHhK6N&" + 
                    "groupByKey=building&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=xV&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_742() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=7wg9sS1&" + 
                    "format=6B&" + 
                    "groupByKey=cwWPkRtbW1&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_743() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=eyko0PfioeTwyhfU&" + 
                    "filter=zpaGF9CJQ3oh&" + 
                    "groupByKey=building&" + 
                    "groupByValues=687909.51&" + 
                    "showMetadata=szbjMBJf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_744() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=3pomWu_7nPcWAr&" + 
                    "filter=Rq2FRv2Jkloj&" + 
                    "groupByKey=building&" + 
                    "groupByValues=0.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_745() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=_ADVs&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=building&" + 
                    "showMetadata=hXG9q&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_746() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=3r5AV8_PUDZyNDNs&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=pzbkgLXKB&" + 
                    "groupByValues=130239.01&" + 
                    "showMetadata=nNFSdUvcE3ose9N&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_747() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bcircles=t_&" + 
                    "format=json&" + 
                    "groupByKey=building&" + 
                    "groupByValues=1529.91&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_748() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=mHoXcOvIk_AG&" + 
                    "bcircles=5&" + 
                    "bpolys=O_jn&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=building")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_749() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=g5bgrFke&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=0yk4C5kqtM_WV&" + 
                    "time=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_750() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=bYd3Z8FF03gR&" + 
                    "format=json&" + 
                    "groupByKey=building&" + 
                    "groupByValues=687909.51&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_751() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=NxKxRLeI3NwWbr&" + 
                    "bpolys=xbvAx&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "groupByKey=cj0&" + 
                    "showMetadata=sFXV&" + 
                    "timeout=IwVwanWd")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_752() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=h0uuD5bV&" + 
                    "format=json&" + 
                    "groupByKey=TgvmEyDx4c&" + 
                    "groupByValues=743636.1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_753() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=cP&" + 
                    "filter=G7I1rVSfCOl_y&" + 
                    "format=zQ7c6XX6yxCGo&" + 
                    "groupByKey=building&" + 
                    "showMetadata=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_754() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=7Nwxnygw7GWvx8&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=building&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_755() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=9Hk0EB&" + 
                    "format=json&" + 
                    "groupByKey=j&" + 
                    "showMetadata=KBExX")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_756() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "format=json&" + 
                    "groupByKey=building&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=AWvhDaKPqmg")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_757() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=y8eyG&" + 
                    "filter=t0qc0YoSsYNsr_H&" + 
                    "groupByKey=building&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=ttRclrVx6kVXW")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_758() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=building&" + 
                    "showMetadata=bUiLMt2T3m8EzotS&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_759() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Onnp8&" + 
                    "bpolys=sQIn6QP_6_&" + 
                    "filter=osiVGTPFokNH_GV0&" + 
                    "groupByKey=BGH2zsujFHu&" + 
                    "showMetadata=6TKs2zHvrCA&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_760() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=fu&" + 
                    "format=json&" + 
                    "groupByKey=2hzLYrSP&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=sZG5243yDfaon3aX&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_761() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "contributionType=m77chOFecs_TqE4Y&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=gHJAP4xeBRugeeR&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given 'format' parameter is invalid. Please choose between 'geojson'(only available for /groupBy/boundary and data extraction requests), 'json', or 'csv'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_762() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "contributionType=Jj&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=zK1DHLPSosU&" + 
                    "groupByKeys=DPCXZtRwV4sl&" + 
                    "showMetadata=6&" + 
                    "time=&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_763() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=ql&" + 
                    "groupByKey=XyDpbp&" + 
                    "groupByValues=651044.38&" + 
                    "time=MultiPolygon&" + 
                    "timeout=3_F85g")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_764() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=a&" + 
                    "bpolys=VsSVgy&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=U497ti&" + 
                    "groupByValues=76772.71&" + 
                    "showMetadata=4OuEQ&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_765() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=d1amuzFxS&" + 
                    "groupByKey=cacnxbpHRV9fDm3&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_766() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bcircles=D23h_3YzxxaxB&" + 
                    "contributionType=wQ3NEkjWa&" + 
                    "filter=t6G7eIdezDebcq&" + 
                    "groupByKey=R23NNgLNRwQV&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) GET:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_767() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=cySXByd6&" + 
                    "bcircles=4jYKuMrG_BZb&" + 
                    "bpolys=chO&" + 
                    "filter=dfP&" + 
                    "format=json&" + 
                    "groupByKey=4&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_768() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bpolys=jy6keoerhm&" + 
                    "contributionType=LhIBwXWr60WWoaOd&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "groupByKey=B14SoEJIl&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=ougOU5XoAEj&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_769() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "contributionType=ZgB8&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=RJE3r&" + 
                    "groupByKey=j&" + 
                    "groupByValues=698802.99")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given 'format' parameter is invalid. Please choose between 'geojson'(only available for /groupBy/boundary and data extraction requests), 'json', or 'csv'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_770() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=j2C5YD8&" + 
                    "bpolys=B2BMpqDn&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=peQ&" + 
                    "groupByKey=ca0usLE0Bzp&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_771() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=CY95FqC&" + 
                    "bpolys=zY&" + 
                    "contributionType=tOEBecgy&" + 
                    "filter=Shv_Y_C9N6i2&" + 
                    "groupByKey=building&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_772() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=9vEh8uGTqbNxASW&" + 
                    "groupByKey=building&" + 
                    "groupByValues=3367.16&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The provided time parameter is not ISO-8601 conform."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_773() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=D5jLWSRH&" + 
                    "contributionType=7&" + 
                    "filter=vtZTFNPxna&" + 
                    "format=&" + 
                    "groupByKey=building&" + 
                    "showMetadata=coRJwFQkXMyBTsOU&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_774() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=c7295g7LZPj8rBUO&" + 
                    "bpolys=XDKYWj5hx6H66&" + 
                    "format=yUWQXbVqjKaTJx&" + 
                    "groupByKey=building&" + 
                    "groupByValues=8797443.19&" + 
                    "showMetadata=FLd&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_775() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=A4&" + 
                    "filter=H8VkZ&" + 
                    "format=json&" + 
                    "groupByKey=highway&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=P3EsNBOxqnzv7&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_776() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=xFEkIRi&" + 
                    "format=json&" + 
                    "groupByKey=highway&" + 
                    "groupByValues=1771.28&" + 
                    "showMetadata=jr2uk15qvHtNMNz&" + 
                    "time=MultiPolygon&" + 
                    "timeout=RRQX")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_777() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bcircles=Rg&" + 
                    "bpolys=m1NXVp&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "groupByKey=building&" + 
                    "groupByValues=B")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_778() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=yiHbHQ6U1Nd&" + 
                    "groupByKey=XJfsYztsfKF7_&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=0mcQFzxdTngWT6VH&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_779() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=vGbz1&" + 
                    "bpolys=a9Be_8&" + 
                    "filter=WKy&" + 
                    "format=json&" + 
                    "groupByKey=building&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_780() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=stk5G2&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "groupByKey=&" + 
                    "groupByValues=4.617347922E7&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * (400) POST:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_781() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=VfFCZ9pmHIUB&" + 
                    "bpolys=GwxOsUGg&" + 
                    "contributionType=H0W0r_kWOVQpKi&" + 
                    "format=0c&" + 
                    "groupByKey=building&" + 
                    "groupByValues=8797443.19&" + 
                    "showMetadata=IOE79CQITZnBDHzn&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/groupBy/type
    * 2 - (400) GET:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_782() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=jiEzVJTv4_4bsiA&" + 
                    "showMetadata=Fx6twLEmNdaGH_&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=ltfiv8U3fp7dYLLv&" + 
                    "bcircles=gU5VPG0FxvuEEOy&" + 
                    "filter=0ega5I1HlLIf&" + 
                    "showMetadata=Z4c7&" + 
                    "time=3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/groupBy/type
    * 2 - (400) GET:/elements/count/density
    */
    @Test(timeout = 60000)
    public void test_783() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "filter=GX92HF8OSDefl6B&" + 
                    "format=dYt9nTk&" + 
                    "time=vMkZMQ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density?" + 
                    "bcircles=miyJ9vyQqdmNU&" + 
                    "filter=_zlWOcKG&" + 
                    "format=JOAsa4U_fOuzt&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/density/groupBy/boundary
    * 2 - (400) POST:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_784() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bcircles=_SU8RnnhukIXO9g3&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bcircles=9aiW&" + 
                    "bpolys=&" + 
                    "clipGeometry=&" + 
                    "showMetadata=N&" + 
                    "time=Vh3Qjjj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/ratio
    * 2 - (400) GET:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_785() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bboxes=T1p&" + 
                    "format=J&" + 
                    "showMetadata=1x_&" + 
                    "timeout=f")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=znXAa9Vv24ZVW&" + 
                    "bcircles=n&" + 
                    "bpolys=0Hbk3Mk4O&" + 
                    "time=nJZb0zUr&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density
    * 2 - (400) GET:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_786() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=rS58ib&" + 
                    "bcircles=113try&" + 
                    "filter=d&" + 
                    "format=nueq2VjtcWGeQ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/centroid?" + 
                    "bcircles=RG&" + 
                    "bpolys=YvZ&" + 
                    "properties=te4xvpWOxRp9l&" + 
                    "showMetadata=m5xw3B4aFGHq&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density
    * 2 - (400) POST:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_787() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=n0jNJgM6&" + 
                    "showMetadata=Vbw6nIPJgvtbKnEm&" + 
                    "time=&" + 
                    "timeout=AKo2QxRB_VUkYK")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bboxes=NkP12l5y00&" + 
                    "bcircles=fAtOX6l&" + 
                    "bpolys=B1OkGJdBrKVg&" + 
                    "contributionType=sW0b5vtFR&" + 
                    "filter=GWsr3O0vJ5&" + 
                    "showMetadata=lC6g2I2tk&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/groupBy/boundary
    * 2 - (400) POST:/contributions/count/density
    */
    @Test(timeout = 60000)
    public void test_788() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=TKngggwkH8V3uyQ_&" + 
                    "bcircles=vEJhwMNEN&" + 
                    "filter=TUWUDZL&" + 
                    "time=OBS")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=qeisPlhnm&" + 
                    "bpolys=RUKVa&" + 
                    "filter=z5tuv2Mhti&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/groupBy/boundary
    * 2 - (400) GET:/elements/length/ratio
    */
    @Test(timeout = 60000)
    public void test_789() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=DjB&" + 
                    "bcircles=KG6lb8&" + 
                    "bpolys=jlFrABM0&" + 
                    "filter=bjQNWed7bU1Bk")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bpolys=NEQfVj&" + 
                    "filter=w9HGg1O4l4DCz0c4&" + 
                    "format=GQQ3LlhpAeYNR&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/groupBy/boundary
    * 2 - (400) GET:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_790() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=BNYXrBu9zr1wp7rK&" + 
                    "bpolys=nU0zX1GXt9wPG&" + 
                    "filter=tn&" + 
                    "format=bGvp0&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bcircles=BUPe_Qb7tpP&" + 
                    "filter=dXoMJrJ8sMr&" + 
                    "groupByKeys=&" + 
                    "time=o4rkPhpn")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_791() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count?" + 
                    "bcircles=r6E7rDH6h&" + 
                    "bpolys=Z8V&" + 
                    "filter=uifOsiQwHHWdv&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?bpolys=k258qJVIuYyF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count/groupBy/boundary
    * 2 - (400) GET:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_792() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bcircles=UbyoVYPXeft&" + 
                    "contributionType=dyCgDG&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=lr2YAn0OkuddFa&" + 
                    "bpolys=FeT&" + 
                    "filter=BED3gg0946&" + 
                    "groupByKeys=9THX2w3u7hzy3&" + 
                    "showMetadata=n&" + 
                    "time=gZQ8h&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/length
    */
    @Test(timeout = 60000)
    public void test_793() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "format=OsfhL5ZTPo7&" + 
                    "groupByKey=aCs2BJqqr1Q&" + 
                    "showMetadata=NMO&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=bh72jMvAT&" + 
                    "filter=mcHQDgYFe&" + 
                    "showMetadata=8MF4JO9_Z8OHRQvs&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_794() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=64nQBQtiK5&" + 
                    "filter=NQRAztnH8g5&" + 
                    "groupByKey=XMOQ8_28jZR&" + 
                    "groupByValues=743636.1&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bcircles=PojGJL078mQ&" + 
                    "filter=G&" + 
                    "showMetadata=&" + 
                    "time=yvf0rmp895RdxJLI&" + 
                    "timeout=Gi8WoB")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/ratio/groupBy/boundary
    * 2 - (400) GET:/elements/area
    */
    @Test(timeout = 60000)
    public void test_795() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bboxes=wd3azI_sjlbtOr&" + 
                    "filter=&" + 
                    "filter2=56CkaD9qPMSLe&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "bcircles=sDSSWl&" + 
                    "bpolys=1MnH6ZCY&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_796() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=pnFfV5cZKNqN&" + 
                    "groupByKey=frsBz&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=OCgUS&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/density/groupBy/tag
    * 2 - (400) GET:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_797() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bcircles=JXRm53qShw2A&" + 
                    "format=h3B4&" + 
                    "groupByKey=JX&" + 
                    "time=Q8e1Ol4HtQzwef_u")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=083hvkJh2E&" + 
                    "bcircles=sxD7c8&" + 
                    "bpolys=CeqaF3I69zm2ePvc&" + 
                    "format=J0WIZScamvN3m&" + 
                    "showMetadata=Iw2ngqCY0G")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/count/density
    * 2 - (400) GET:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_798() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=qhog&" + 
                    "bcircles=q0scVSf&" + 
                    "format=T6dq&" + 
                    "showMetadata=QxVCt9Egx9R&" + 
                    "time=MultiPolygon&" + 
                    "timeout=H3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/bbox?" + 
                    "bcircles=&" + 
                    "bpolys=YpyIRd78ecj&" + 
                    "properties=TcvJ&" + 
                    "showMetadata=SivDnsuopJ&" + 
                    "time=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/users/count/groupBy/type
    * 2 - (400) POST:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_799() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=f424sZSN5Gw&" + 
                    "bcircles=tvdlU6Qpj&" + 
                    "bpolys=3jqV4FAp&" + 
                    "format=8XKN9TZbIp&" + 
                    "showMetadata=17zmjqwRSsv_Vtbk&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=&" + 
                    "bcircles=tldI03TUL21RP7&" + 
                    "format=bCqT8mQGqk68c7X&" + 
                    "time=oKvPQpd3U7zWGqEW")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/groupBy/boundary
    * 2 - (400) GET:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_800() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bpolys=nhkq&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count?" + 
                    "filter=7rrZfEZYPwc&" + 
                    "format=json&" + 
                    "showMetadata=13&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/users/count/groupBy/key
    * 2 - (400) GET:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_801() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bcircles=&" + 
                    "format=bp&" + 
                    "groupByKeys=e48NLK_&" + 
                    "showMetadata=kD&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=2s8BmKoB8TmN&" + 
                    "bpolys=mmS&" + 
                    "filter=uwkSM5Ueo2KEmb&" + 
                    "showMetadata=vhWekNyJrO9y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/tag
    * 2 - (400) GET:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_802() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bcircles=F_M9TAh&" + 
                    "filter=IIxDQCjBqykF0QQ&" + 
                    "format=W6_ziMFUe&" + 
                    "groupByKey=1hs&" + 
                    "timeout=Z")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=Z6ihT3K&" + 
                    "bpolys=Tvysr_&" + 
                    "filter=&" + 
                    "showMetadata=V6E&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/ratio
    * 2 - (400) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_803() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bboxes=rG&" + 
                    "bcircles=hx3to9&" + 
                    "showMetadata=c&" + 
                    "time=oGldSCQ3x7sS5c")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=0LqXmM&" + 
                    "filter=lwaUn&" + 
                    "groupByKeys=1Z47eiAT4bw&" + 
                    "showMetadata=m83fhwECLe")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_804() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=Brut&" + 
                    "groupByKey=Uy2JRWjo&" + 
                    "showMetadata=gNWqVFUZ_&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density?" + 
                    "bpolys=Nb3qyaURuoT4zwv&" + 
                    "filter=06vavmT2cNWJs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/length
    */
    @Test(timeout = 60000)
    public void test_805() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bcircles=mu9Cx&" + 
                    "filter=SYOKVsfomdHqLRSQ&" + 
                    "format=json&" + 
                    "showMetadata=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bcircles=Vl&" + 
                    "filter=4&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/density
    * 2 - (400) GET:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_806() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density?" + 
                    "bpolys=B9I5xEFX&" + 
                    "filter=pjev9jbsGB70EgSW&" + 
                    "format=json&" + 
                    "showMetadata=x0USel&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=dQozsQ9Gxw30U11T&" + 
                    "bpolys=3Zn8WHol&" + 
                    "contributionType=0QS6mrxqVk&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/latest/centroid
    * 2 - (400) POST:/contributions/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_807() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "showMetadata=Z_vuNyHhLYD&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=EBtK&" + 
                    "bcircles=S8I&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count/density
    * 2 - (400) POST:/elements/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_808() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=y_vSr6NJq1Mk&" + 
                    "bcircles=ac&" + 
                    "bpolys=VXCZ45&" + 
                    "filter=PV3AIi1O&" + 
                    "showMetadata=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=AMaYWHF&" + 
                    "showMetadata=8JV3h&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_809() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=YghwnBXa2V_6_n&" + 
                    "groupByKey=WAoARny58LM&" + 
                    "time=Thyyx4lyHoe4BC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bpolys=jXu8&" + 
                    "format=ph7FbMCYlS")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/ratio
    * 2 - (400) POST:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_810() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bcircles=Be&" + 
                    "format=RjNlnxYSdHdAlih&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bcircles=c5Ry2JMsRo6L&" + 
                    "bpolys=OmjBNUHLIC1&" + 
                    "filter=FoLBnxH4zu&" + 
                    "showMetadata=Iq1Q&" + 
                    "time=Jau4T")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/centroid
    * 2 - (400) GET:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_811() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "bcircles=3MKKVXho1l6&" + 
                    "bpolys=YwsheQnUXxTd&" + 
                    "filter=mUJiwW7KpW6GMh&" + 
                    "properties=5b3Y6Uv890zNBS&" + 
                    "showMetadata=IUlGNGJfd&" + 
                    "time=wZL7wEn4rN5XOO5&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bcircles=Jey3ewpPE&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=1QIdJ&" + 
                    "timeout=6zt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/density/groupBy/boundary
    * 2 - (400) GET:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_812() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bpolys=kozm3&" + 
                    "format=fDWZPnT&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=XSHEAkYjK7Vcy2g&" + 
                    "bpolys=hgREi3yKlJwKjDO&" + 
                    "groupByKeys=PXgEQcYM4&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/density
    * 2 - (400) GET:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_813() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=lXZqHLEc&" + 
                    "bpolys=fWH&" + 
                    "filter=w46BJwYmJoNOfaG&" + 
                    "showMetadata=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "contributionType=fKyqocuMGdzih&" + 
                    "filter=V4nHBs6qZ7d2Q0s5&" + 
                    "format=OsCp8VzdjMHtzln5&" + 
                    "showMetadata=ufSwTwBZ&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/groupBy/boundary
    * 2 - (400) GET:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_814() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bpolys=l00u_IsZ3Nn6Aw&" + 
                    "format=aIwiOtdFu&" + 
                    "showMetadata=n4pKnDMeaQZ5")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "filter=vZbU2Ei4&" + 
                    "properties=AcBdtgRfF&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The provided time parameter is not ISO-8601 conform."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/latest/bbox
    * 2 - (400) GET:/elements/area
    */
    @Test(timeout = 60000)
    public void test_815() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bboxes=s8Po63X3pFR&" + 
                    "bpolys=A&" + 
                    "filter=oGx&" + 
                    "properties=lJabSNwt&" + 
                    "time=MultiPolygon&" + 
                    "timeout=hB46G_S6vmxrBpxz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "bpolys=n5z6BZXXl2&" + 
                    "filter=8rP3I1zoc&" + 
                    "format=json&" + 
                    "showMetadata=KnR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 2 - (400) GET:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_816() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bcircles=Oiz5XTBiW&" + 
                    "filter=h&" + 
                    "format=jvaVAcpD&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=KmtZY&" + 
                    "bpolys=&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=svglngZ6PQ&" + 
                    "format=Ts3o&" + 
                    "time=SBMSDMLWDtp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/centroid
    * 2 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_817() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=G5mxa25s3_3mDF&" + 
                    "bcircles=UO&" + 
                    "bpolys=NtPDqyHms1&" + 
                    "properties=uFBmCR&" + 
                    "showMetadata=OAoe0n9rAjMi&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=32X&" + 
                    "bcircles=wM5ZeBkAeqJ2reG&" + 
                    "groupByKey=m&" + 
                    "showMetadata=oYU&" + 
                    "timeout=dByxijDhE4ERRa1D")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_818() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=2L&" + 
                    "bpolys=AzS&" + 
                    "filter=j6mHYlMQyWVXHmk&" + 
                    "groupByKey=4436o2G5HkGbB&" + 
                    "groupByValues=3367.16&" + 
                    "showMetadata=OoiTXEPpTCC0Plw&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/centroid?" + 
                    "bcircles=I3TV7lnzE&" + 
                    "clipGeometry=7Z60SdwUSo&" + 
                    "filter=i&" + 
                    "properties=Utt&" + 
                    "showMetadata=HZ3EBCCqG3qiqwhH&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/groupBy/key
    * 2 - (400) POST:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_819() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=Xl8YiViNu5F&" + 
                    "bpolys=Xiw&" + 
                    "groupByKeys=pOvcErcZ8DgShIR&" + 
                    "showMetadata=irT10Ybcw&" + 
                    "timeout=n5zranXc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bboxes=XMkqWXHeBmW&" + 
                    "filter=0b8SC_OlQPP7u1x&" + 
                    "filter2=IFhmQQyBmR3M&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/density/groupBy/tag
    * 2 - (400) GET:/elements/area
    */
    @Test(timeout = 60000)
    public void test_820() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=WMtOWcU4fh&" + 
                    "bcircles=CuVO4M5Fwmpo6Wl&" + 
                    "filter=QqnNS3UO&" + 
                    "format=json&" + 
                    "groupByKey=wP3p2AQjdeOj4d6&" + 
                    "showMetadata=8Rl&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=h5aW5Np9wO&" + 
                    "filter=HhSgyfCzH_&" + 
                    "format=afVej&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area
    * 2 - (400) POST:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_821() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=qOuvh9&" + 
                    "bpolys=8e3Nki6z3&" + 
                    "format=ma&" + 
                    "time=4mOAa&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=&" + 
                    "filter=nrReA8sr&" + 
                    "groupByKey=Ox1kcc5OmXyv8&" + 
                    "showMetadata=nYPv4HXZaIB0&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count/groupBy/boundary
    * 2 - (400) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_822() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bpolys=OBHGYDI&" + 
                    "contributionType=vL&" + 
                    "showMetadata=eoi1ty&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=VW864IeXMb3B3h&" + 
                    "bcircles=x74Hr&" + 
                    "bpolys=30cG1bu0KQ&" + 
                    "filter=ZuETvx&" + 
                    "format=1dsTVrdJOlqnXBj&" + 
                    "groupByKeys=jI767wia6BhT&" + 
                    "showMetadata=A&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_823() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=7t6XHD8u&" + 
                    "format=IVoslAtyDyS95sQ&" + 
                    "groupByKey=ivCruOkBdl&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=Orp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=yp&" + 
                    "bcircles=cylhcGKsUWKCKy&" + 
                    "filter=Cl&" + 
                    "format=TW0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/groupBy/tag
    * 2 - (400) GET:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_824() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=lqCkmuEnYs&" + 
                    "bpolys=h8SSbAsF6&" + 
                    "format=JP&" + 
                    "groupByKey=&" + 
                    "groupByValues=3.737603603E7&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bcircles=zIpLsU&" + 
                    "bpolys=wf&" + 
                    "filter=PnZ5NEZCkYKedv6z&" + 
                    "format=O&" + 
                    "showMetadata=b61KPAgb0eJ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/centroid
    * 2 - (400) GET:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_825() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=HdBKbLXH&" + 
                    "bcircles=o74auD9vFLI7WAc&" + 
                    "properties=Cd&" + 
                    "showMetadata=NsQ8nm&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=UwkD&" + 
                    "groupByKey=uhNoiuNkL4PEC&" + 
                    "groupByValues=8797443.19&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/tag
    * 2 - (400) GET:/elementsFullHistory/centroid
    */
    @Test(timeout = 60000)
    public void test_826() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=zgD4YB3ribacJ7&" + 
                    "groupByKey=3S&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bboxes=TlJet1lm_&" + 
                    "bcircles=jfDHkxzy7cu9hr&" + 
                    "clipGeometry=Mh&" + 
                    "filter=FR&" + 
                    "properties=&" + 
                    "time=uZfIIWEHf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count/groupBy/boundary
    * 2 - (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_827() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=Jypq9alFCNDAj&" + 
                    "bpolys=7SS&" + 
                    "showMetadata=In&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=jEXwl&" + 
                    "bcircles=K&" + 
                    "bpolys=2Rp6mo&" + 
                    "filter=Aq1FbWWqV&" + 
                    "format=xJ6lnFl4Y1xHR&" + 
                    "groupByKey=QG8BGcG8QZY3q&" + 
                    "groupByValues=3.737603603E7&" + 
                    "showMetadata=y_COviOF&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/tag
    * 2 - (400) GET:/contributions/latest/geometry
    */
    @Test(timeout = 60000)
    public void test_828() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "filter=icsM7yCE7&" + 
                    "format=ANWgMFEtA_ZR9Nv&" + 
                    "groupByKey=mQbQ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bpolys=nRoJUKvM&" + 
                    "showMetadata=mxILlLgBgc&" + 
                    "time=5mafaIs4dDLJd&" + 
                    "timeout=b_u2Xi")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_829() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=fez&" + 
                    "groupByKey=building&" + 
                    "showMetadata=p&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=id&" + 
                    "bpolys=7nPw1XFu70LdW9&" + 
                    "filter=9j")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count/density
    * 2 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_830() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density?" + 
                    "bpolys=XLlD&" + 
                    "filter=jA&" + 
                    "time=9MYvF2LmgeASoG3&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=Uw5gobTtKY&" + 
                    "bpolys=6s_W8VxkH1lG&" + 
                    "groupByKey=1B_4Fm9I56GVZ59R&" + 
                    "groupByValues=3.737603603E7&" + 
                    "showMetadata=KOeqeLfKBS0&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_831() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=4sEy56H&" + 
                    "bpolys=POfhT0Yk_j&" + 
                    "format=z0IVp7NQBFOCf&" + 
                    "groupByKey=5UxByLbd6p8yk7V&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio?" + 
                    "filter2=XDm&" + 
                    "format=&" + 
                    "showMetadata=vCKH&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/tag
    * 2 - (400) GET:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_832() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=ELX3WlH8yfx&" + 
                    "bcircles=2kwAXkbPLr4Ym&" + 
                    "groupByKey=8qdft4atBz7Onp&" + 
                    "groupByValues=0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "filter=MlC3V&" + 
                    "format=2FPTuo&" + 
                    "groupByKeys=5gk8WtRbq_FR&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/groupBy/key
    * 2 - (400) POST:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_833() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=WWNUaq&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKeys=GRN&" + 
                    "showMetadata=K_yieYG_TBQm")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bboxes=tqaJY1gf_j&" + 
                    "bcircles=wb3FMA36Bex&" + 
                    "contributionType=ZVqpwfSB&" + 
                    "filter=bhq3mDLN4&" + 
                    "format=dO6ct0&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_834() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=gHSZa3b_Y&" + 
                    "format=G11_nEZMq6Qy&" + 
                    "groupByKey=2RM&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=A6SiCJNJSbwsvG_k&" + 
                    "clipGeometry=GpieaErsyi&" + 
                    "filter=Qy7tNgg5&" + 
                    "properties=E3bf_R&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_835() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=f&" + 
                    "bcircles=csmSaQ&" + 
                    "bpolys=_qnLM&" + 
                    "filter=v58rk0g&" + 
                    "format=UXG41ZlH_PM&" + 
                    "groupByKey=UIs&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=4QWYdPfW6sn6bg&" + 
                    "format=K8r8&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/latest/count/density
    * 2 - (400) GET:/elements/area/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_836() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count/density?filter=FVWkD2bMxqw_g")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_837() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=5nd&" + 
                    "filter=&" + 
                    "format=Nj493pRDQPyy&" + 
                    "groupByKey=_R&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=76c1E2jF2i6Ts&" + 
                    "time=MultiPolygon&" + 
                    "timeout=KW")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bcircles=Ppa9f4Vf&" + 
                    "bpolys=GFdpWA&" + 
                    "clipGeometry=yFX5g2G6&" + 
                    "properties=N5Jopkrk0vV&" + 
                    "showMetadata=d0n5T3VlevMw&" + 
                    "time=MultiPolygon&" + 
                    "timeout=Yba_YXh6U")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/density/groupBy/type
    * 2 - (400) POST:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_838() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bpolys=HQJfiJw8V83vasu&" + 
                    "filter=BqR&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=h_LuV&" + 
                    "bcircles=3as3&" + 
                    "bpolys=&" + 
                    "groupByKey=4dct1Zs&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=9y1nkiKewTFWrp&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/density/groupBy/boundary
    * 2 - (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_839() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=eldzTZjR7xxNU&" + 
                    "showMetadata=bomuoajNs2&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=b&" + 
                    "bpolys=7TZa_MppE&" + 
                    "filter=l9VFPcH0eF&" + 
                    "format=b5ER&" + 
                    "groupByKey=7z4h4P0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/users/count/groupBy/tag
    * 2 - (400) GET:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_840() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bcircles=ZWcDWq&" + 
                    "bpolys=fBasZCmT6P&" + 
                    "contributionType=vacnvarH0&" + 
                    "format=gSz1aquqznK3ZaMv&" + 
                    "groupByKey=yZlOfkxqR7xv&" + 
                    "groupByValues=C2&" + 
                    "time=Fw3228KaSaGiN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=Ojcr&" + 
                    "filter=U8qGWnFcXkbAwF&" + 
                    "format=H&" + 
                    "showMetadata=rQu3GK7KkA5i")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter
    * 2 - (400) POST:/elements/perimeter
    * 3 - (400) GET:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_841() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=0UVLlyRYV6Or2kt3&" + 
                    "bcircles=MR8IqcKNIv0kCvye&" + 
                    "bpolys=kb42PP5X")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=y9OJrpzukQ&" + 
                    "bcircles=MiK8L8&" + 
                    "bpolys=QR&" + 
                    "filter=jICaUX9_xBs&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=251YstN0r2qmCZ&" + 
                    "showMetadata=d4Qy3W6&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/groupBy/key
    * 2 - (400) POST:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_842() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=VtFPQLU&" + 
                    "groupByKeys=wYSK99QVaBY")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=CB0Mh5y&" + 
                    "bpolys=t5&" + 
                    "contributionType=PUN39e5H&" + 
                    "filter=ITC&" + 
                    "showMetadata=zO84&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/groupBy/key
    * 2 - (400) POST:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_843() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "filter=nAzf0rLawC5l&" + 
                    "format=Ka90SFM0mzpulM&" + 
                    "groupByKeys=building&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bcircles=LMe&" + 
                    "filter=UYLU4zdqiIO&" + 
                    "showMetadata=TWlP48&" + 
                    "time=bCH8tIj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/groupBy/boundary
    * 3 - (400) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_844() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bcircles=zs830r9Mc&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bcircles=a0StCskr4&" + 
                    "showMetadata=I0oro")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=P7&" + 
                    "bpolys=gDJJVbE&" + 
                    "format=json&" + 
                    "showMetadata=kycB&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area
    */
    @Test(timeout = 60000)
    public void test_845() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=VSgnv4vmGWgsIM&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=OidEDL&" + 
                    "groupByKey=&" + 
                    "time=CRZblAtQxVWFqye")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=0sMsK3qpWb&" + 
                    "bcircles=cILIL&" + 
                    "filter=&" + 
                    "format=3StL9fXIHH&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count
    * 2 - (400) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_846() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count?" + 
                    "bcircles=anks&" + 
                    "filter=C7Z157EoOWQjM1dC&" + 
                    "format=&" + 
                    "time=Z2&" + 
                    "timeout=jXNT46")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=ZY9E0Wt&" + 
                    "groupByKey=building&" + 
                    "groupByValues=3.737603603E7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/type
    * 2 - (400) POST:/elements/count/density/groupBy/type
    * 3 - (400) GET:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_847() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=B390NY6WcIoDi1tH&" + 
                    "filter=HRj6PBvDN&" + 
                    "format=GDYqwu9CTUD4oq8q&" + 
                    "showMetadata=n_G")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "filter=mpeafxJth0j3J&" + 
                    "format=FOXD7I&" + 
                    "showMetadata=sYQ9&" + 
                    "time=VPT8m1E_qo")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "format=json&" + 
                    "showMetadata=l5K835qug4FS6utd&" + 
                    "time=XCwf38qhGd")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count/density/groupBy/boundary
    * 2 - (400) GET:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_848() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "contributionType=mJnLh&" + 
                    "filter=&" + 
                    "format=ifGozrNhodJ&" + 
                    "showMetadata=R")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bboxes=Z8vTiqbS0G&" + 
                    "bcircles=i1abWjR8J&" + 
                    "format=aO5CswL&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count/density
    * 2 - (400) GET:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_849() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density?" + 
                    "bpolys=krMNc&" + 
                    "format=json&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=4EiLa6g_A47ji&" + 
                    "bcircles=61Ik&" + 
                    "time=MultiPolygon&" + 
                    "timeout=fQPEHLYOQY")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count/density
    * 2 - (400) GET:/contributions/latest/geometry
    */
    @Test(timeout = 60000)
    public void test_850() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=53u86&" + 
                    "bpolys=ydHkxg1oZ0aVCT&" + 
                    "showMetadata=oY2HkGWNd58&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "properties=tags&" + 
                    "time=vMSwrr3zC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_851() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=pjuAaTRWJyH7yTUz&" + 
                    "bcircles=4GKsmwGop_ajFi&" + 
                    "format=7eZXVTM&" + 
                    "groupByKey=tqnDNYZG9lSFUmAR&" + 
                    "showMetadata=NOUNDuamXG&" + 
                    "time=EdmJqqb3Up4A&" + 
                    "timeout=Lm")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=dGJEf9&" + 
                    "filter=UOtPwbwsapPik&" + 
                    "groupByKey=iFBCakincKXhfTH&" + 
                    "groupByValues=jMYQ8pesLVV8WI&" + 
                    "time=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count/density
    * 2 - (400) GET:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_852() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density?" + 
                    "filter=VFjJ&" + 
                    "showMetadata=5WuqHXXOch4G&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bcircles=6MDJMpgYPI&" + 
                    "bpolys=PzL3VdHbhNhp9j4&" + 
                    "filter=7jVtZTIiibr_LgA8&" + 
                    "format=OPEM2lazQ&" + 
                    "groupByKey=tcvu&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/tag
    * 2 - (400) GET:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_853() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "filter=hp3DPH4M&" + 
                    "format=cdKb0Y&" + 
                    "groupByKey=Co&" + 
                    "groupByValues=3.737603603E7&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bcircles=eBX2LBWN2vJI4GD&" + 
                    "format=rzk8IHb&" + 
                    "groupByKey=VFMAeRPEk&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count
    * 2 - (400) GET:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_854() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=LR&" + 
                    "bpolys=rmnmwQ7O66G1&" + 
                    "showMetadata=2LklrolDl")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=larZKbgDfg__Z&" + 
                    "filter=WBHPSOtez&" + 
                    "format=7PL27pT_WRKdrL5&" + 
                    "groupByKey=SFcQGIjEzHr&" + 
                    "timeout=fOs52NoU5XkTcTM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/users/count/groupBy/boundary
    * 2 - (400) GET:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_855() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=olwW&" + 
                    "bpolys=DuXzjPEXxP1RK4G&" + 
                    "filter=UQ5NwvuD&" + 
                    "format=WADWz&" + 
                    "showMetadata=x7fqXrOCFcV&" + 
                    "time=hmBWEhyEok5Xwcp&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=A_NoXkNdmFka6S&" + 
                    "bcircles=rTL&" + 
                    "contributionType=gAmYEfWNQyM3T&" + 
                    "format=cAHC8QSkocBWrjv&" + 
                    "groupByKey=RuBa9kVoQt6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_856() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=beYR_y&" + 
                    "filter=fAkMRkmWNS14bpI&" + 
                    "format=wiH3PN4SvlaulmP&" + 
                    "groupByKey=CuA&" + 
                    "showMetadata=Fjuj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=J&" + 
                    "filter=&" + 
                    "groupByKey=KNPHcOrKEOf9jw&" + 
                    "groupByValues=651044.38&" + 
                    "showMetadata=N2bxncr")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_857() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=2gx3MxV7__Ju0&" + 
                    "bcircles=J5fN3VApljMo4T&" + 
                    "bpolys=35vdO9zZ8uHoZ0k6&" + 
                    "groupByKey=building&" + 
                    "groupByValues=8797443.19&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bboxes=tGaey01i9tkxFd&" + 
                    "filter=xn0af&" + 
                    "showMetadata=Fg20Gn7uvqywqfey&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/geometry
    * 2 - (400) GET:/contributions/latest/geometry
    */
    @Test(timeout = 60000)
    public void test_858() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "clipGeometry=cUh5oOBSALi_knIs&" + 
                    "filter=6dPcqG6ah&" + 
                    "properties=tags&" + 
                    "showMetadata=dRP1l0dmK7P&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bpolys=VKuCv2Ky5M&" + 
                    "showMetadata=iH&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_859() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bcircles=Jb&" + 
                    "filter2=80_mTnA3&" + 
                    "format=lxx&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=fV1RGzo6uku8KYxz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=HsOJFGhRPJj7&" + 
                    "format=9&" + 
                    "groupByKey=Nx6_Nve&" + 
                    "groupByValues=0.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/tag
    * 2 - (400) GET:/elements/length/ratio
    */
    @Test(timeout = 60000)
    public void test_860() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bcircles=ZLjq7w&" + 
                    "groupByKey=so6FH7JooNh&" + 
                    "groupByValues=687909.51&" + 
                    "showMetadata=H6cc&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bboxes=JkuzZdkvx1&" + 
                    "filter=type%3Away+and+highway%3D*&" + 
                    "filter2=TEPfRf&" + 
                    "format=5u&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/ratio
    * 2 - (400) POST:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_861() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio?" + 
                    "filter=F&" + 
                    "filter2=V_zZm&" + 
                    "showMetadata=7&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=xPRb0&" + 
                    "filter=rb&" + 
                    "format=DSedcmKl1d90pJot&" + 
                    "groupByKey=building&" + 
                    "showMetadata=9&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/density/groupBy/boundary
    * 2 - (400) GET:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_862() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=IB3YN&" + 
                    "format=XQyWmChz&" + 
                    "showMetadata=nFQE1uazEjLCczT0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bcircles=ykmHi8J8dXh_&" + 
                    "bpolys=XTee&" + 
                    "format=uhaZdvG0GvQW&" + 
                    "groupByKey=e4qFc0aZZ&" + 
                    "groupByValues=698802.99&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_863() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=ygwLtr6Wo&" + 
                    "bpolys=JC5fU&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=6lqz7TXlMmf2nfB&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=dZG7GQ2URN9qT8&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bpolys=2s2Opr6SSiQKo&" + 
                    "contributionType=24KX&" + 
                    "filter=y3qNY_f&" + 
                    "format=Y6QiId&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density/groupBy/tag
    * 2 - (400) GET:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_864() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=eo87vmKizy&" + 
                    "bpolys=g&" + 
                    "contributionType=5rSzu&" + 
                    "format=&" + 
                    "groupByKey=olnF9ICfvX&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bpolys=csHA2m&" + 
                    "filter=kSDRaNj5Lsah&" + 
                    "showMetadata=RVFChV1a2VQT4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density
    * 2 - (400) POST:/elements/length/density
    * 3 - (400) GET:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_865() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=0Pl&" + 
                    "bcircles=503cB8PVt&" + 
                    "bpolys=p9Al08Tu0QdcPeU&" + 
                    "filter=pMq&" + 
                    "format=Wt2Nt_O&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=Kr&" + 
                    "bcircles=hPWpVwDA&" + 
                    "filter=8A&" + 
                    "showMetadata=jSpII0c8TLbY&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density?" + 
                    "bpolys=CeRrQWa0eiMh9VO&" + 
                    "filter=TVjpaWyBZ&" + 
                    "format=sfmzuf4TdvO&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_866() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=ww7HVPC&" + 
                    "bpolys=w4rgEkclhEOG&" + 
                    "filter=A2rrC&" + 
                    "groupByKey=5_strFVcpldZUTq&" + 
                    "groupByValues=3.737603603E7&" + 
                    "showMetadata=mQhj8Y2")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "bpolys=D9KJpb2LQy5wtfS&" + 
                    "contributionType=3m&" + 
                    "filter=8H&" + 
                    "format=xXA1DTar9zmuhr&" + 
                    "showMetadata=5x9dBCrPCO9Sq1O_&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/type
    * 2 - (400) POST:/elements/count/groupBy/type
    * 3 - (400) GET:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_867() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=622veN&" + 
                    "bcircles=SAIP9zrnjkN&" + 
                    "bpolys=OMn63zWtB")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=Nejbms&" + 
                    "bcircles=Vo&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=V_8lPk&" + 
                    "filter=YqNxyCL&" + 
                    "format=YTnO&" + 
                    "showMetadata=8aUCQ17iD2KDdkTc&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/users/count/groupBy/boundary
    * 2 - (400) GET:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_868() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=gA95Er&" + 
                    "format=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "clipGeometry=yOXFv6UM8&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The provided time parameter is not ISO-8601 conform."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/type
    * 2 - (400) POST:/elements/area/density/groupBy/type
    * 3 - (400) GET:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_869() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=&" + 
                    "bpolys=nhHguPP8YS&" + 
                    "filter=8syeBM&" + 
                    "showMetadata=4&" + 
                    "time=MultiPolygon&" + 
                    "timeout=6JgS7oWDpTs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=WFjat3aUWhe&" + 
                    "filter=v_6vOl0&" + 
                    "format=IbCBEzi_iGE67pNs&" + 
                    "showMetadata=IPMIyS&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=P&" + 
                    "bpolys=HWM6i&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=8M3&" + 
                    "time=f&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/bbox
    * 2 - (400) POST:/contributions/bbox
    * 3 - (400) GET:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_870() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=OCW7&" + 
                    "filter=HF9&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "filter=&" + 
                    "time=VrGeox3zo2")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/bbox?" + 
                    "bcircles=yqmt8cx7qel8g&" + 
                    "bpolys=nF3FAg16Fo2oh&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/users/count/groupBy/key
    * 2 - (400) GET:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_871() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "contributionType=0IQuwS65VSQ7v6u&" + 
                    "filter=yyQvX&" + 
                    "groupByKeys=Q&" + 
                    "time=4n")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bcircles=OcTaqsEY4uK84aWM&" + 
                    "filter=s&" + 
                    "properties=tags&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/users/count/groupBy/boundary
    * 2 - (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_872() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bcircles=xyoy&" + 
                    "bpolys=HkZ7&" + 
                    "contributionType=JcJ1jqjvp&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "format=CjS&" + 
                    "groupByKey=UAn&" + 
                    "groupByValues=dNAjQRNaWsVqTZD1&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/groupBy/tag
    * 2 - (400) GET:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_873() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=l&" + 
                    "bpolys=tRa&" + 
                    "format=5kjFMLlalU80o4TH&" + 
                    "groupByKey=CHwAl8TdHNKw&" + 
                    "showMetadata=A_C2lz&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=URK&" + 
                    "contributionType=N1&" + 
                    "filter=ySxmAwwJ&" + 
                    "format=MPgsMp7BH8mjxR1k&" + 
                    "groupByKey=Q&" + 
                    "groupByValues=65.97")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/density/groupBy/tag
    * 2 - (400) POST:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_874() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=json&" + 
                    "groupByKey=E11jbo&" + 
                    "showMetadata=ZAAqdY")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=&" + 
                    "bcircles=YXPAxNWR7wO0&" + 
                    "bpolys=LckQx8O&" + 
                    "clipGeometry=mQMuzM&" + 
                    "filter=VkHlSKV&" + 
                    "properties=DSF9Td3iE&" + 
                    "showMetadata=VfPPV8Dgm0q0&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density/groupBy/tag
    * 2 - (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_875() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=oKwaW&" + 
                    "bcircles=3sDR58E&" + 
                    "groupByKey=E7XInMvg64SWZqH&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=Fz4JcnUpb&" + 
                    "bcircles=wPVCGBr7HwYKd&" + 
                    "filter=v4&" + 
                    "format=gRA0Dtn_S&" + 
                    "groupByKey=building")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_876() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=clLD&" + 
                    "bcircles=v7tMpy53r1_wTm1&" + 
                    "bpolys=Fq_MEpeI&" + 
                    "groupByKey=CHz&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=KsmbwJbS3h9n&" + 
                    "bpolys=qRucqdFIqISwnVA&" + 
                    "filter=2yK9cq&" + 
                    "groupByKey=jzP2ktWU2c2g&" + 
                    "showMetadata=zm50L&" + 
                    "time=MultiPolygon&" + 
                    "timeout=lsOKQTwDyO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density
    * 2 - (400) POST:/elements/count/density
    * 3 - (400) GET:/elements/count/density
    */
    @Test(timeout = 60000)
    public void test_877() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=4x6aBzYc5mEBz&" + 
                    "bcircles=nM_VUTt&" + 
                    "bpolys=f3GGRs&" + 
                    "format=Js1z&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=s0RzhRENOCG&" + 
                    "bpolys=n6uu0A9TMVn7m5&" + 
                    "showMetadata=wPuxKql21sU&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=lRI5g3LGUgBbiyaG&" + 
                    "bpolys=ZaBi_nCcJ1&" + 
                    "filter=hNS&" + 
                    "format=tVhsuVY&" + 
                    "showMetadata=rDuNAIN&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/users/count/groupBy/tag
    * 2 - (400) GET:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_878() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=UgXRDfWzVG&" + 
                    "bpolys=a_BmoLAK&" + 
                    "format=json&" + 
                    "groupByKey=Ec5&" + 
                    "showMetadata=LdE3PKUFHA&" + 
                    "time=MultiPolygon&" + 
                    "timeout=GXmnmgkaurtw")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bcircles=uvS7wG0RtEl7Wto2&" + 
                    "bpolys=8ZYGX8Q35&" + 
                    "contributionType=aiEdQHOP4ruB_D&" + 
                    "format=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary
    * 2 - (400) POST:/elements/area/groupBy/boundary
    * 3 - (400) GET:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_879() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=IQ8_SHNtYnp&" + 
                    "filter=T4iBxHKYSvCq0FOu&" + 
                    "format=&" + 
                    "showMetadata=yl0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bcircles=sy&" + 
                    "filter=&" + 
                    "format=pK82VftdCAstjd9m&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bcircles=w1uOSmr&" + 
                    "filter=OKc3VhTcaM&" + 
                    "format=y9V6GmBHQWl7F&" + 
                    "showMetadata=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length
    * 2 - (400) POST:/elements/length
    * 3 - (400) GET:/elements/length
    */
    @Test(timeout = 60000)
    public void test_880() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bcircles=UZqUAc&" + 
                    "bpolys=kTkg6z7OU26OIT&" + 
                    "showMetadata=Sv5EJwkkP9VP&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "filter=v8DOHblVrjVse7q1&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?" + 
                    "bpolys=J&" + 
                    "filter=QUDqhX&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count/density/groupBy/boundary
    * 2 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_881() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bcircles=90320ZnSp&" + 
                    "filter=nkFQ0mal1OD_NUiY&" + 
                    "format=PZtA57Vep2j&" + 
                    "showMetadata=dlHnjpGyio&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=0OMjFKm&" + 
                    "groupByKey=4SK2W9H&" + 
                    "groupByValues=718314.9&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_882() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=07K&" + 
                    "bpolys=d8lr3S2XAk6xT8md&" + 
                    "filter=YJ2p7&" + 
                    "groupByKey=building&" + 
                    "groupByValues=8797443.19&" + 
                    "showMetadata=JP&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=BkUXEojpx73tmq&" + 
                    "bcircles=phJPWk9Wrf7tJn2q&" + 
                    "filter=k8Ky6OzkL_zL_&" + 
                    "format=MJPKsHQ9fXftRD&" + 
                    "groupByKey=SbBcvU_0cxv6yt&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary
    * 2 - (400) POST:/elements/length/groupBy/boundary
    * 3 - (400) GET:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_883() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bpolys=sAJXFgU&" + 
                    "filter=O45fk7c5rJ3Ih&" + 
                    "format=TaZkyAFYPkeX&" + 
                    "showMetadata=swme8yuoF10yuu&" + 
                    "time=tkU8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=2YvuJTmPRnG1S&" + 
                    "bpolys=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=gj4ObOdvH6&" + 
                    "bcircles=wiG8K_4r0&" + 
                    "bpolys=OQulp9pYAaoJ&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=JL5LNHQC&" + 
                    "timeout=D6pW0XobQO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter
    * 2 - (400) POST:/elements/perimeter
    * 3 - (400) GET:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_884() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=EMjncB&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=_rVG0I2gEm0qVz2&" + 
                    "bcircles=&" + 
                    "bpolys=C3BP2wV&" + 
                    "format=B&" + 
                    "showMetadata=gd9QCU&" + 
                    "time=tWqxcGCN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=TZY7mSR0cZss&" + 
                    "bpolys=GlZnW7&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=a5HW&" + 
                    "time=q0Q")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/density/groupBy/tag
    * 2 - (400) GET:/elements/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_885() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=c1JgRAQ&" + 
                    "bpolys=aW2KiQ0&" + 
                    "groupByKey=fFuyoTOpfm")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=qPU4ttJGCQkzI&" + 
                    "filter=C2z0by&" + 
                    "groupByKey=building&" + 
                    "showMetadata=UuLRFRMphYUf&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density/groupBy/tag
    * 2 - (400) GET:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_886() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=_YX&" + 
                    "bpolys=DF5MXzPDv&" + 
                    "filter=0ukBtN1t&" + 
                    "format=4_8DVw6N7bg9xpU&" + 
                    "groupByKey=NYzxs_aHW&" + 
                    "showMetadata=4JA&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=WHN4QaSPHXI6Ib&" + 
                    "filter=isdWMFm1GRDWY&" + 
                    "format=ievAA&" + 
                    "groupByKey=6G4yuPL&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/type
    * 2 - (400) POST:/elements/length/groupBy/type
    * 3 - (400) GET:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_887() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=reHcNpXrdEMG3Ov&" + 
                    "format=VvSGsahQB8&" + 
                    "showMetadata=tMz_5aAn8tRy&" + 
                    "time=_AizB7e")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "filter=R8&" + 
                    "format=XEYyMJQT5IYqGfQ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=wmeHzxvEZA&" + 
                    "bpolys=4yU53sKDjHmT&" + 
                    "filter=MRvjgi&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/users/count/density
    * 2 - (400) GET:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_888() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density?" + 
                    "bcircles=kif9apDwS5BXNL8&" + 
                    "bpolys=CPyVN&" + 
                    "contributionType=LTD65SK_6PlbaF&" + 
                    "format=F7hWScn&" + 
                    "showMetadata=FvejQeaIr4Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Z6ZZtqMlFAT&" + 
                    "filter=CiEMrrR&" + 
                    "groupByKey=mEEJOuuyK")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/boundary
    * 2 - (400) POST:/elements/count/groupBy/boundary
    * 3 - (400) GET:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_889() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=rlHf0lMrZYLoT6tb&" + 
                    "bcircles=&" + 
                    "bpolys=G0eGA9AqrnbF7g0g&" + 
                    "filter=iDvkDnWWl01h5&" + 
                    "format=Ov7HgeXW4lLfS8t&" + 
                    "time=MultiPolygon&" + 
                    "timeout=3uKcSaMe0g_T5")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=avqbi&" + 
                    "bpolys=WycnAhN&" + 
                    "filter=OdHMFaxpbMOyH&" + 
                    "showMetadata=lbBupm&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=qU28w&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=7ETu&" + 
                    "time=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length
    * 2 - (400) POST:/elements/length
    * 3 - (400) GET:/elements/length
    */
    @Test(timeout = 60000)
    public void test_890() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bpolys=2E5oPj8GZz3a&" + 
                    "showMetadata=0m4EJn_3OibxLf06&" + 
                    "time=IOqMuo5nJ0rjD3r&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=tqdMoqaVfkiP7DtN&" + 
                    "filter=WWy&" + 
                    "showMetadata=AK0nzOJF3e4&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=hHBQRwcdKc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/boundary
    * 2 - (400) POST:/elements/length/density/groupBy/boundary
    * 3 - (400) GET:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_891() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bcircles=4489ly&" + 
                    "bpolys=J9GA7MlLllF7&" + 
                    "filter=grk5t&" + 
                    "showMetadata=22B2")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=F8zuLrp5&" + 
                    "filter=QEqBq&" + 
                    "showMetadata=Kj896IrUfgzT_bU&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=mJU49PYjQQMv&" + 
                    "bcircles=VWW&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=Z7Co")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/type
    * 2 - (400) POST:/elements/perimeter/density/groupBy/type
    * 3 - (400) GET:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_892() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bcircles=rnbT6idhtmbGEK&" + 
                    "bpolys=M_DuYsABA&" + 
                    "filter=mHmSs5TqjfHXo1Fi&" + 
                    "format=Hv185H&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bcircles=aBSM&" + 
                    "filter=Wvg5FFVd17Wn5&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The provided time parameter is not ISO-8601 conform."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary
    * 2 - (400) POST:/elements/area/groupBy/boundary
    * 3 - (400) GET:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_893() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?filter=NsQDZJKpeOfy")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=zSap09P&" + 
                    "bcircles=G1yUq&" + 
                    "bpolys=pHuP7E5oEQVbdK9&" + 
                    "filter=&" + 
                    "showMetadata=fqfuOag8&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=_1D&" + 
                    "filter=bXO4K5iXFks&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density
    * 2 - (400) POST:/elements/area/density
    * 3 - (400) GET:/elements/area/density
    */
    @Test(timeout = 60000)
    public void test_894() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bcircles=cR_frH5cVb&" + 
                    "bpolys=uVv_k&" + 
                    "format=XsxlRBT&" + 
                    "showMetadata=jJP_jMfHoJh&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=hI2638I5&" + 
                    "time=JtU1ah4kG0&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/boundary
    * 2 - (400) POST:/elements/area/density/groupBy/boundary
    * 3 - (400) GET:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_895() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bpolys=i&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=&" + 
                    "bcircles=9iv2TmeS7FXZPH&" + 
                    "bpolys=pk9Bg5QIvxIE3&" + 
                    "filter=M0JpecfLRww&" + 
                    "format=tDbFYZanXfNWtRn&" + 
                    "showMetadata=7c&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=grtNgN5D1SDvkoYs&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Invalid filter syntax. Please look at the additional info and examples about the filter parameter at https://docs.ohsome.org/ohsome-api. Detailed error message: line 1, column 17: whitespaces, EQUALS (=), NOT_EQUALS (!=) or in expected, EOF encountered."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density/groupBy/type
    * 2 - (400) POST:/users/count/density/groupBy/type
    * 3 - (400) GET:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_896() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "contributionType=8v4cm9OEgYySsO&" + 
                    "filter=u&" + 
                    "format=CfanIsKI")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bcircles=BeF9YvHVj&" + 
                    "contributionType=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bcircles=7B54&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 3 - (400) GET:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_897() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "filter=fu9Vx3&" + 
                    "format=aHVieWliJ2PFwd&" + 
                    "showMetadata=IuPzR&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bcircles=1eM3cTwKaUqJi&" + 
                    "bpolys=yhsRlQzs&" + 
                    "filter=ESvlhNr_uXA&" + 
                    "format=qA3D&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=4H3CNa_OABvvh&" + 
                    "bcircles=Wr8pytjp59&" + 
                    "filter=V0yD&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/count/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_898() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bboxes=7LwfDwu&" + 
                    "bcircles=0QNFcVkSJOmQzTe_&" + 
                    "filter=7gMIj&" + 
                    "showMetadata=LOs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bboxes=6KGb3JCulX&" + 
                    "bpolys=aaT3ju8sh4JhRTj&" + 
                    "filter=IF3NdzWQXtiGZx&" + 
                    "format=zYloRXT&" + 
                    "showMetadata=aT1lBHPvab")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "showMetadata=nm5ti84_VJ&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=PQalXlI2sD")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/groupBy/boundary
    * 3 - (400) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_899() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=_&" + 
                    "bpolys=kmbPCjeIM&" + 
                    "timeout=NDcC1nUIFvKHLx15")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bcircles=JKv9qlE2S47_FY&" + 
                    "bpolys=rPruh3Ey&" + 
                    "filter=iFufDLbjqs36Px&" + 
                    "showMetadata=S")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bcircles=U&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=yGuaQd6AU4J0Ikj&" + 
                    "time=bci2Z5kSfCmK")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/type
    * 2 - (400) POST:/elements/area/density/groupBy/type
    * 3 - (400) GET:/elements/area/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_900() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bpolys=T4L2rUZwUg7ZSY_&" + 
                    "filter=sXunrvt&" + 
                    "showMetadata=oy3raCX00P0&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bcircles=Y2&" + 
                    "format=ug&" + 
                    "showMetadata=UVv&" + 
                    "time=uzJ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bboxes=ZiVybcaJkw&" + 
                    "bcircles=YDrwvHOxK9Oc&" + 
                    "bpolys=UJKYn9YmiI&" + 
                    "format=xZ&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=TAr3QGE")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter
    * 2 - (400) POST:/elements/perimeter
    * 3 - (400) GET:/elements/perimeter
    */
    @Test(timeout = 60000)
    public void test_901() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bcircles=qeX&" + 
                    "filter=zU&" + 
                    "format=wHtH2oMA&" + 
                    "showMetadata=JyqURQK")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=w0yIa5OlB&" + 
                    "bpolys=LDp2RfDKvuV2&" + 
                    "filter=Ey72fsIH6G8&" + 
                    "format=qGbwPbd&" + 
                    "timeout=mk3p6JEVKaCtx")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bpolys=KQ7pZzHH1HoIS7&" + 
                    "format=json&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/count
    * 2 - (400) POST:/contributions/latest/count
    * 3 - (400) GET:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_902() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "showMetadata=3c&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bcircles=Y8ocS&" + 
                    "bpolys=8lRnBjY&" + 
                    "format=C7XH_fbkIEANbz&" + 
                    "showMetadata=TZ&" + 
                    "time=o5IzvUvdJpY")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bboxes=oxYawPaUU&" + 
                    "bpolys=OyAg5o&" + 
                    "contributionType=sBM7_BsysI6Ky&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=cbrKZzYIo1&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/key
    * 2 - (400) POST:/elements/area/groupBy/key
    * 3 - (400) GET:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_903() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=1PhAKoHCr&" + 
                    "bcircles=N&" + 
                    "groupByKeys=uDD2&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=KQ7I8&" + 
                    "bcircles=1Dw0&" + 
                    "filter=Hn8Z&" + 
                    "groupByKeys=H2uPizzJy4nF&" + 
                    "showMetadata=N8V")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bcircles=L25rGK0G&" + 
                    "filter=lf1BIhWxJwzRhQ&" + 
                    "format=json&" + 
                    "groupByKeys=p5&" + 
                    "time=g_HlIjViZY6Bs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density
    * 2 - (400) POST:/elements/perimeter/density
    * 3 - (400) GET:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_904() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=UDy6MqQ&" + 
                    "bpolys=p0tTazo&" + 
                    "filter=xC5xuMGDKCu7RK&" + 
                    "timeout=nJk0Pa8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=6ta5&" + 
                    "format=DLNqesOjOa&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bcircles=rzYzRppS8sfgCx&" + 
                    "bpolys=G4xsFELv4_&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=xa534uT5puy&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/type
    * 2 - (400) POST:/elements/perimeter/groupBy/type
    * 3 - (400) GET:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_905() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bpolys=hr2Q_SWnog&" + 
                    "showMetadata=UthaV_62B&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "format=yg&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=oVUiKB&" + 
                    "bpolys=cVPCQTTc8&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "format=json&" + 
                    "showMetadata=o&" + 
                    "time=MultiPolygon&" + 
                    "timeout=9yo0UwWiw3WDp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/geometry
    * 2 - (400) POST:/contributions/geometry
    * 3 - (400) GET:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_906() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "bpolys=xzBBEX&" + 
                    "clipGeometry=Z4SCS_vPBK&" + 
                    "showMetadata=89xlW3&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "bboxes=piDQwauR&" + 
                    "bpolys=GkSOHv&" + 
                    "clipGeometry=D6PgMv&" + 
                    "properties=6hWSB_&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/geometry?" + 
                    "bboxes=iMZ94b9MzzDADJ&" + 
                    "bcircles=yZL33wHoLIZo&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=8WieH0qZ&" + 
                    "time=ZOHcWLEGuvGi&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/centroid
    * 2 - (400) POST:/elements/centroid
    * 3 - (400) GET:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_907() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bcircles=FtXi4ccI9Gmb&" + 
                    "bpolys=elmeqD&" + 
                    "properties=1o_ZO4U&" + 
                    "showMetadata=7rtIBP3RJ26W0M&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=3rYSDLCyz&" + 
                    "bcircles=M0jcnm&" + 
                    "properties=N8f8Xu3gI&" + 
                    "showMetadata=cuwvhoWcHAca&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/centroid?" + 
                    "bpolys=1Y&" + 
                    "clipGeometry=true&" + 
                    "filter=g&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/type
    * 2 - (400) POST:/elements/count/groupBy/type
    * 3 - (400) GET:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_908() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=5M46VwiY23i0g&" + 
                    "format=kXeHrEuM4&" + 
                    "showMetadata=8wwdFSE66Wz&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=qmCghlg&" + 
                    "filter=CWy_Tykw&" + 
                    "showMetadata=KAOMbJ7RSlZ&" + 
                    "time=MultiPolygon&" + 
                    "timeout=azfyn")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bcircles=70Y49QOA3&" + 
                    "bpolys=2ziG0FDOIabYVO6&" + 
                    "filter=u&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/type
    * 2 - (400) POST:/elements/length/groupBy/type
    * 3 - (400) GET:/elements/length/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_909() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=avXNwdILfMTlb80&" + 
                    "filter=sO8fzbtf9Eb5bHG&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=NhxYq86&" + 
                    "showMetadata=y8vAV2Izc3YYNJUx&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary
    * 2 - (400) POST:/elements/length/groupBy/boundary
    * 3 - (400) GET:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_910() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bcircles=&" + 
                    "bpolys=Y0t8Q0F&" + 
                    "filter=9_iHMU5bs&" + 
                    "format=iDpBnDoZUuj1H&" + 
                    "showMetadata=YaU57F6&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=0Tm70zsbMG3Kh&" + 
                    "bpolys=OzsGtIC&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "filter=H&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/boundary
    * 2 - (400) POST:/elements/area/density/groupBy/boundary
    * 3 - (400) GET:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_911() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=HKXMqL7c4&" + 
                    "bpolys=6XFuUYUlaa7L&" + 
                    "filter=gU26rW0y00&" + 
                    "format=1HWC4P6IR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "filter=dIdp&" + 
                    "format=tDf2&" + 
                    "showMetadata=D3ezTuZ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=1I4xDERPUdsQe&" + 
                    "bpolys=5MiZfakekkko&" + 
                    "filter=type%3Away+and+natural%3D*")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/type
    * 2 - (400) POST:/elements/perimeter/density/groupBy/type
    * 3 - (400) GET:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_912() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bcircles=ZMJ&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=9xg6K9nUbki&" + 
                    "bcircles=Xz4oe552Mn&" + 
                    "filter=WFy2Hgc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=nEZaawirO&" + 
                    "bcircles=&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/ratio
    * 2 - (400) POST:/elements/length/ratio
    * 3 - (400) GET:/elements/length/ratio
    */
    @Test(timeout = 60000)
    public void test_913() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bboxes=G7n&" + 
                    "filter2=SKSGS1R5Bse8G&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bcircles=6D_7BYa&" + 
                    "bpolys=CQkehYS&" + 
                    "filter2=IKWqdx&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio?" + 
                    "filter2=type%3Away+and+highway%3Dresidential&" + 
                    "format=iYZ&" + 
                    "time=MultiPolygon&" + 
                    "timeout=b")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_914() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=&" + 
                    "filter=cwK&" + 
                    "groupByKey=&" + 
                    "showMetadata=Ir2tLa1Sln2&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=vWpGk4VNx&" + 
                    "filter=Z0Y&" + 
                    "groupByKey=6I&" + 
                    "showMetadata=jVGtHwzbzdk1&" + 
                    "time=QXfwMLhK&" + 
                    "timeout=XYpK5KghLjM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=CRGy1DYg8RK&" + 
                    "bcircles=5IygTmp8aiGYiEa&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=QE_aPoipwJ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elementsFullHistory/geometry
    * 2 - (400) POST:/elementsFullHistory/geometry
    * 3 - (400) GET:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_915() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bcircles=6&" + 
                    "clipGeometry=oY9CV&" + 
                    "properties=tH&" + 
                    "showMetadata=R&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bcircles=Gku4n1M&" + 
                    "bpolys=JbD1&" + 
                    "showMetadata=Nv4IaqlKsamRc&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bboxes=ckBfH7NP9baRyMA8&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=dd_azPZEzh1B&" + 
                    "showMetadata=4Ll&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/geometry
    * 2 - (400) POST:/contributions/geometry
    * 3 - (400) GET:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_916() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "bcircles=vYm5TzPkoKx&" + 
                    "bpolys=9oo5fOpar6L&" + 
                    "filter=5RVGAggj&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "time=MultiPolygon&" + 
                    "timeout=xtF8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/geometry?" + 
                    "bcircles=XpSs_nlxW5WSeEd&" + 
                    "clipGeometry=true&" + 
                    "filter=9Q8&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density/groupBy/boundary
    * 2 - (400) POST:/users/count/density/groupBy/boundary
    * 3 - (400) GET:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_917() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bcircles=lE6A87w&" + 
                    "bpolys=2uBuouAO1&" + 
                    "format=i58owaKWHVi")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bboxes=KPucglu&" + 
                    "bpolys=tTuYvRqSW&" + 
                    "filter=Qy&" + 
                    "format=Z0T55VwqSZf24&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bboxes=J&" + 
                    "bpolys=k8K&" + 
                    "contributionType=o2RGefOr&" + 
                    "filter=EXtAcpdR62Kj&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/type
    * 2 - (400) POST:/elements/count/groupBy/type
    * 3 - (400) GET:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_918() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bcircles=HTfNLpZUtteim3&" + 
                    "format=UxHsO&" + 
                    "showMetadata=jXam&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=PQshGtUjIIj&" + 
                    "bpolys=njorSA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=m&" + 
                    "bpolys=m&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=HwQqggCUlh&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elementsFullHistory/geometry
    * 2 - (400) POST:/elementsFullHistory/geometry
    * 3 - (400) GET:/elementsFullHistory/geometry
    */
    @Test(timeout = 60000)
    public void test_919() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bpolys=WE&" + 
                    "properties=VaBHHoWyEFhuI&" + 
                    "time=MultiPolygon&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "clipGeometry=hzgKLatgbYz&" + 
                    "filter=2nsO&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bboxes=wFyfsvT88Jg6&" + 
                    "bcircles=tepE4&" + 
                    "clipGeometry=true&" + 
                    "filter=bpqev2fL6GvZU&" + 
                    "properties=8VGrvN&" + 
                    "showMetadata=_4YT&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count
    * 2 - (400) POST:/contributions/count
    * 3 - (400) GET:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_920() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bcircles=2UQo2xs_a0Z_&" + 
                    "bpolys=uK1xLFKBA&" + 
                    "format=vLJFn7WDl9iQ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=QnpPSG&" + 
                    "bcircles=H&" + 
                    "bpolys=Nw1IlI3k&" + 
                    "contributionType=NjdFgg3lebMkb7SM&" + 
                    "format=R5&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count?" + 
                    "format=iyfSLltzd&" + 
                    "showMetadata=AA&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count
    * 2 - (400) POST:/elements/count
    * 3 - (400) GET:/elements/count
    */
    @Test(timeout = 60000)
    public void test_921() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count?" + 
                    "bcircles=WNI9&" + 
                    "filter=JjwCAeukQM0ZPEPR&" + 
                    "timeout=bZZ1lhFvZF9HwVY")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=En2&" + 
                    "bpolys=6yF76&" + 
                    "filter=mjzP&" + 
                    "format=mUxUmDONN6nwQ&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count?" + 
                    "bpolys=&" + 
                    "filter=type%3Away+and+natural%3D*")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density
    * 2 - (400) POST:/elements/length/density
    * 3 - (400) GET:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_922() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=IdjzSI3uiscFoU&" + 
                    "bpolys=_hK&" + 
                    "filter=hc_&" + 
                    "showMetadata=NTFPS")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=bM55B4FHMWkvX6&" + 
                    "format=5FX6g4ulJM&" + 
                    "time=MultiPolygon&" + 
                    "timeout=s_RCzqQu")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density?" + 
                    "bpolys=bPK3g9u1Nlro1pP&" + 
                    "format=json&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/ratio
    * 2 - (400) POST:/elements/area/ratio
    * 3 - (400) GET:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_923() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bcircles=tsjyB7337UFwIXmL&" + 
                    "filter2=ZGVpRE0Up&" + 
                    "format=Ay1NFi&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bboxes=k8P&" + 
                    "bcircles=f_mxogywjyVuoQ&" + 
                    "filter2=qEL2iSapkNfc8&" + 
                    "format=n31&" + 
                    "showMetadata=cyeNb8D8VdSZfae&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bboxes=Kv2dAD3EL&" + 
                    "bcircles=&" + 
                    "bpolys=76f_s&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=pf5&" + 
                    "format=u1EmRwh2kNL1&" + 
                    "showMetadata=x7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_924() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "filter2=GgQborE78tHVJ&" + 
                    "showMetadata=ZCBYhOXc3ylMIE&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bboxes=rAOgP&" + 
                    "bcircles=i0NEZMaiuYIj&" + 
                    "filter2=w3yi7qy1&" + 
                    "format=ZgOMK&" + 
                    "time=DP&" + 
                    "timeout=smmH6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bboxes=0KsStsFPDr&" + 
                    "bcircles=BZ5&" + 
                    "filter2=geometry%3Apolygon+and+building%3Dhouse&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/centroid
    * 2 - (400) POST:/contributions/latest/centroid
    * 3 - (400) GET:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_925() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=dU2oRmvCt0&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bcircles=wTB&" + 
                    "filter=Qrd5mTtT&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bcircles=op1M1YB&" + 
                    "bpolys=eGuah2HzxxD&" + 
                    "clipGeometry=true&" + 
                    "filter=y9iSwd&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/boundary
    * 2 - (400) POST:/elements/count/groupBy/boundary
    * 3 - (400) GET:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_926() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=eGfv&" + 
                    "bcircles=ofErD_IeinJSo&" + 
                    "filter=e&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bpolys=JZrxIg&" + 
                    "showMetadata=zbuIntp8XqM&" + 
                    "timeout=DsMcpeJcrTOr")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bcircles=E9&" + 
                    "format=OeTGd87&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/type
    * 2 - (400) POST:/elements/count/density/groupBy/type
    * 3 - (400) GET:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_927() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=IfMPg&" + 
                    "bcircles=9fwqrE6EDJmo&" + 
                    "bpolys=FrtjqGvOa9VkDr9&" + 
                    "format=pgcl4cL&" + 
                    "showMetadata=&" + 
                    "time=Lf3r8z3vDJbaHLK&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "filter=gkUYPA10eV&" + 
                    "format=WXIeN1cbLR&" + 
                    "showMetadata=wQF5O_41y5")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bcircles=abCAvGy&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "time=G2pyWi")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/length/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_928() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "format=l4Lcy0uJ2eAPVF7&" + 
                    "showMetadata=4&" + 
                    "time=6PZ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bcircles=_iFC&" + 
                    "filter2=Qbko3bLt3oM4yM&" + 
                    "format=VnhmrV5in07ir&" + 
                    "time=MultiPolygon&" + 
                    "timeout=ZEkC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bcircles=Nur5ky0&" + 
                    "format=json&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elementsFullHistory/bbox
    * 2 - (400) POST:/elementsFullHistory/bbox
    * 3 - (400) GET:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_929() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bcircles=&" + 
                    "clipGeometry=HRm4&" + 
                    "filter=K2BW99_mdksR&" + 
                    "properties=lWTB4VjU33yt&" + 
                    "showMetadata=N_dg&" + 
                    "time=MultiPolygon&" + 
                    "timeout=sjJd")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=fP5mnIlhlOZX&" + 
                    "bcircles=0yOYlmsGtqFi0kW&" + 
                    "bpolys=X6sg80p2uL&" + 
                    "filter=8ZAbiD24y2YvLZw&" + 
                    "properties=WlaE30&" + 
                    "time=MultiPolygon&" + 
                    "timeout=Pv9d87vM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=d7b&" + 
                    "bcircles=3WHtLKqqcuXVjl9&" + 
                    "bpolys=E&" + 
                    "clipGeometry=BAsTo5GH9kH&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=_Msd7LGFxyAZ9L&" + 
                    "showMetadata=kgyDi4MZHonH36&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/type
    * 2 - (400) POST:/elements/perimeter/groupBy/type
    * 3 - (400) GET:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_930() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bpolys=izCEK75mQMlnwAz4&" + 
                    "filter=A&" + 
                    "format=json&" + 
                    "time=qQ6Z2qeRfg&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bcircles=KJi&" + 
                    "bpolys=hitdzHCnyVCvRLf&" + 
                    "filter=Fl&" + 
                    "showMetadata=1a6fWlAH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=BBG&" + 
                    "filter=I02G7J4&" + 
                    "showMetadata=Dq8RbeBF&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/type
    * 2 - (400) POST:/elements/perimeter/density/groupBy/type
    * 3 - (400) GET:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_931() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=aSJzqc&" + 
                    "bcircles=Y0pWwASbcrfIH0nT&" + 
                    "bpolys=FcrjxlJknHWMy5s&" + 
                    "filter=QA&" + 
                    "showMetadata=FD32bS_6I8JS&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bcircles=MF1ays5SfgK&" + 
                    "bpolys=CEGe&" + 
                    "filter=PWhng8saH9prU&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "format=json&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count/groupBy/boundary
    * 2 - (400) POST:/contributions/count/groupBy/boundary
    * 3 - (400) GET:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_932() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bpolys=hAj&" + 
                    "filter=7xZ2K&" + 
                    "format=A7PRQKRXVeFu1mz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=&" + 
                    "bcircles=t8PlMQuQthV&" + 
                    "bpolys=n_X3YXr1ka&" + 
                    "filter=yifhskTHm&" + 
                    "format=y4&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=oO2Q3_Z3AsF&" + 
                    "contributionType=qq5V&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count
    * 2 - (400) POST:/users/count
    * 3 - (400) GET:/users/count
    */
    @Test(timeout = 60000)
    public void test_933() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bboxes=iHAMuuieqwhE2&" + 
                    "bcircles=oDyQpfrMAvpa&" + 
                    "bpolys=nJetAM14NfC&" + 
                    "filter=w4cO5Uo7&" + 
                    "format=mB_D&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bboxes=tG9GEuU&" + 
                    "bcircles=S71_r19n&" + 
                    "contributionType=Rse3mSGJjgEg&" + 
                    "filter=VtA1_3VONZDlp1&" + 
                    "format=csb54Qoa&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count?" + 
                    "bboxes=&" + 
                    "bcircles=V0PoY5BAA&" + 
                    "contributionType=pfYlYCb&" + 
                    "filter=lLA2JZmpmV61A&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/key
    * 2 - (400) POST:/elements/length/groupBy/key
    * 3 - (400) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_934() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "groupByKeys=QjODKhcUnm8&" + 
                    "showMetadata=JFKJq_n&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=LgyJns&" + 
                    "bcircles=JwXyd5t&" + 
                    "bpolys=JX&" + 
                    "groupByKeys=J26cNHphNfjvYph&" + 
                    "showMetadata=AhmrHvqOyQyI&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=l7aVKvSihM&" + 
                    "bpolys=9lnBNpxR&" + 
                    "filter=QqrW_g7JoGD1&" + 
                    "groupByKeys=wngbe5&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length
    * 2 - (400) POST:/elements/length
    * 3 - (400) GET:/elements/length
    */
    @Test(timeout = 60000)
    public void test_935() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=aay2QYjsI&" + 
                    "format=rD1TP6Qy&" + 
                    "showMetadata=ZhE5CWPwBjw&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=1xGRiq&" + 
                    "filter=q7sA&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=ZP3&" + 
                    "format=&" + 
                    "showMetadata=Er7NhUa&" + 
                    "time=MultiPolygon&" + 
                    "timeout=XWXy8Wj3GGAt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/area/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/area/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_936() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=z0ZP&" + 
                    "bcircles=tINMTq9wtD7&" + 
                    "filter=saHF9xhRS7E2&" + 
                    "showMetadata=tw7Ief9Jm")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bcircles=g&" + 
                    "bpolys=xF4q7z8FC&" + 
                    "filter2=5ttdY5xlZd&" + 
                    "showMetadata=266odmQ_nQXIYVA&" + 
                    "time=F5Kd2")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bcircles=pzvtxLKSPiw9R&" + 
                    "filter2=geometry%3Apolygon+and+building%3Dhouse&" + 
                    "format=eDFtx9r18BZmitO&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/bbox
    * 2 - (400) POST:/elements/bbox
    * 3 - (400) GET:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_937() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=BQY&" + 
                    "bcircles=P&" + 
                    "clipGeometry=&" + 
                    "properties=A94dzDcv9k&" + 
                    "time=MultiPolygon&" + 
                    "timeout=OrkIgFbr_AOHTS8w")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=j9ZsM3JXmvUN&" + 
                    "bpolys=oNRCbU3&" + 
                    "showMetadata=zjrEJrEIrXg&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/bbox?" + 
                    "bpolys=hGf8ux&" + 
                    "clipGeometry=tNbmRJP&" + 
                    "filter=ulgkrV8ajsD0&" + 
                    "properties=tags&" + 
                    "showMetadata=fjyD&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/key
    * 2 - (400) POST:/elements/perimeter/groupBy/key
    * 3 - (400) GET:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_938() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=1pTAcWpjweK&" + 
                    "bcircles=dUM3xuHsOYID49&" + 
                    "filter=HeUSjcYqMhoS&" + 
                    "groupByKeys=vZSDZ8jKRJoPxw&" + 
                    "showMetadata=vdPzrV4mP6K&" + 
                    "timeout=02XIjW8fXLBysxoT")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=dowW52rB7s8yeEuP&" + 
                    "groupByKeys=_YRbpJrnekHWHdQ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bboxes=&" + 
                    "bcircles=qDdYDaENaH&" + 
                    "bpolys=TZwTY2e&" + 
                    "filter=9CzdBK&" + 
                    "groupByKeys=building&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary
    * 2 - (400) POST:/elements/area/groupBy/boundary
    * 3 - (400) GET:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_939() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=fr7cq&" + 
                    "bcircles=AfWP2a&" + 
                    "showMetadata=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=M&" + 
                    "filter=rNsQnhspxE_MENNL&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bcircles=&" + 
                    "bpolys=7DpcMt8ymY9&" + 
                    "filter=3AUIBxiXDEAUt&" + 
                    "format=json&" + 
                    "showMetadata=HeW97R&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/boundary
    * 2 - (400) POST:/elements/count/density/groupBy/boundary
    * 3 - (400) POST:/elements/count/density/groupBy/boundary
    * 4 - (400) GET:/elements/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_940() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=uxP9XzRKiH&" + 
                    "format=F3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=t0LYLKS&" + 
                    "bcircles=D6CztXRXbM&" + 
                    "bpolys=rKzed&" + 
                    "format=6ZbEv7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bpolys=i9ti7rrq0Z&" + 
                    "filter=9kJYxhi&" + 
                    "showMetadata=PV9&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=8ImaKuQWIwrhQ8r&" + 
                    "bpolys=QbMOgR1&" + 
                    "format=X&" + 
                    "showMetadata=Gf&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/type
    * 2 - (400) POST:/users/count/groupBy/type
    * 3 - (400) GET:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_941() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=3a9TmHsfEK3Uj&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=cdm&" + 
                    "bcircles=T9ldk4gZEGs3&" + 
                    "contributionType=xQM8tv7oHfmxj&" + 
                    "format=9w")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bcircles=lNU939&" + 
                    "contributionType=XcU2&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=zQO&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/geometry
    * 2 - (400) POST:/contributions/geometry
    * 3 - (400) GET:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_942() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?time=G")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "bcircles=BG_PNhw&" + 
                    "properties=s26YM&" + 
                    "showMetadata=L4CV_g&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/geometry?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "clipGeometry=YRktodLc5aXg1L&" + 
                    "properties=WmMSj20d5lK&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'contributionTypes' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count
    * 2 - (400) POST:/elements/count
    * 3 - (400) GET:/elements/count
    */
    @Test(timeout = 60000)
    public void test_943() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=220kuyrcnE&" + 
                    "bpolys=I7zEnsy&" + 
                    "filter=5ma87JI4jqht&" + 
                    "showMetadata=NPf0&" + 
                    "time=MultiPolygon&" + 
                    "timeout=cNZ1g8wc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count?" + 
                    "bcircles=hUyb1Sl1f&" + 
                    "format=HXFtveb5bsIXfbfF&" + 
                    "time=x3Q6ju")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=77sm_8bPU&" + 
                    "bcircles=hP9Qhg3B&" + 
                    "bpolys=qY__GaOm2&" + 
                    "filter=&" + 
                    "showMetadata=_nAi2u&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/geometry
    * 2 - (400) POST:/elements/geometry
    * 3 - (400) GET:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_944() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "bcircles=l&" + 
                    "properties=&" + 
                    "showMetadata=IZ5ZYI6mPqfCy&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=Zc3sRJFzu3CekUI&" + 
                    "clipGeometry=nX1hENQwK0W_H&" + 
                    "properties=Vzn2g9eMi5ZEoaG&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bcircles=hBpdgEWpB2W8RU&" + 
                    "clipGeometry=true&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/ratio
    * 2 - (400) POST:/elements/perimeter/ratio
    * 3 - (400) GET:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_945() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=icQpjcFnS&" + 
                    "filter=eb5ZzQ&" + 
                    "filter2=AD3fzmJz8YO&" + 
                    "time=MultiPolygon&" + 
                    "timeout=n")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=H&" + 
                    "bpolys=hx159pdNflIDTdu0&" + 
                    "filter=j8nBapMJZ_Lj&" + 
                    "showMetadata=bA_Gx")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=zvj3s4XG4z&" + 
                    "bpolys=&" + 
                    "filter=u4GDCZx67abb&" + 
                    "filter2=geometry%3Apolygon+and+building%3Dhouse&" + 
                    "format=ZTnYq3sb&" + 
                    "time=MultiPolygon&" + 
                    "timeout=R_ufUAaxesq1d")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/key
    * 2 - (400) POST:/elements/length/groupBy/key
    * 3 - (400) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_946() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=InFuT5m3&" + 
                    "bcircles=dBl_&" + 
                    "groupByKeys=T_cm2&" + 
                    "showMetadata=Wf&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=un1zmxM9&" + 
                    "format=JWmQGWwgC&" + 
                    "groupByKeys=Rm1t2EDmFSi6A&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bcircles=31_BpvwmgoWc&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=By25gmTH28qeTVcq&" + 
                    "groupByKeys=vm_LENcWTTsknrG&" + 
                    "time=MultiPolygon&" + 
                    "timeout=Qd4dt054wIkgQ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/length/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_947() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "filter=_sGDHxF&" + 
                    "format=LYgMb9")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bcircles=UR1j4&" + 
                    "bpolys=SuyINd2xIPMQW&" + 
                    "filter=fTg1SgX2xS2&" + 
                    "filter2=QFb4juMeC&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter2=2Awhw&" + 
                    "format=H21VlgE&" + 
                    "time=MultiPolygon&" + 
                    "timeout=TG94y9GYnjn0np")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/bbox
    * 2 - (400) POST:/elements/bbox
    * 3 - (400) GET:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_948() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "filter=DZeCwn3hCgTOR&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=Ut0&" + 
                    "bcircles=mA_r&" + 
                    "bpolys=poNw&" + 
                    "properties=T&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=X6k7NA&" + 
                    "bpolys=b_aBA0hkOOZ&" + 
                    "clipGeometry=tDOa4INgI9Yr8h&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=QfCfnVlX9Vo7p98t&" + 
                    "showMetadata=wICNReWhevrV5&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_949() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=C_COxRRI&" + 
                    "bcircles=Vm2C&" + 
                    "bpolys=zSeyp2H79&" + 
                    "groupByKey=w8EkpQNC7uZRe&" + 
                    "showMetadata=EeeJKqTlx_Xdo7at&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=WKDNL&" + 
                    "bcircles=&" + 
                    "bpolys=bQw5phBY7ms3OGD&" + 
                    "groupByKey=Zj1zF6JuSzWP&" + 
                    "groupByValues=8797443.19")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=8&" + 
                    "bpolys=JfV6HsYuhv8yo&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=KUa9sB2&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=L13SFLB&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count
    * 2 - (400) POST:/users/count
    * 3 - (400) GET:/users/count
    */
    @Test(timeout = 60000)
    public void test_950() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bcircles=_gXPw&" + 
                    "bpolys=dZdqZ3uJ&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=JxA_6Zd&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bcircles=3S1hjESgis&" + 
                    "bpolys=&" + 
                    "contributionType=g17&" + 
                    "filter=5NmNZo&" + 
                    "format=2aId&" + 
                    "showMetadata=Cgox16gDtY&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count?" + 
                    "bboxes=0Uh_&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=oF0f")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count
    * 2 - (400) POST:/users/count
    * 3 - (400) GET:/users/count
    */
    @Test(timeout = 60000)
    public void test_951() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bpolys=xBp4&" + 
                    "format=p&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bpolys=&" + 
                    "filter=fS0vV&" + 
                    "showMetadata=eJ3iCY&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count?" + 
                    "bboxes=qvopqWnOtnAsFV&" + 
                    "bpolys=aBP6aaZCSa&" + 
                    "showMetadata=p&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/count
    * 2 - (400) POST:/contributions/latest/count
    * 3 - (400) GET:/contributions/latest/count
    */
    @Test(timeout = 60000)
    public void test_952() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=fPAWPTx&" + 
                    "bpolys=FSKUHXeGhwt6p6&" + 
                    "filter=SJrW1N7rK3sDgm&" + 
                    "format=7t1EH5P4j44ubL&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bcircles=L8I_Zvq4V6e&" + 
                    "format=nPIJyS_gETVpCe&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "contributionType=bmXjJqp&" + 
                    "format=PSG505htlDGkoOe&" + 
                    "showMetadata=u")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density
    * 2 - (400) POST:/users/count/density
    * 3 - (400) GET:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_953() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=xz7VjZ6j&" + 
                    "bcircles=Qq4nLUTVHHHyc_8I&" + 
                    "contributionType=MkVmAZQzG&" + 
                    "format=DGLuJt&" + 
                    "showMetadata=ZTA3oWZ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bcircles=MTyiP&" + 
                    "filter=M4TpU8YcGaOs&" + 
                    "format=WrCbjuRDfC5pU2J&" + 
                    "showMetadata=VNStkCF6hBy5qxu&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=8iOdtG36sa&" + 
                    "bpolys=fy_fQUj5yfh&" + 
                    "contributionType=VRTZ3qr7&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=HMmg&" + 
                    "showMetadata=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/count/density
    * 2 - (400) POST:/contributions/latest/count/density
    * 3 - (400) GET:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_954() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=45KrpYXlV&" + 
                    "contributionType=ybVzVM3GRoe_&" + 
                    "format=&" + 
                    "showMetadata=rw5qoKRbmvGMi&" + 
                    "timeout=LWlpGq5jDq9ZbftA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=HoKsyEKYXJke1sx&" + 
                    "bcircles=ivBBRthnnqI34Z&" + 
                    "format=tpioWZ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "contributionType=jLenfDFfO&" + 
                    "format=R8zOkS_GrXmNprQe&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count/groupBy/boundary
    * 2 - (400) POST:/contributions/count/groupBy/boundary
    * 3 - (400) GET:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_955() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "contributionType=PnSi4W&" + 
                    "format=IJfoWiMi6T0NwAvu&" + 
                    "showMetadata=HVS&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=admob&" + 
                    "contributionType=&" + 
                    "filter=hd42Xe")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "contributionType=7JgZJXhoGNMBUu&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=UQH1mQbE8C&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/count/density
    * 2 - (400) POST:/contributions/latest/count/density
    * 3 - (400) GET:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_956() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "contributionType=B9GQSr&" + 
                    "format=VorwkI&" + 
                    "showMetadata=Z&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=0L8&" + 
                    "bpolys=L8yk0NhI_D&" + 
                    "contributionType=6ABdGv71Nyc1wwE&" + 
                    "showMetadata=FRWf0q4_0dA58C4a&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bcircles=&" + 
                    "bpolys=p_f&" + 
                    "contributionType=b2Z2tpB_&" + 
                    "filter=jKPU9_VWZIOHktTR&" + 
                    "format=json&" + 
                    "showMetadata=F28biV6&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary
    * 2 - (400) POST:/elements/area/groupBy/boundary
    * 3 - (400) GET:/elements/area/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_957() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "filter=&" + 
                    "format=fraO3HqOr&" + 
                    "showMetadata=G&" + 
                    "time=MultiPolygon&" + 
                    "timeout=jm")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bcircles=8G3jelj8&" + 
                    "bpolys=_6W")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=kw&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=D6mnV_6I5nk4FZo&" + 
                    "showMetadata=Wz&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/key
    * 2 - (400) POST:/elements/length/groupBy/key
    * 3 - (400) GET:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_958() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bcircles=AGXwyDu9cxogb&" + 
                    "groupByKeys=Y6EkDYPbwgJx&" + 
                    "showMetadata=hNhcFOka2&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=_s6ptgL_m&" + 
                    "bcircles=6LLoy26KER&" + 
                    "filter=bHXAqdsF1GJ&" + 
                    "format=&" + 
                    "groupByKeys=duFUkBjqORua9KL")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=UjKm7SvUWJDd&" + 
                    "format=PqCjk1Moqs&" + 
                    "groupByKeys=highway&" + 
                    "showMetadata=yrgjL1&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/tag
    * 3 - (400) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_959() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=8OizXBuwTy70PYrD&" + 
                    "bcircles=&" + 
                    "filter=&" + 
                    "format=2ktJV4J&" + 
                    "groupByKey=MQpX54c3&" + 
                    "groupByValues=3367.16&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=V0g4nVTO7C13kpii&" + 
                    "bpolys=&" + 
                    "filter=mGGiShTCK2PFOgpI&" + 
                    "format=7HnwiWX4wG&" + 
                    "groupByKey=9d49B5Y&" + 
                    "groupByValues=3367.16&" + 
                    "showMetadata=pS9&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=ZTkg&" + 
                    "bcircles=J7_VteohwfcEv4G&" + 
                    "filter=TlMNayBQI8xxG&" + 
                    "format=json&" + 
                    "groupByKey=HVSoPlf&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=hA2WAaSElHgqO_E&" + 
                    "time=orWgLt4fcq3Tbp&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_960() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=shJFc&" + 
                    "groupByKey=y0HxUyzbwPQ&" + 
                    "groupByValues=0.0&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=eXgR8XZ6&" + 
                    "bpolys=dUD3T9&" + 
                    "filter=D7pSJ5ylBSDngQTM&" + 
                    "groupByKey=r&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=PFQnlfdzYva&" + 
                    "bpolys=TXuEPeWf1MGs2tvp&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=lLAXHnBBXdZGe&" + 
                    "groupByValues=743636.1&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/bbox
    * 2 - (400) POST:/elements/bbox
    * 3 - (400) GET:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_961() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "filter=FUy0mE7As&" + 
                    "properties=tags&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "bcircles=fLng9SEhs&" + 
                    "clipGeometry=DA&" + 
                    "filter=c4IkseR8u7Za&" + 
                    "showMetadata=3ibuz6n4&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/bbox?" + 
                    "bcircles=1fUg3UoOCcO91&" + 
                    "bpolys=KZQSZgU&" + 
                    "clipGeometry=true&" + 
                    "filter=INus8DPR4QbN&" + 
                    "showMetadata=Syv&" + 
                    "time=BTtR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_962() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "groupByKey=4wNrruyPz&" + 
                    "showMetadata=N1bK3fy&" + 
                    "time=EhkjC4bB&" + 
                    "timeout=WE9_0QLyNo")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=ayPKoK9&" + 
                    "filter=6zHqRB&" + 
                    "groupByKey=iiggF7w3k&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=VU8G6&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=27DqDGTE&" + 
                    "bpolys=EikdeMY0a&" + 
                    "filter=9&" + 
                    "format=json&" + 
                    "groupByKey=7rYAnX&" + 
                    "groupByValues=61015.69&" + 
                    "showMetadata=uaNQXg")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/tag
    * 2 - (400) POST:/elements/count/groupBy/tag
    * 3 - (400) GET:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_963() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=zPMM&" + 
                    "bcircles=1NKr7rzh995Naqr&" + 
                    "filter=1GsV7H&" + 
                    "groupByKey=T81__lB&" + 
                    "time=MultiPolygon&" + 
                    "timeout=8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bcircles=&" + 
                    "filter=Yd&" + 
                    "format=q&" + 
                    "groupByKey=PPbluf0Jf8JXwM&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=J&" + 
                    "bpolys=qb4lwVlF&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=building&" + 
                    "time=2r593XYgXdNv&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density
    * 2 - (400) POST:/elements/count/density
    * 3 - (400) GET:/elements/count/density
    */
    @Test(timeout = 60000)
    public void test_964() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=4la1jkx6x1Zer&" + 
                    "bpolys=sqBWtqqdPW6Y62&" + 
                    "format=json&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bcircles=n&" + 
                    "bpolys=yJIQtkys3k&" + 
                    "filter=zlcECm9&" + 
                    "format=eqv&" + 
                    "showMetadata=ilJSALx2y84ENX&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density?" + 
                    "bcircles=N&" + 
                    "bpolys=Ib7D9QeFi&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=lSj62AktK&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/boundary
    * 2 - (400) POST:/elements/count/groupBy/boundary
    * 3 - (400) GET:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_965() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=bqGD4csiwBycso&" + 
                    "bcircles=3GMp&" + 
                    "bpolys=VI&" + 
                    "format=G0WDO_5f5&" + 
                    "showMetadata=3m32Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=1HW_&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elementsFullHistory/bbox
    * 2 - (400) POST:/elementsFullHistory/bbox
    * 3 - (400) GET:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_966() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=C5HIAR5uO3&" + 
                    "showMetadata=FiJ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bpolys=b2z923BcPt&" + 
                    "clipGeometry=4yyk7wX&" + 
                    "filter=5g4JCHtj&" + 
                    "properties=p&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=7Zb0Cr&" + 
                    "bcircles=2QtS0lSX2RsIUoMc&" + 
                    "filter=CUg&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/bbox
    * 2 - (400) POST:/contributions/latest/bbox
    * 3 - (400) GET:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_967() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bboxes=ZHKi&" + 
                    "clipGeometry=xu7__CsS&" + 
                    "filter=ZUHsax&" + 
                    "properties=XxOmL8s&" + 
                    "showMetadata=8KP&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bboxes=5xg8wzQDA4x&" + 
                    "bcircles=AD90&" + 
                    "properties=Mjryr5dO4N0&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bcircles=l8yIHBH7LS&" + 
                    "bpolys=D0&" + 
                    "clipGeometry=cT0jeW_e3E&" + 
                    "filter=EyfUJ3jjxwCjgzq&" + 
                    "properties=tags&" + 
                    "showMetadata=6rR&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/geometry
    * 2 - (400) POST:/elements/geometry
    * 3 - (400) GET:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_968() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=xXbk7E0sh1OGn&" + 
                    "bcircles=cHvU7_6g&" + 
                    "filter=yb&" + 
                    "time=QU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "clipGeometry=Kf5hOlHuX&" + 
                    "filter=kR2I&" + 
                    "properties=_0l3pWY02BavKk&" + 
                    "showMetadata=83VDJjpdW1&" + 
                    "time=MultiPolygon&" + 
                    "timeout=_K")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=VA4j&" + 
                    "bcircles=uMUPXxF8_r3z2c&" + 
                    "bpolys=&" + 
                    "clipGeometry=TAmTFF&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=ZmRFhOgW&" + 
                    "showMetadata=sGNV3&" + 
                    "time=&" + 
                    "timeout=0lTmsz1NVpA0xK8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/tag
    * 2 - (400) POST:/elements/length/density/groupBy/tag
    * 3 - (400) GET:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_969() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bcircles=ltboV&" + 
                    "filter=PehHlGBuyuDlVUeo&" + 
                    "format=iEJ3aLx5z&" + 
                    "groupByKey=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=8ygi2Pn")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=6xl&" + 
                    "filter=nwW1vRr&" + 
                    "format=3C&" + 
                    "groupByKey=m&" + 
                    "groupByValues=&" + 
                    "showMetadata=1tHSndfu&" + 
                    "time=MultiPolygon&" + 
                    "timeout=S")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=_&" + 
                    "filter=yX&" + 
                    "format=ym5uIPPm&" + 
                    "groupByKey=3ZD&" + 
                    "groupByValues=743636.1&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/geometry
    * 2 - (400) POST:/elements/geometry
    * 3 - (400) GET:/elements/geometry
    */
    @Test(timeout = 60000)
    public void test_970() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "bcircles=5djpoEw&" + 
                    "filter=ctbodqCwY&" + 
                    "time=MultiPolygon&" + 
                    "timeout=pUl4hp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=5hX5m82LY8ZViM&" + 
                    "bpolys=p2R20vETJ&" + 
                    "showMetadata=o1zb02KB2ctw&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=tEttsb&" + 
                    "bpolys=&" + 
                    "filter=NdBovyoU1O&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/key
    * 2 - (400) POST:/elements/area/groupBy/key
    * 3 - (400) GET:/elements/area/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_971() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bcircles=MPd1ibDk8cwU0&" + 
                    "bpolys=UgPtzdZj0x2Zu4wS&" + 
                    "format=&" + 
                    "groupByKeys=Q1ToDtoNVh_4BV1D&" + 
                    "showMetadata=iHs5PnO&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bcircles=9DI7VAfpBE12Xv&" + 
                    "groupByKeys=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bcircles=7eB6KZ5my&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKeys=lQk9Q&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/count/density
    * 2 - (400) POST:/contributions/latest/count/density
    * 3 - (400) GET:/contributions/latest/count/density
    */
    @Test(timeout = 60000)
    public void test_972() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=znjVQlmLI&" + 
                    "filter=uG5M1ovy&" + 
                    "format=json&" + 
                    "showMetadata=UW&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bcircles=3Iw5NdPk2h&" + 
                    "contributionType=dSAWv&" + 
                    "filter=vH3&" + 
                    "format=75nXmbLZ4K&" + 
                    "time=P9WCa5Jb")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count/density?" + 
                    "bboxes=_8&" + 
                    "bpolys=QIq6M&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/centroid
    * 2 - (400) POST:/contributions/centroid
    * 3 - (400) GET:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_973() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=2rRz1N38_MW6m&" + 
                    "clipGeometry=DwldPEGGQB&" + 
                    "filter=Qj&" + 
                    "properties=tEfd_&" + 
                    "showMetadata=DQOCweP_Tn6&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "bpolys=5EclJtF3If9CSRoL&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=vik7nhGVjFyYktMk&" + 
                    "bcircles=2SkSPLzwIfVIa7yM&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/geometry
    * 2 - (400) POST:/contributions/latest/geometry
    * 3 - (400) GET:/contributions/latest/geometry
    */
    @Test(timeout = 60000)
    public void test_974() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "properties=&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=V")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bcircles=3VqgPtezypINi&" + 
                    "bpolys=7&" + 
                    "filter=0In&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=cTQ&" + 
                    "bpolys=KyXSpBDlC_&" + 
                    "clipGeometry=nZJPf5Pnd34&" + 
                    "filter=0q1yp6_KcHqao1ww&" + 
                    "properties=nn_JkzxY2H&" + 
                    "showMetadata=owLFu_1leC&" + 
                    "time=ebMRKuuJ1YyubsA&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/geometry
    * 2 - (400) POST:/contributions/latest/geometry
    * 3 - (400) GET:/contributions/latest/geometry
    */
    @Test(timeout = 60000)
    public void test_975() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bboxes=&" + 
                    "showMetadata=L9495YR6m89&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=2eYKpIbVQFBKn&" + 
                    "bpolys=&" + 
                    "filter=7vR2a5_pt&" + 
                    "properties=x7R5X111wGHw6e93&" + 
                    "time=G8IBx3i_uxx&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bpolys=PFVf4HO_D&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=qjno&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/centroid
    * 2 - (400) POST:/elements/centroid
    * 3 - (400) GET:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_976() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bpolys=Arvv90_BqT&" + 
                    "clipGeometry=QI&" + 
                    "filter=mW8UQEikoSL&" + 
                    "time=w_p&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=1IyDIWOMUoE&" + 
                    "bpolys=YgQOoefuZt_LF&" + 
                    "properties=SaVow&" + 
                    "showMetadata=VnoqkTc&" + 
                    "time=4aFZ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=uaccepOs0bzB&" + 
                    "filter=&" + 
                    "properties=&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/bbox
    * 2 - (400) POST:/elements/bbox
    * 3 - (400) GET:/elements/bbox
    */
    @Test(timeout = 60000)
    public void test_977() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "bpolys=xIo5hpjO6345oQVl&" + 
                    "properties=COZSPptFkjs0&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=nJDkoV_t&" + 
                    "bcircles=io&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "clipGeometry=w_rSECl&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/centroid
    * 2 - (400) POST:/contributions/centroid
    * 3 - (400) GET:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_978() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=UM&" + 
                    "bcircles=fDBB75njhDQKhL&" + 
                    "bpolys=dizlhBsebnE&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "bcircles=c38qnPOeDu&" + 
                    "clipGeometry=true&" + 
                    "properties=4B&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/centroid?" + 
                    "bpolys=cVKm6uejj0&" + 
                    "clipGeometry=true&" + 
                    "filter=_aFqaMnnE5ePLJ&" + 
                    "properties=2xcdgZA319o&" + 
                    "showMetadata=gGbmzL43lC6lN9&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/key
    * 2 - (400) POST:/elements/count/groupBy/key
    * 3 - (400) POST:/elements/count/groupBy/key
    * 4 - (400) GET:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_979() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=UaKadctxx07NLJ&" + 
                    "bpolys=IdLo0EvfuQO7OY&" + 
                    "format=m&" + 
                    "groupByKeys=building&" + 
                    "showMetadata=DjdFmy52RI&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=0oCgz2Itr&" + 
                    "filter=__&" + 
                    "format=nNhbZbjFqiciIF&" + 
                    "groupByKeys=uZRY33YI5G&" + 
                    "showMetadata=kd64Z4JO2z1VhM1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=Lgu&" + 
                    "bcircles=HgcXVTCCBt&" + 
                    "bpolys=u7O1&" + 
                    "format=i1aB7F&" + 
                    "groupByKeys=upy2X")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=Ody63qGgDmWt1ff&" + 
                    "bcircles=p9B_CuE&" + 
                    "format=json&" + 
                    "groupByKeys=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/type
    * 2 - (400) POST:/elements/count/groupBy/type
    * 3 - (400) GET:/elements/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_980() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bboxes=tKC5TPjXUmRDTW4&" + 
                    "bpolys=pBLIX0Qh&" + 
                    "format=q9QULdTh&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bcircles=8vMGLQcfB9&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=zR1qkkKxisP_&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bcircles=lX6S3r&" + 
                    "bpolys=BkUvWnUsS_B_G2&" + 
                    "filter=yoLbHxvZC3&" + 
                    "format=json&" + 
                    "showMetadata=oL5Yeyne&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/centroid
    * 2 - (400) POST:/elements/centroid
    * 3 - (400) GET:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_981() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=imu2931D&" + 
                    "bcircles=3h8cq9vKAceru_VR&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=yIMgti7Dfs&" + 
                    "bpolys=7&" + 
                    "filter=LnQd3f&" + 
                    "properties=uITEZDSPZML&" + 
                    "showMetadata=QS_y&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=EWM85Ps0H_00Tqo&" + 
                    "bpolys=K3hdSVNj2DFs&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=cmP&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elementsFullHistory/bbox
    * 2 - (400) POST:/elementsFullHistory/bbox
    * 3 - (400) GET:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_982() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=yTkR9kr4sQ3l&" + 
                    "bpolys=GHyzHU7BUQ1RB&" + 
                    "clipGeometry=1aqQnG&" + 
                    "properties=&" + 
                    "showMetadata=CAOmE&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=7KbZuD&" + 
                    "bcircles=&" + 
                    "filter=Z8_p0fySTqQ3Cd8&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=&" + 
                    "bcircles=Yqm9z&" + 
                    "properties=tags&" + 
                    "showMetadata=3teC&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary
    * 2 - (400) POST:/elements/length/groupBy/boundary
    * 3 - (400) POST:/elements/length/groupBy/boundary
    * 4 - (400) GET:/elements/length/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_983() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=DhuzaeSn9m93_&" + 
                    "bpolys=N7B53KXQRSc&" + 
                    "filter=LrhbIX3B")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=NCOXuM0b3vkV&" + 
                    "bcircles=Chqd&" + 
                    "showMetadata=YAfznpy6WaqgB&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bpolys=gNrplvwp&" + 
                    "filter=Zt3r2x1Eqfn&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=O4zf4WeFaUoeN&" + 
                    "format=JlTcYg9Cz2P67&" + 
                    "showMetadata=lx8DiHeXJxpO&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_984() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=cmPCQ9cBy&" + 
                    "filter=lBItTQiybU&" + 
                    "groupByKey=zsKlgsdCK1wf&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=sKum")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=4qDmfn8GnE3&" + 
                    "format=auHhLRUA&" + 
                    "groupByKey=N&" + 
                    "groupByValues=noXsK8yf7Wkbvgcf&" + 
                    "showMetadata=uYBxkf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "format=json&" + 
                    "groupByKey=vmy&" + 
                    "showMetadata=x&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/centroid
    * 2 - (400) POST:/contributions/latest/centroid
    * 3 - (400) GET:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_985() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bcircles=EZNKBxmL0XDWVIr&" + 
                    "bpolys=FobyKwDGeITnOFU&" + 
                    "clipGeometry=tCIlUV&" + 
                    "filter=Yo_weMK7Ho&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=X9KX&" + 
                    "bpolys=T&" + 
                    "properties=ZF7dkXQu&" + 
                    "showMetadata=h5PbEQUK99BwzIJB&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=&" + 
                    "bcircles=tc&" + 
                    "clipGeometry=s&" + 
                    "filter=XSjzmO8drXRpwn&" + 
                    "properties=tags&" + 
                    "showMetadata=WzQeYA&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/count/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_986() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=BH1iGJLAqmqq&" + 
                    "format=ArW2NnQdwvp&" + 
                    "showMetadata=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=6Zqk_dkDpjxRAWoR&" + 
                    "filter=b1RmDt&" + 
                    "filter2=jS1mukWseyzo9mPE&" + 
                    "format=s&" + 
                    "showMetadata=f0uG&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bpolys=W&" + 
                    "filter2=uPZSF&" + 
                    "format=json&" + 
                    "time=MultiPolygon&" + 
                    "timeout=zDnOHhuoMeKHE")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count
    * 2 - (400) POST:/users/count
    * 3 - (400) GET:/users/count
    */
    @Test(timeout = 60000)
    public void test_987() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=SF85fbS&" + 
                    "contributionType=Xx&" + 
                    "format=saQXqaDp22o8NOf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bboxes=DnKHZe&" + 
                    "contributionType=xO6D02KZyZ1c&" + 
                    "filter=5uMj&" + 
                    "format=HRHLqaVmC1n7QNkp&" + 
                    "showMetadata=TmIO&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=cbt4bYH&" + 
                    "filter=CHn2NJag4rZ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/geometry
    * 2 - (400) POST:/contributions/geometry
    * 3 - (400) GET:/contributions/geometry
    */
    @Test(timeout = 60000)
    public void test_988() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "bboxes=jr_MqenECi0Kbz&" + 
                    "bcircles=cRxfeAqY&" + 
                    "bpolys=nbwdLnLuiSRP&" + 
                    "properties=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/geometry?" + 
                    "clipGeometry=true&" + 
                    "filter=6xok9BSSl2uAhm&" + 
                    "properties=KC&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/geometry?" + 
                    "clipGeometry=or5CV5B&" + 
                    "properties=tags&" + 
                    "time=F")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/bbox
    * 2 - (400) POST:/contributions/latest/bbox
    * 3 - (400) GET:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_989() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bcircles=0FoY&" + 
                    "properties=S6Sp3Fr2EW&" + 
                    "showMetadata=v9_nsdmvzm0K_w&" + 
                    "time=mctii_sF&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bboxes=WszqUjIn3x&" + 
                    "bpolys=fSo1&" + 
                    "filter=uuMIGiZKH824T&" + 
                    "properties=ADPa2rKrB&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bpolys=YR&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "properties=1MMyS&" + 
                    "showMetadata=ynmz&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/bbox
    * 2 - (400) POST:/contributions/bbox
    * 3 - (400) GET:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_990() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=kmKf9KDi01KXr5&" + 
                    "filter=2af1Pf&" + 
                    "showMetadata=9URVRKMW_s&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=p2XG6b2u1TR_jp&" + 
                    "bcircles=0dYhRyrY_&" + 
                    "clipGeometry=YPSFQv&" + 
                    "properties=r7h69lCXs6&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/bbox?" + 
                    "bpolys=GoA5G0DDElk7S&" + 
                    "clipGeometry=true&" + 
                    "properties=S8wl4&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count
    * 2 - (400) POST:/contributions/count
    * 3 - (400) GET:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_991() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=B&" + 
                    "bcircles=3Ar08j_gyIOVeXaq&" + 
                    "contributionType=CzGUzVDPxibU&" + 
                    "filter=BbggI021c&" + 
                    "format=NIQo0gbj&" + 
                    "showMetadata=66BGVvn")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bcircles=eiFxulNNXLtyF0&" + 
                    "bpolys=FZmY7h2U2g&" + 
                    "format=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "contributionType=kuU0sIxsgTE1wdJf&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=oXkJ_Py_K0QxuhZu&" + 
                    "showMetadata=QVVnF&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_992() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=6pt&" + 
                    "bpolys=3q&" + 
                    "format=NrxV&" + 
                    "groupByKey=0PPDIX&" + 
                    "showMetadata=n7G5Vx7&" + 
                    "time=KaUsEEyub7kCT")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=n7zTnrVMd&" + 
                    "filter=ZbrZG3&" + 
                    "groupByKey=a2oAm&" + 
                    "showMetadata=UIEz_Z")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=QdD4RpcDubQty1&" + 
                    "bpolys=bMHmoft&" + 
                    "filter=GFhvZQmnuXMFI4I&" + 
                    "format=json&" + 
                    "groupByKey=2jOYx_q3Y8ZYX&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=XH_oE83f_XRC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_993() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=0u&" + 
                    "groupByKey=QmeUwT7L__MQNt&" + 
                    "groupByValues=743636.1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=6z&" + 
                    "filter=W&" + 
                    "groupByKey=una_n89&" + 
                    "groupByValues=dse")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Pkb_4&" + 
                    "bpolys=&" + 
                    "groupByKey=59ajVH1JP")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/tag
    * 3 - (400) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_994() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bpolys=ydVG7&" + 
                    "groupByKey=building&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=rU3m&" + 
                    "bpolys=u&" + 
                    "format=GLnFHPkIXeYR2eU&" + 
                    "groupByKey=NL6rp0k7VrPV&" + 
                    "groupByValues=3.737603603E7&" + 
                    "showMetadata=3DXOrsTDc9uY&" + 
                    "time=1K")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=zxjFmpZKSm&" + 
                    "filter=5A79VYpt&" + 
                    "groupByKey=Jq9JTXkRmqB2LFrn&" + 
                    "groupByValues=130239.01&" + 
                    "time=MultiPolygon&" + 
                    "timeout=7ACVhO_4ioU1d")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_995() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=OQp9E0yHGnMQg4&" + 
                    "bcircles=lZlvN4m&" + 
                    "format=ZTmY&" + 
                    "groupByKey=3FWZTtdzqfd&" + 
                    "groupByValues=0.0&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=nwlJ6fhSTZru&" + 
                    "filter=ntws&" + 
                    "format=fL0F0&" + 
                    "groupByKey=FPKtqw7Mt2Ff2SZ7&" + 
                    "groupByValues=3.737603603E7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=_M3lbXAz8_pErNF&" + 
                    "bpolys=&" + 
                    "filter=Hyhi94JDehduCK&" + 
                    "groupByKey=hmtlVWkWkNk&" + 
                    "showMetadata=IggN55UAu&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/bbox
    * 2 - (400) POST:/contributions/bbox
    * 3 - (400) GET:/contributions/bbox
    */
    @Test(timeout = 60000)
    public void test_996() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=&" + 
                    "bpolys=&" + 
                    "filter=ssgokU&" + 
                    "properties=LQbYq&" + 
                    "showMetadata=&" + 
                    "time=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=1kYgGHs3UHmp&" + 
                    "bcircles=wA6McR_qm4&" + 
                    "clipGeometry=rhjGu47CSYmr&" + 
                    "showMetadata=QywTaF1Bi51&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/bbox?" + 
                    "bpolys=&" + 
                    "filter=nh6wl0QaN&" + 
                    "properties=tags&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count
    * 2 - (400) POST:/contributions/count
    * 3 - (400) GET:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_997() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=&" + 
                    "bcircles=HUernDyZmyQ&" + 
                    "filter=9h7Kys_C0Gha&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=pX9iKt&" + 
                    "bcircles=&" + 
                    "bpolys=3O3&" + 
                    "contributionType=5&" + 
                    "format=6BP&" + 
                    "showMetadata=O_8dXp&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=4O4VSAx&" + 
                    "bpolys=Uler3gr&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_998() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=Or_f9ECwG&" + 
                    "bcircles=EHm84fEx&" + 
                    "bpolys=VuhaJdr8s3&" + 
                    "filter=CdHibxBPAyNZwOPS&" + 
                    "groupByKey=ee2vNDlZNGKr&" + 
                    "groupByValues=Ud3VDRcF&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=HTchHq8y&" + 
                    "bpolys=4xu&" + 
                    "filter=TXe5QUI0z0Rk&" + 
                    "groupByKey=Xdf7gnC8m1gn&" + 
                    "showMetadata=Cp2OZG33s&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "filter=gE0iSMbxnw&" + 
                    "format=fHjqk6cf1_Qdn0&" + 
                    "groupByKey=uA2v_WXqWSQX0d&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 3 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 4 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 5 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 6 - (400) GET:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_999() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bpolys=PN&" + 
                    "format=UxouzgSomyFkBPX&" + 
                    "showMetadata=PPAK2X")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=YIt&" + 
                    "bcircles=5CsOYa0_PZ6&" + 
                    "showMetadata=L5Be&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=Rkj7uA4IjHDKE4&" + 
                    "bcircles=XCS&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=t3Q3tw1S8idpH&" + 
                    "showMetadata=0WaqaqGiZKpYXCke&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bcircles=y6a3MVfBUfEi1vvg&" + 
                    "format=QatQH1i&" + 
                    "showMetadata=00LuCsYMMHEoE&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=HNclRX&" + 
                    "filter=_dIYcftBGd_U&" + 
                    "showMetadata=YLVoaKhN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bcircles=T_ugqZf&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count/density
    * 2 - (400) POST:/contributions/count/density
    * 3 - (400) GET:/contributions/count/density
    */
    @Test(timeout = 60000)
    public void test_1000() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=&" + 
                    "bpolys=i4p5ZX1GmfEQAscm&" + 
                    "contributionType=&" + 
                    "showMetadata=2g&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density?" + 
                    "bcircles=&" + 
                    "filter=6bjopSvC3Knaqn&" + 
                    "format=fuMulzMZ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=6lo&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=wvcb8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count
    * 2 - (400) POST:/contributions/count
    * 3 - (400) GET:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_1001() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=0PrPibvbuWRCy_l&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bcircles=0pLXhAn&" + 
                    "bpolys=0fbNWeVcR&" + 
                    "contributionType=OvOV&" + 
                    "showMetadata=k0mgr3r")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count?" + 
                    "bcircles=9&" + 
                    "contributionType=roZPb9BjDt3zkcG&" + 
                    "filter=hi&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/tag
    * 2 - (400) POST:/elements/length/density/groupBy/tag
    * 3 - (400) GET:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1002() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=xfDdAmIGkou&" + 
                    "bcircles=&" + 
                    "filter=Wx_IuGjT&" + 
                    "format=P9&" + 
                    "groupByKey=DAp84ojCcCzyyk&" + 
                    "groupByValues=687909.51&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=ME4Dm3RSi&" + 
                    "bcircles=krrdj&" + 
                    "bpolys=XScWqsZ5YKf&" + 
                    "filter=dA&" + 
                    "groupByKey=OwQV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bpolys=QH61efs0IW&" + 
                    "filter=CrcsE0&" + 
                    "format=z8Dn&" + 
                    "groupByKey=highway&" + 
                    "groupByValues=NuDjEFZmmMu&" + 
                    "showMetadata=AgOr3qx&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/length/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1003() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "filter=F&" + 
                    "filter2=6_dMH9xrrGoIJo&" + 
                    "time=ys0zxYxv")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bcircles=LSJSkgGnHAXn&" + 
                    "bpolys=&" + 
                    "showMetadata=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bpolys=PtImYYfeV&" + 
                    "filter=&" + 
                    "filter2=type%3Away+and+highway%3Dresidential&" + 
                    "format=LIILwIWyTUT0fE5n&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count/groupBy/boundary
    * 2 - (400) POST:/contributions/count/groupBy/boundary
    * 3 - (400) GET:/contributions/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1004() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=rTC1Kszde8px&" + 
                    "bpolys=2&" + 
                    "filter=IWnwwpVn&" + 
                    "format=Mjk3&" + 
                    "showMetadata=rz_O&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=0HExRbdiFm7KIKv&" + 
                    "bcircles=Ag26r&" + 
                    "contributionType=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bpolys=d0doxoAwxRDVkiY&" + 
                    "filter=xP9KAR8SCG&" + 
                    "format=cgn2T7uzfb&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/key
    * 2 - (400) POST:/elements/count/groupBy/key
    * 3 - (400) GET:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_1005() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bcircles=Lylz1q7&" + 
                    "bpolys=1PZN46fxTtjq&" + 
                    "filter=SBXWoj5ax4Jnw&" + 
                    "format=h2E3RlkZw57&" + 
                    "groupByKeys=_&" + 
                    "showMetadata=ectvhgI&" + 
                    "time=MultiPolygon&" + 
                    "timeout=YtkHi3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=eVOAcahH&" + 
                    "bpolys=Pftcv36gL&" + 
                    "groupByKeys=obq68a3ny&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=EU&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=pA&" + 
                    "groupByKeys=Cl7XXYGhF&" + 
                    "time=S&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/ratio
    * 2 - (400) POST:/elements/count/ratio
    * 3 - (400) GET:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_1006() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bpolys=UlAL&" + 
                    "filter=4&" + 
                    "format=oZF&" + 
                    "timeout=HErOuFpOds1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bcircles=nsIhD&" + 
                    "filter=h4H&" + 
                    "filter2=zXMA2bHyU&" + 
                    "format=ubqJJv4HFT9cnG&" + 
                    "showMetadata=OI&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bboxes=rpwbp&" + 
                    "bcircles=&" + 
                    "bpolys=du8hEkM1uar&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=Lw797b8KEJ8f&" + 
                    "format=json&" + 
                    "time=WapKxSrQV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/ratio
    * 2 - (400) POST:/elements/count/ratio
    * 3 - (400) POST:/elements/count/ratio
    * 4 - (400) GET:/elements/count/ratio
    */
    @Test(timeout = 60000)
    public void test_1007() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bpolys=tvrC&" + 
                    "filter=sCbG7el&" + 
                    "format=l&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bcircles=o9PBJm1IYyyeP5&" + 
                    "bpolys=McHQ_T&" + 
                    "filter=aZofA&" + 
                    "showMetadata=S2_120QU&" + 
                    "time=MultiPolygon&" + 
                    "timeout=7872u_YiHU3r030L")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bboxes=8KXXz703H0LedemO&" + 
                    "bcircles=Zv&" + 
                    "bpolys=y&" + 
                    "format=&" + 
                    "time=MDztvKDfOmHs")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter2=31LHZelnjTyNsl4m&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Invalid filter syntax. Please look at the additional info and examples about the filter parameter at https://docs.ohsome.org/ohsome-api. Detailed error message: line 1, column 17: whitespaces, EQUALS (=), NOT_EQUALS (!=) or in expected, EOF encountered."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1008() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=eE2jrqwEdgjzA2g&" + 
                    "bpolys=xe22wc&" + 
                    "filter=jdaAvtgz&" + 
                    "groupByKey=xHYWVp3YS6&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bcircles=a5ysPTHAk&" + 
                    "bpolys=dyP2Z85T&" + 
                    "filter=fjrPL2UcNYuoP&" + 
                    "format=QwgVTxzIwqCD&" + 
                    "groupByKey=MRfiumX82tfefn&" + 
                    "groupByValues=4.617347922E7&" + 
                    "timeout=l3aYZhF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bpolys=DcmBVz0&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=KUzI1oGFl&" + 
                    "groupByValues=1261521.49&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/length/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1009() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bcircles=2Ox8JXG&" + 
                    "bpolys=zdVI8xu9Hw9&" + 
                    "filter2=YZOlIQBgv3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bpolys=SqVBJ3&" + 
                    "filter=Hm2QaPc&" + 
                    "format=rVQVeMZpkghh&" + 
                    "showMetadata=XeBCdNBBJGClS&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bcircles=EHJrPt&" + 
                    "bpolys=&" + 
                    "filter=type%3Away+and+highway%3D*&" + 
                    "filter2=akX8fZns&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/tag
    * 2 - (400) POST:/elements/count/groupBy/tag
    * 3 - (400) GET:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1010() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bcircles=yW&" + 
                    "bpolys=e1sPvKw08clC8sx&" + 
                    "format=9FZY2f9XYXOZr1&" + 
                    "groupByKey=2urBERUvZXp&" + 
                    "showMetadata=gWJJ7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=AR4284u&" + 
                    "bpolys=VlY&" + 
                    "format=LPtszz9aqZ&" + 
                    "groupByKey=VfN&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bcircles=DEktj0UZlXi&" + 
                    "format=json&" + 
                    "groupByKey=&" + 
                    "showMetadata=m3RS1_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/ratio
    * 2 - (400) POST:/elements/perimeter/ratio
    * 3 - (400) GET:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_1011() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=tE_OXeDX6J74S5&" + 
                    "bpolys=o76IUGha5TAhT&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=WI&" + 
                    "time=m0B")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=5nHh7h4KBZ&" + 
                    "bcircles=&" + 
                    "format=6aZfNlg1fnPO6b4B&" + 
                    "showMetadata=kTs&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=KiPoHg2yN&" + 
                    "format=tor4uH1diTd")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density
    * 2 - (400) POST:/users/count/density
    * 3 - (400) GET:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_1012() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=13RXvq6Q6GpSl&" + 
                    "bpolys=ILHTAk&" + 
                    "filter=qyUQNTpl8FJ&" + 
                    "format=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bcircles=rUkIxcvbd&" + 
                    "filter=AVLEygANXgQEf&" + 
                    "format=json&" + 
                    "showMetadata=BIL4X1eg6&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density?" + 
                    "filter=COzcdzPiEWH6&" + 
                    "format=B9Xg7iNm&" + 
                    "showMetadata=S2Gosg6&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/centroid
    * 2 - (400) POST:/contributions/latest/centroid
    * 3 - (400) GET:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_1013() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "clipGeometry=fYVwCEAH&" + 
                    "filter=aRVEsAhCn5T9&" + 
                    "showMetadata=SX0&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=XM51GVETa13IyLD&" + 
                    "bcircles=28HWF2U18mUQ1aYK&" + 
                    "bpolys=YNVD02wFIY&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=NUTj5YcqT&" + 
                    "bpolys=s2Uyezu&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=Pw&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density
    * 2 - (400) POST:/users/count/density
    * 3 - (400) POST:/users/count/density
    * 4 - (400) GET:/users/count/density
    */
    @Test(timeout = 60000)
    public void test_1014() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=is1Tqn&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=&" + 
                    "contributionType=OPAh_5E1&" + 
                    "showMetadata=v&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=v&" + 
                    "bcircles=2IVNlsFKQ&" + 
                    "bpolys=ZBib_6FVSIOS&" + 
                    "filter=6uLF8&" + 
                    "showMetadata=X&" + 
                    "timeout=ARBUYthARa")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density?" + 
                    "bboxes=Ff_0YqGs8RT&" + 
                    "bcircles=kGcNvJv&" + 
                    "contributionType=EhTnuSyA&" + 
                    "format=json&" + 
                    "showMetadata=pqe4F&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1015() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=CNg7MJAFQADP8y&" + 
                    "timeout=3AFEl5N")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=yBVOGxd00kNcN&" + 
                    "bcircles=R9MU8LRnhh&" + 
                    "bpolys=Zm_TkLpfYb8J8TG&" + 
                    "filter=RxQV_dcjb9reeDj2&" + 
                    "groupByKey=&" + 
                    "showMetadata=8oy1sq2fY&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=EfSP3zY8tQ&" + 
                    "bcircles=C0Smh9vl3vEn7&" + 
                    "bpolys=40VES&" + 
                    "format=json&" + 
                    "groupByKey=seVP0SiIjuwDMUk&" + 
                    "groupByValues=718314.9&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1016() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=z08zcVXI&" + 
                    "bcircles=YdE9n&" + 
                    "bpolys=KQY5PJWk&" + 
                    "filter=eax2ySgUS&" + 
                    "format=W0Dygv25USnv2&" + 
                    "groupByKey=cB02YFNZP&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "filter=LF2wlXcbJLLVI2mD&" + 
                    "groupByKey=wrQ7JK99MFY42&" + 
                    "groupByValues=8797443.19")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "groupByKey=&" + 
                    "showMetadata=Pxk977aHco_&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1017() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=eg6WO7&" + 
                    "groupByKey=aY&" + 
                    "showMetadata=duGjAh2UvEpSuh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=VS&" + 
                    "filter=YCTw9PbBhdu&" + 
                    "format=4HxJ_otuAg&" + 
                    "groupByKey=nQuKAB2PNZ&" + 
                    "timeout=ygI3HWe7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=U_pRym1GJEeOv&" + 
                    "bpolys=0n&" + 
                    "filter=A2E3OBm&" + 
                    "groupByKey=8SEzkFZjd&" + 
                    "groupByValues=3.737603603E7&" + 
                    "time=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/tag
    * 2 - (400) POST:/elements/count/groupBy/tag
    * 3 - (400) GET:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1018() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=apHuUunFe_669F&" + 
                    "bpolys=Zc9LEC&" + 
                    "filter=ZDWIit&" + 
                    "format=6yAMmBNWjtIHJW&" + 
                    "groupByKey=G6g5ZmgzKr&" + 
                    "groupByValues=1529.91&" + 
                    "timeout=vNbQg9X8Cz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bcircles=2_&" + 
                    "bpolys=2LtIuO&" + 
                    "filter=YXWeGzEeyQQN&" + 
                    "format=gUHYf&" + 
                    "groupByKey=0c1&" + 
                    "showMetadata=q1j5Q&" + 
                    "time=WyRT6u36cv85")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "groupByKey=building&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/tag
    * 2 - (400) POST:/elements/length/density/groupBy/tag
    * 3 - (400) GET:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1019() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=WI&" + 
                    "bpolys=cxIodDo&" + 
                    "filter=4wrZSzjNrmxk10VO&" + 
                    "format=HEpT&" + 
                    "groupByKey=C75tSqG&" + 
                    "showMetadata=li7xlE&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "filter=4T8GXzbYgLYvy&" + 
                    "groupByKey=highway&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=U4ooF&" + 
                    "groupByKey=C07txIYbzJXa1AR&" + 
                    "showMetadata=Cw5WKwvN&" + 
                    "timeout=U62i7iXt0eCpFt7")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density
    * 2 - (400) POST:/elements/length/density
    * 3 - (400) GET:/elements/length/density
    */
    @Test(timeout = 60000)
    public void test_1020() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=f9jmljCQo&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=O5bEzc8CtKbTSj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=xh&" + 
                    "bpolys=kNoSJtFe7dA7&" + 
                    "format=AlPyhEyoTcnk5fO&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density?" + 
                    "bcircles=6bL2KJvJM&" + 
                    "bpolys=5jhuewAFEBIqN&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=Q5wBWVl&" + 
                    "showMetadata=4mafr&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/area/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/area/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1021() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bcircles=yNMOguMLfvC&" + 
                    "bpolys=U7KXdlZ_A&" + 
                    "showMetadata=Gw03VELB0&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=LqK6CXKhxO28qm29&" + 
                    "filter=fcYVyJkFzosQQ&" + 
                    "filter2=cH&" + 
                    "format=H&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=H35qslGl2_RP2SXT&" + 
                    "bpolys=h9A&" + 
                    "filter=vECILHEt65uX&" + 
                    "showMetadata=TBpD&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1022() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=1H_m&" + 
                    "filter=5luXWkbEi&" + 
                    "format=iVbdU&" + 
                    "groupByKey=C&" + 
                    "groupByValues=687909.51&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=6l3EL&" + 
                    "bcircles=5fd7IojfyZe2mm&" + 
                    "bpolys=IB&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=Q3CJKQeXvVmWpK8&" + 
                    "groupByKey=1M0pPJgPmcb&" + 
                    "groupByValues=8797443.19&" + 
                    "showMetadata=40iJRlh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=n&" + 
                    "format=&" + 
                    "groupByKey=&" + 
                    "showMetadata=ni2NKj&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/ratio
    * 2 - (400) POST:/elements/length/ratio
    * 3 - (400) GET:/elements/length/ratio
    */
    @Test(timeout = 60000)
    public void test_1023() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bboxes=v2PyRG&" + 
                    "filter2=RLV_kB0&" + 
                    "showMetadata=ZuP7nOAm5w&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bcircles=slB9sECQDcJ2&" + 
                    "bpolys=MPtPJ2FAgiou&" + 
                    "filter=lMGOb&" + 
                    "filter2=&" + 
                    "format=OX2c_X2TWFrp1&" + 
                    "time=MultiPolygon&" + 
                    "timeout=Tp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=FD2AJzr2S64LXKSz&" + 
                    "bpolys=eXyd&" + 
                    "filter=J7guKOKIJ&" + 
                    "filter2=RJWsG&" + 
                    "format=m&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/boundary
    * 2 - (400) POST:/users/count/groupBy/boundary
    * 3 - (400) GET:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1024() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=zqiLLcezRHoU88&" + 
                    "bcircles=sIzc5DaJ&" + 
                    "filter=lqyW5ihItGAXiVv4&" + 
                    "showMetadata=I_8nwOf6Ci&" + 
                    "time=gMsANv")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bpolys=mN&" + 
                    "contributionType=Q6QexvNqQ6vjPg&" + 
                    "filter=L0&" + 
                    "format=SIEj9w&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bcircles=dPQPiApC75s1HkQu&" + 
                    "bpolys=VA9ioxnq&" + 
                    "contributionType=25G3&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "time=PCC&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/type
    * 2 - (400) POST:/users/count/groupBy/type
    * 3 - (400) GET:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1025() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=g2hyYEE&" + 
                    "contributionType=YYuiKBKC6Xf7cy&" + 
                    "format=rTZo2uUI&" + 
                    "showMetadata=qZyRIjNrY6Or&" + 
                    "time=LMMWIDDUbk&" + 
                    "timeout=iKp2s2hFZQDSil")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bcircles=Mlm&" + 
                    "bpolys=hfkhoPTwT&" + 
                    "filter=&" + 
                    "showMetadata=TF6i5NT&" + 
                    "time=Xb7FvLnmi9oS8Toy")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=&" + 
                    "bpolys=&" + 
                    "contributionType=6cMiYh_ue&" + 
                    "filter=A5n8TExVk3FEmV&" + 
                    "format=json&" + 
                    "showMetadata=KIzQbNR&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1026() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=_vicWebIQ42I5cVG&" + 
                    "bcircles=1sfO&" + 
                    "bpolys=4yDj&" + 
                    "filter=bj5XoQGh1&" + 
                    "groupByKey=igDsIMb74b0BOcb&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=CdBUehKn0ABIC&" + 
                    "filter=8DkkK0l5s&" + 
                    "groupByKey=7dq&" + 
                    "groupByValues=R_8Bq&" + 
                    "showMetadata=f8ZQ_A&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=Fv&" + 
                    "bpolys=KL5KWHe_eCy8W&" + 
                    "filter=gLwelL&" + 
                    "format=json&" + 
                    "groupByKey=RDMrM5MR3&" + 
                    "groupByValues=651044.38&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1027() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=Hk&" + 
                    "bpolys=1NxFvN67RyEF&" + 
                    "filter=cPBDqzxq&" + 
                    "groupByKey=1QM5&" + 
                    "groupByValues=gEdfQMC_TFwQY&" + 
                    "showMetadata=3piuK&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "filter=CWSr9&" + 
                    "format=Iib4sqVsrVQph&" + 
                    "groupByKey=Anv6nDNXLXZ&" + 
                    "groupByValues=743636.1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=ie3CgvnXxN&" + 
                    "format=4_aROHOVpQ7O7SCT&" + 
                    "groupByKey=n3lu5j1FHZDvNQ88&" + 
                    "groupByValues=3.737603603E7&" + 
                    "showMetadata=RvD&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/tag
    * 2 - (400) POST:/elements/count/groupBy/tag
    * 3 - (400) GET:/elements/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1028() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=i6mqkl79EiPmHBa&" + 
                    "filter=sYaT9kZUZQe&" + 
                    "groupByKey=a1egj&" + 
                    "showMetadata=9gz18DNrGqk&" + 
                    "time=sIGK5AOq&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bcircles=1N_NU21S62uH6W&" + 
                    "groupByKey=0rnzhMFS3ypZ0x&" + 
                    "groupByValues=743636.1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=glKkLq8ctAJNgcai&" + 
                    "groupByKey=NC6&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given 'format' parameter is invalid. Please choose between 'geojson'(only available for /groupBy/boundary and data extraction requests), 'json', or 'csv'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/density/groupBy/type
    * 2 - (400) POST:/elements/perimeter/groupBy/type
    * 3 - (400) GET:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_1029() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter=5K8Y&" + 
                    "format=F2yoZlS9urqZ4&" + 
                    "showMetadata=eD")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bcircles=vJkcmya5bp6wq&" + 
                    "format=6WBmHLR16lJV&" + 
                    "showMetadata=3&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bcircles=h&" + 
                    "bpolys=k3UXX2t4zNbbmA&" + 
                    "filter=k5_5AD5F4b8&" + 
                    "groupByKeys=NNbdRkYts_I5G&" + 
                    "showMetadata=f0YNnwMzDSMZ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/tag
    * 2 - (400) POST:/elements/area/density/groupBy/tag
    * 3 - (400) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1030() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bcircles=XnQlloTXUxxJcf&" + 
                    "filter=lh&" + 
                    "format=EUWa4QSVSvo63ORT&" + 
                    "groupByKey=7T5NzJIy&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bpolys=Kqba7qG&" + 
                    "filter=BVh23b7mxG&" + 
                    "groupByKey=p&" + 
                    "groupByValues=698802.99&" + 
                    "showMetadata=xLec&" + 
                    "time=f_J8kEK2oEt")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Bte6hhc1Mb5z&" + 
                    "bpolys=uE8KRe977MSXC7E&" + 
                    "groupByKey=74zKIJUfbf")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/density/groupBy/boundary
    * 2 - (400) GET:/elements/perimeter/density
    * 3 - (400) GET:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1031() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=HiBl820qT&" + 
                    "filter=&" + 
                    "format=yQV_5&" + 
                    "showMetadata=xeOoEk1yCqXyy")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=k0ru5ARDLF_lSk&" + 
                    "bcircles=TmdBiuCnmJM&" + 
                    "bpolys=jtpBejg")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bboxes=wRTHb0xKbniDNz&" + 
                    "bcircles=TPlTU&" + 
                    "bpolys=59l&" + 
                    "filter2=type%3Anode+and+%22addr%3Ahousenumber%22%3D*&" + 
                    "format=Ldhjdbmj&" + 
                    "showMetadata=eymWmE8uN16_t0g6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/tag
    * 2 - (400) POST:/elements/length/groupBy/tag
    * 3 - (400) GET:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1032() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=Dniwe4Zn57zJ&" + 
                    "bpolys=h_OcORKHzSbi&" + 
                    "filter=upsUfY1fYkuI&" + 
                    "groupByKey=XSY8cc9E&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=PlqsBoKXq3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=y_1&" + 
                    "format=&" + 
                    "groupByKey=gbrMnOEQKCOnoXFk&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=ZmkMFCFJQvKr&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=aeBuq&" + 
                    "groupByKey=FomuSYtzIAg3N99&" + 
                    "groupByValues=3.737603603E7&" + 
                    "showMetadata=oNpza0eMyyIp1R&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/type
    * 2 - (400) GET:/elements/count/ratio
    * 3 - (400) GET:/elements/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1033() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=&" + 
                    "filter=ij84cOQyx8pssR&" + 
                    "showMetadata=AKQXZ1_UiqLXzQt&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio?" + 
                    "bcircles=oAd9kqkU0ykv&" + 
                    "bpolys=NHgUCcGB&" + 
                    "filter=V&" + 
                    "filter2=type%3Anode+and+%22addr%3Ahousenumber%22%3D*&" + 
                    "format=sV&" + 
                    "showMetadata=oM_wkHPGSs&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary?" + 
                    "bboxes=a5Eg&" + 
                    "bcircles=f&" + 
                    "bpolys=A4mdVInG&" + 
                    "format=lz&" + 
                    "showMetadata=NfdrVH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/key
    * 2 - (400) POST:/users/count/groupBy/key
    * 3 - (400) GET:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_1034() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=WV&" + 
                    "bcircles=Jv&" + 
                    "contributionType=&" + 
                    "groupByKeys=rt4Am16oVKPC&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "filter=iaAgn6dO4&" + 
                    "groupByKeys=vymvZl85sp&" + 
                    "showMetadata=Mq3wilzH&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bpolys=zEMsrKlk8vZ3NvZW&" + 
                    "filter=Kbot&" + 
                    "groupByKeys=building")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/key
    * 2 - (400) POST:/users/count/groupBy/key
    * 3 - (400) GET:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_1035() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bpolys=qbQ1w&" + 
                    "filter=0Q&" + 
                    "format=BDAj&" + 
                    "groupByKeys=7teKPsCPN&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bcircles=jsq2ImYyAyBA4L&" + 
                    "bpolys=p_4&" + 
                    "groupByKeys=building&" + 
                    "showMetadata=7OqnUqVOR&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=XObhZ9hTBe5&" + 
                    "bcircles=OFYQBZ2z0zhUCH&" + 
                    "bpolys=7qW1gVrzfr9Z&" + 
                    "contributionType=jf&" + 
                    "filter=&" + 
                    "groupByKeys=0H8ztmZ5&" + 
                    "showMetadata=0pWwPxVFp&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1036() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=X1vnu_sE&" + 
                    "bcircles=J&" + 
                    "bpolys=_qnkIqihASNVB&" + 
                    "format=json&" + 
                    "groupByKey=ueJa&" + 
                    "groupByValues=bUiUrzFw")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=&" + 
                    "groupByKey=EODkhli&" + 
                    "showMetadata=739nwGDE04kk&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=nEk83vV_&" + 
                    "format=vyQw&" + 
                    "groupByKey=building&" + 
                    "groupByValues=0.0&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/tag
    * 3 - (400) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1037() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=t7Q&" + 
                    "filter=Cog&" + 
                    "groupByKey=m&" + 
                    "groupByValues=651044.38&" + 
                    "showMetadata=gzXxkfVq&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=YPl&" + 
                    "format=xSa_e3VbUX29&" + 
                    "groupByKey=mYgs2v1c1Qaw&" + 
                    "showMetadata=Zpv_41ZYkCOL&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=By7KEL1RI0G&" + 
                    "bpolys=Sg7JfgOx&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=YgZucccWXip5&" + 
                    "groupByKey=1RT")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/density
    * 2 - (400) GET:/elements/count/density/groupBy/boundary
    * 3 - (400) POST:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1038() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "filter=1IIkhgYwo&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=Sszw8khjLP6oubqc&" + 
                    "bcircles=WD6ta148oBUBIs&" + 
                    "bpolys=zXj9m&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=16lsE8gZYd&" + 
                    "time=MultiPolygon&" + 
                    "timeout=kx7kK4v")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bboxes=B2zZnKiD&" + 
                    "filter=FyuciEI_w&" + 
                    "format=33VED0mmXTfdCLg2&" + 
                    "showMetadata=ct56XqlF2fcR&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density
    * 2 - (400) POST:/elements/length/groupBy/type
    * 3 - (400) GET:/users/count/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1039() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "showMetadata=eeY&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bpolys=&" + 
                    "filter=&" + 
                    "format=4&" + 
                    "showMetadata=l16NSFGvaZRd&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/boundary?" + 
                    "bboxes=wJEKZ_H&" + 
                    "format=json&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/length/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/length/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1040() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=jRXpVB3XDGl6QPO&" + 
                    "bcircles=_SOGkp&" + 
                    "format=Ss4XUBp5RZ6&" + 
                    "groupByKey=k8_ifB&" + 
                    "showMetadata=Xu7d4rq17eGPapXn")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=B32sYfOCm4ZaQM5&" + 
                    "bpolys=hM7vq13rTvYkZb&" + 
                    "filter=aDbqQFFzcrC2H&" + 
                    "groupByKey=oIgUuos&" + 
                    "groupByValues=4.617347922E7&" + 
                    "showMetadata=KBBzuKg&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=I2K&" + 
                    "bcircles=cZjR_K7OAbFbt&" + 
                    "format=json&" + 
                    "groupByKey=ec_m&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/count/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1041() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bcircles=dR&" + 
                    "filter=C&" + 
                    "filter2=h")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bpolys=TDYfH0h9FTGzlNZY&" + 
                    "filter=JyYDHpjz&" + 
                    "format=json&" + 
                    "showMetadata=8J&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=uyk&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=dd2mKW&" + 
                    "format=OW9lS2mKN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/groupBy/type
    * 2 - (400) GET:/elements/count/groupBy/key
    * 3 - (400) GET:/elements/count
    */
    @Test(timeout = 60000)
    public void test_1042() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=MdNPQNgJVQdSP&" + 
                    "bpolys=KrnM4P&" + 
                    "showMetadata=tOhWYPY&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bpolys=Ez3jSluhTiu9q&" + 
                    "filter=xpcj&" + 
                    "groupByKeys=rr4AT")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=0PsdpvvjM&" + 
                    "bpolys=Dr31zqTCdECTC&" + 
                    "format=oTfqbNVENpz&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/boundary
    * 2 - (400) GET:/elements/perimeter/groupBy/boundary
    * 3 - (400) POST:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_1043() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=Xi2J6Pa&" + 
                    "bcircles=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bboxes=9p3_y&" + 
                    "bpolys=z&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=bEzIIj15hIHa&" + 
                    "bpolys=gR_&" + 
                    "filter=5IP7RzW1TIxwE&" + 
                    "groupByKeys=api&" + 
                    "showMetadata=N47KADIzNbw&" + 
                    "time=MultiPolygon&" + 
                    "timeout=UJ8wW")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/tag
    * 2 - (400) POST:/elements/length/groupBy/tag
    * 3 - (400) GET:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1044() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bpolys=Mjkl5dEJwxnD&" + 
                    "filter=666FlDUkdjutxe&" + 
                    "groupByKey=biGVGvo8pmn&" + 
                    "groupByValues=NSBub_Bzk0jzK&" + 
                    "time=MultiPolygon&" + 
                    "timeout=7bmQS3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=N5AnYKSaZU&" + 
                    "bcircles=Tkn32_4Z&" + 
                    "format=J1licrtqlD10Zyem&" + 
                    "groupByKey=dcnD4&" + 
                    "showMetadata=rdN9ru&" + 
                    "time=MultiPolygon&" + 
                    "timeout=NHzqIEawHTM8HCL1")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=T03aeBNqM8elRt&" + 
                    "bpolys=ha2N5&" + 
                    "filter=WUXS&" + 
                    "format=json&" + 
                    "groupByKey=8eLeyxYzX&" + 
                    "time=hR859FyAlB7X")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length
    * 2 - (400) GET:/contributions/centroid
    * 3 - (400) POST:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1045() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "bboxes=XEDvHMuRzsQ94s&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "clipGeometry=aDW&" + 
                    "properties=q&" + 
                    "showMetadata=YUxdC2nmG8_0R7ft&" + 
                    "time=IQBlfzhT")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=bQnV4J&" + 
                    "bpolys=30Kmyzk4U&" + 
                    "filter=mD8IvNND&" + 
                    "format=Mv4G&" + 
                    "showMetadata=hEH_M2mTZzOoe0y&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/key
    * 2 - (400) POST:/users/count/groupBy/key
    * 3 - (400) GET:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_1046() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bcircles=1jzEtl&" + 
                    "filter=ti&" + 
                    "groupByKeys=V&" + 
                    "showMetadata=SQs3HKsJAzxg&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=xrhmOvC2&" + 
                    "format=&" + 
                    "groupByKeys=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=vbsWnQRsycXQeglY&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKeys=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1047() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=veC&" + 
                    "bcircles=NDZjs1wh&" + 
                    "bpolys=42rUZyJWuD&" + 
                    "filter=rST2MrfxB6GL5U&" + 
                    "groupByKey=nqwedswX4LhQfs&" + 
                    "groupByValues=w2gNe_87iYw&" + 
                    "showMetadata=QlZgCO3NI1oa&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "format=hl416Dpc0D&" + 
                    "groupByKey=3SLjb&" + 
                    "groupByValues=aNRNx&" + 
                    "showMetadata=OnFc")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "format=json&" + 
                    "groupByKey=Ax8KFaNYJza&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/tag
    * 2 - (400) POST:/elements/length/density/groupBy/tag
    * 3 - (400) GET:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1048() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bcircles=2tfjkganluBIajwZ&" + 
                    "bpolys=BjO3FqwtaUm2&" + 
                    "groupByKey=ZGb7EVMLGWCj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=ddNgk_EXdiyS8&" + 
                    "bpolys=hkp8_0ejgKhEjPLO&" + 
                    "filter=zYfFFPy5RagzSptf&" + 
                    "format=json&" + 
                    "groupByKey=fLExk9J&" + 
                    "groupByValues=4.617347922E7&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "bboxes=10Zm9zLUek&" + 
                    "filter=IIkLcvxt&" + 
                    "format=json&" + 
                    "groupByKey=K68prPdJ52OFlL_&" + 
                    "groupByValues=gx")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1049() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=gneyDBzfHS&" + 
                    "bpolys=dqQdOUhKGTlzJuWN&" + 
                    "groupByKey=GEhh&" + 
                    "time=qJoIyWHTr&" + 
                    "timeout=AM0G29aaV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=FlTJ7UTx1EbV&" + 
                    "bcircles=L&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=4BS7Jw&" + 
                    "groupByKey=E&" + 
                    "groupByValues=4766932.83&" + 
                    "time=0bXHKnD__PvXX")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bpolys=UdsGCPqz&" + 
                    "filter=83QVez0A6Pksu3Hd&" + 
                    "groupByKey=building&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density/groupBy/boundary
    * 2 - (400) POST:/users/count/density/groupBy/boundary
    * 3 - (400) GET:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1050() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bpolys=KLfu&" + 
                    "filter=wzmkpqZEaJ&" + 
                    "showMetadata=bfWHrWTgtFm05Dz&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bboxes=gGP&" + 
                    "bcircles=BIGAde1l&" + 
                    "contributionType=7sZ&" + 
                    "format=json&" + 
                    "time=Lr0h7Db_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bboxes=o&" + 
                    "bcircles=9Os2ac1PDadD_r&" + 
                    "bpolys=OGX950cIrW&" + 
                    "filter=&" + 
                    "format=json&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/groupBy/type
    * 2 - (400) GET:/contributions/count/density
    * 3 - (400) GET:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1051() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=nbzntSw0O9YgCW&" + 
                    "format=json&" + 
                    "time=vuvniPLbYppgy&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=XxJ&" + 
                    "filter=bJu")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bcircles=93nwU0xZ&" + 
                    "bpolys=wGpdGu5x8mX9&" + 
                    "filter=rO95cedG")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/tag
    * 2 - (400) POST:/elements/area/density/groupBy/tag
    * 3 - (400) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1052() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=VDjfXsqMajQdUChW&" + 
                    "bcircles=4yEKy0I7y1cBTrK&" + 
                    "format=MVoucw6vW&" + 
                    "groupByKey=kT5T2OOFniuwp&" + 
                    "showMetadata=W9OSl&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bpolys=xf&" + 
                    "filter=bohGPig8l&" + 
                    "groupByKey=s9C9Ab7Wj&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=v2W5WoM4AJPb&" + 
                    "time=UlSY6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=SJrEla8IITpxqTW_&" + 
                    "bcircles=VzPqkzyB87&" + 
                    "format=json&" + 
                    "groupByKey=mOYHyRXxmcOx&" + 
                    "groupByValues=3.737603603E7&" + 
                    "showMetadata=4NLh3QSwKN5&" + 
                    "time=hFGTXT59zASU")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/bbox
    * 2 - (400) POST:/elements/count/density/groupBy/boundary
    * 3 - (400) GET:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1053() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bcircles=h_hK&" + 
                    "bpolys=y4Uf_mLtT13c5xr&" + 
                    "properties=dQK&" + 
                    "time=Lv6pkvIao9GDz&" + 
                    "timeout=2fW9qV9G3v")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary?" + 
                    "bboxes=PX0lZj&" + 
                    "filter=kvCPAQ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=xu46lf&" + 
                    "filter=sV_KRR&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/geometry
    * 2 - (400) POST:/elements/length/groupBy/boundary
    * 3 - (400) GET:/elements/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_1054() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/geometry?" + 
                    "bpolys=PRpzA5&" + 
                    "time=b5pD21l3&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bboxes=jFdJYQ&" + 
                    "bcircles=Ys2g&" + 
                    "format=o40ni2IPNU&" + 
                    "showMetadata=u6Sln0DagwH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=O1Xk974qso&" + 
                    "bcircles=9yR0vYSrUJWBU&" + 
                    "filter=ds&" + 
                    "format=jvAtv8gUNgp2c&" + 
                    "groupByKeys=building&" + 
                    "showMetadata=Yl3xrtIsNUu08T")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density/groupBy/tag
    * 2 - (400) POST:/users/count/density/groupBy/tag
    * 3 - (400) GET:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1055() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "contributionType=4wQOjw&" + 
                    "filter=KhH0Y8Y9ljeVlDXl&" + 
                    "format=zvSBHZ&" + 
                    "groupByKey=Tm272wzB9uoF&" + 
                    "groupByValues=61015.69&" + 
                    "showMetadata=q5Uj_OB&" + 
                    "time=95MDYzN7Jgg")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bpolys=&" + 
                    "contributionType=23&" + 
                    "format=7R2kOAxYa&" + 
                    "groupByKey=lrBW8Nz5ZDZNMZvI&" + 
                    "groupByValues=1261521.49&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=0&" + 
                    "filter=XEmljV_JC1_EGsX2&" + 
                    "format=json&" + 
                    "groupByKey=building&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1056() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "format=json&" + 
                    "showMetadata=&" + 
                    "timeout=pz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bcircles=OEa&" + 
                    "bpolys=4brkEXhjk0YB0az&" + 
                    "filter=lUmT0wjT1bz&" + 
                    "filter2=jn&" + 
                    "showMetadata=Nm9ohuLVnxk_pQ&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=Py3TWNTtO4cTBJ73&" + 
                    "bpolys=EuD7&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=v1Lrfc&" + 
                    "format=json&" + 
                    "showMetadata=ii")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/density/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1057() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bcircles=UdYfI8xc8_IcX&" + 
                    "format=jqSqSCXQhFW&" + 
                    "groupByKey=_cg7JcSo&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=BYs&" + 
                    "groupByKey=ItalbtIWy&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=A&" + 
                    "time=MultiPolygon&" + 
                    "timeout=xf_")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=KvzV5qm9_UN&" + 
                    "bcircles=utDMcowI1ddB&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=dezVTDhHu9qFV&" + 
                    "groupByKey=0vGWPxRAr&" + 
                    "showMetadata=1_E&" + 
                    "timeout=oWPg72SyAEg")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/density
    * 2 - (400) GET:/elements/perimeter/ratio
    * 3 - (400) POST:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_1058() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bcircles=M&" + 
                    "bpolys=V3tZMN9&" + 
                    "format=_hUHwV6U&" + 
                    "time=MultiPolygon&" + 
                    "timeout=7uklPEIH7NX")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "filter=1M4ct2C&" + 
                    "format=g_EHS&" + 
                    "showMetadata=laCD0dvZG&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bpolys=IIcF&" + 
                    "clipGeometry=_ij2A8UH&" + 
                    "filter=ENpAf2iFW&" + 
                    "properties=WLgOVqBitnN6fz&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1059() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=tjr6RuD&" + 
                    "bpolys=Al&" + 
                    "format=3ATBoUoUKUh5sm&" + 
                    "groupByKey=building&" + 
                    "showMetadata=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=Lf1vg&" + 
                    "bpolys=6gSN_jKEbeZu&" + 
                    "filter=1sSODvyrfY&" + 
                    "groupByKey=wr7Rs9ObKBNmWtwB&" + 
                    "groupByValues=718314.9&" + 
                    "showMetadata=kGYazH72NCq&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=I&" + 
                    "bpolys=sE66GyEac36cO&" + 
                    "filter=b9rF5B&" + 
                    "groupByKey=building&" + 
                    "groupByValues=718314.9&" + 
                    "showMetadata=TgB9FmBcVS1nD9g&" + 
                    "timeout=AHZgaEeCL97R")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/ratio
    * 2 - (400) POST:/elements/length/groupBy/type
    * 3 - (400) GET:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_1060() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bcircles=OPmLsHyAPq&" + 
                    "bpolys=hQFv&" + 
                    "filter2=kPCSEo&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/type?" + 
                    "bboxes=g7tixC&" + 
                    "bcircles=E&" + 
                    "bpolys=Bz&" + 
                    "filter=46Ygn0KoafP6Xz9&" + 
                    "timeout=vqazsDAAb3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "filter=&" + 
                    "properties=&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/density/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1061() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=nDs5wqZbEa4h2j&" + 
                    "bcircles=2Aru9Cf&" + 
                    "groupByKey=LvDj18ZgjQzdEaCX&" + 
                    "showMetadata=&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bpolys=G67mfDat2c2Ulozl&" + 
                    "filter=B2zlV5&" + 
                    "format=Gv2Cvxq5&" + 
                    "groupByKey=AG3NbVWm&" + 
                    "groupByValues=HmZl_5eVJ&" + 
                    "showMetadata=kjpiUUl4FSLI&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bcircles=yGS&" + 
                    "filter=8Le3O6s0lOOB3&" + 
                    "groupByKey=building&" + 
                    "groupByValues=lt&" + 
                    "showMetadata=gNvNK&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count/groupBy/boundary
    * 2 - (400) POST:/elements/area/density
    * 3 - (400) GET:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1062() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=aA53ET6Y6Qf9_0Qj&" + 
                    "bcircles=P2&" + 
                    "format=1NJXmDt_DX9NmYXn&" + 
                    "showMetadata=IsGvesr6yF_1P8qm&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=pER&" + 
                    "bpolys=aDrGoTJEXXCD1FO&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=aQxjviy&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=2hwnFaeUMu&" + 
                    "bcircles=qHbrZjuJyajY94&" + 
                    "bpolys=QSVPP&" + 
                    "format=json&" + 
                    "showMetadata=pVHn&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/tag
    * 2 - (400) POST:/users/count/groupBy/tag
    * 3 - (400) GET:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1063() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bcircles=Hi_Ate7TZCW&" + 
                    "groupByKey=3J9QBUA&" + 
                    "showMetadata=&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bpolys=vorCohLYAGm&" + 
                    "groupByKey=building&" + 
                    "groupByValues=0.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bcircles=mm&" + 
                    "bpolys=vNOQ_UkIK2kp9&" + 
                    "format=3qFKRDyA_cu2zki&" + 
                    "groupByKey=cUkFGL8Gd&" + 
                    "showMetadata=K&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/count/density
    * 2 - (400) POST:/elements/area/density
    * 3 - (400) GET:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_1064() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density?" + 
                    "bboxes=coXd0aU&" + 
                    "bpolys=mplajfi51u&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=YO&" + 
                    "bpolys=6tRILcjlRdB&" + 
                    "filter=6m_MYLJef&" + 
                    "format=230&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bboxes=mLo7K_&" + 
                    "filter=4iennzFo&" + 
                    "filter2=csBj3d81UipVsJWZ&" + 
                    "format=C1bv_hY&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area
    * 3 - (400) GET:/elements/perimeter/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1065() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=JcXQV51MrVUZo&" + 
                    "bpolys=opnx&" + 
                    "filter=ZVICtf6ni&" + 
                    "groupByKey=_0JHWEM5Xr&" + 
                    "showMetadata=KpDSjE9sWOHi&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=zHkaJp1g2OM19WSZ&" + 
                    "bcircles=xCRo&" + 
                    "filter=BkcGs_i_roktFi&" + 
                    "format=sLO502rhya_O&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary?" + 
                    "bcircles=q&" + 
                    "showMetadata=Hz1NU6&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/tag
    * 3 - (400) GET:/elements/area/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1066() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=mxpcMV&" + 
                    "bpolys=Ycqj4d&" + 
                    "filter=UJLJmTXVsn&" + 
                    "groupByKey=building&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=MndQ2FHIJHD6Yl&" + 
                    "filter=3E1OEy&" + 
                    "format=VI7dKsD2ASUDnAn&" + 
                    "groupByKey=ed5I5xGjNaM65&" + 
                    "groupByValues=0.0&" + 
                    "showMetadata=KYpZKn")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bcircles=BoDuqJU&" + 
                    "bpolys=8wT_yMNcT3it&" + 
                    "filter=44kZvKo&" + 
                    "format=zh6NQDCM&" + 
                    "groupByKey=&" + 
                    "showMetadata=M&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count/density/groupBy/boundary
    * 2 - (400) POST:/elements/area/density
    * 3 - (400) POST:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_1067() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=7AFOELxYcI&" + 
                    "contributionType=r8X&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=KKG_3ZPnzWoN4Z&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=eLOeo0E89t1B_&" + 
                    "bcircles=5qLqVeybSX&" + 
                    "format=l8AtvAji94p1yD&" + 
                    "showMetadata=u8fRUAbUDopMJ_&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bcircles=h8nV1tpA&" + 
                    "filter=NJwnJTw4F&" + 
                    "properties=tjizwWQflxUUtw&" + 
                    "showMetadata=uYFK3NA&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/key
    * 2 - (400) POST:/users/count/groupBy/key
    * 3 - (400) GET:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_1068() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=G&" + 
                    "filter=ll2prif3&" + 
                    "groupByKeys=19s2aS232nsfqc32&" + 
                    "showMetadata=xFaahn5SvfpShH2Z&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=qMdP9knE1AlyKn2G&" + 
                    "bpolys=mJ4Dj8wfvFGI&" + 
                    "contributionType=80GSHpcC1U&" + 
                    "format=dSEUrap3abfh6S5&" + 
                    "groupByKeys=wiESi")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bcircles=GtmjKT01e&" + 
                    "contributionType=z&" + 
                    "format=json&" + 
                    "groupByKeys=rWwB4nQBgA&" + 
                    "time=ND1SSDcMqp")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter
    * 2 - (400) POST:/elementsFullHistory/geometry
    * 3 - (400) GET:/elements/perimeter/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_1069() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter?" + 
                    "bboxes=1&" + 
                    "bcircles=bY4&" + 
                    "bpolys=t9NJxC5BqEJ0&" + 
                    "format=etP99&" + 
                    "showMetadata=_ypvPJuqqcA2mjmX&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bboxes=W92ds90TLWF2Xe&" + 
                    "bpolys=Xg7XYG9G&" + 
                    "filter=UMB7Gy&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bpolys=hy7V&" + 
                    "filter=XXLuR4UqV&" + 
                    "groupByKeys=8WtGKF4&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/tag
    * 2 - (400) POST:/elements/length/groupBy/tag
    * 3 - (400) GET:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1070() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=l5WQs73AZewUKTy&" + 
                    "bcircles=&" + 
                    "groupByKey=zX8w&" + 
                    "groupByValues=1261521.49&" + 
                    "showMetadata=HrNrE1K&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bcircles=cN2e1auAg78T&" + 
                    "bpolys=0GKUJkg84yMnCa&" + 
                    "filter=s0OfCHs18WMozL&" + 
                    "format=umDkIXjxz&" + 
                    "groupByKey=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bcircles=mkOvZMMvGkM3cf7&" + 
                    "filter=Ac&" + 
                    "groupByKey=eysmeatZe0kTa&" + 
                    "groupByValues=130239.01&" + 
                    "showMetadata=n6zUsiteLUjDSPYl&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count/groupBy/boundary
    * 2 - (400) POST:/elements/length
    * 3 - (400) POST:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1071() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=cFws7V&" + 
                    "bpolys=o7NDywL&" + 
                    "filter=&" + 
                    "showMetadata=jir&" + 
                    "time=MultiPolygon&" + 
                    "timeout=PlTPJSQQwv12BQwi")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length?" + 
                    "filter=1aY0o3KLMQxw&" + 
                    "format=Z1yfJNOlMo&" + 
                    "showMetadata=NGFO9noY1ruO&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bcircles=FXO&" + 
                    "bpolys=bXmFJAfvXXjrptzI&" + 
                    "contributionType=&" + 
                    "filter=mC95HNCynA&" + 
                    "format=tz2W6Do03GFO1_&" + 
                    "showMetadata=JRR&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/groupBy/tag
    * 2 - (400) POST:/elements/length/groupBy/tag
    * 3 - (400) GET:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1072() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=xY5e&" + 
                    "bcircles=zsKStrCiMUjXeA&" + 
                    "groupByKey=lK3f5PexzVf2mI_&" + 
                    "groupByValues=RCaBijHsp&" + 
                    "showMetadata=SFsa6r5&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "filter=hFi9ZrmgVkWnad&" + 
                    "format=zYZ7caCxWq_xF6i&" + 
                    "groupByKey=g_dbIAyAq&" + 
                    "time=CnQeUK3nWAXZq")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=LfRu&" + 
                    "format=75xR1ifx1XRJa_qJ&" + 
                    "groupByKey=highway&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=kVzgOZ5_aT1I2VGG&" + 
                    "time=n0emOHB_EXlG7hi&" + 
                    "timeout=hQxRX3qzL")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density/groupBy/tag
    * 2 - (400) POST:/users/count/density/groupBy/tag
    * 3 - (400) GET:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1073() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "filter=VhoyiTKV5P7&" + 
                    "format=ETG5y8Z&" + 
                    "groupByKey=mJ2VB&" + 
                    "groupByValues=GhxBV9n5&" + 
                    "timeout=aF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=gqRR8hxIFOnN&" + 
                    "bcircles=acsxbYC8oj_0he&" + 
                    "contributionType=xk&" + 
                    "format=HiPOX7wsnVMNxd&" + 
                    "groupByKey=0ji&" + 
                    "time=s03ffGF5VZlpaH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=50ICF8H1o&" + 
                    "filter=z5f2&" + 
                    "groupByKey=MhQe8Gp&" + 
                    "showMetadata=E&" + 
                    "timeout=DPN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/geometry
    * 2 - (400) GET:/elements/area/density
    * 3 - (400) POST:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1074() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bboxes=trGunqINVJXyUNq&" + 
                    "bcircles=Mw0XGyezOc_Son&" + 
                    "filter=GHhNHcT7hjj9T&" + 
                    "properties=eynjQunDTK_bo&" + 
                    "showMetadata=RRG&" + 
                    "time=8BGLLGolZQk&" + 
                    "timeout=yi5HN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density?" + 
                    "bboxes=9&" + 
                    "bpolys=zzsriTY&" + 
                    "filter=mWFYwTehkpVBYu&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bcircles=nW_DGu&" + 
                    "bpolys=RtjXz97DM8jBBbv&" + 
                    "filter=IN6H1wN&" + 
                    "format=Xu0mb07L0v&" + 
                    "groupByKey=q00vbwvNCRfS&" + 
                    "groupByValues=651044.38&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/users/count/groupBy/type
    * 2 - (400) GET:/elements/geometry
    * 3 - (400) POST:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_1075() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=wyv0In2iMiC&" + 
                    "bcircles=&" + 
                    "bpolys=exAzR&" + 
                    "filter=ESaQaHH1c&" + 
                    "showMetadata=CBOPk_jlY&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bpolys=Pl6s&" + 
                    "filter=r2gQxuzja1obV2&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bcircles=&" + 
                    "bpolys=X83Llg&" + 
                    "filter=M3GQXlge&" + 
                    "filter2=3g&" + 
                    "format=X2wAicovdO&" + 
                    "showMetadata=x&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/count/density/groupBy/tag
    * 2 - (400) GET:/elements/area/groupBy/boundary
    * 3 - (400) GET:/elements/perimeter/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1076() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "filter=TaYbZLqnU157&" + 
                    "groupByKey=Z4uOqTq8&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "filter=3&" + 
                    "format=D8mie7nlVN1GU9_&" + 
                    "timeout=s5QGpYAkHU8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio/groupBy/boundary?" + 
                    "filter=oibLsd&" + 
                    "format=json&" + 
                    "showMetadata=yYP9ZrpIcGC86jt&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elementsFullHistory/centroid
    * 2 - (400) POST:/elements/perimeter/groupBy/key
    * 3 - (400) GET:/elements/count
    */
    @Test(timeout = 60000)
    public void test_1077() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/centroid?" + 
                    "bcircles=XiDauCB&" + 
                    "bpolys=bt&" + 
                    "clipGeometry=u2H7Q&" + 
                    "filter=VRFtqzn26Rcc8M&" + 
                    "showMetadata=sf2Ze&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bpolys=FDLy&" + 
                    "format=kylPVVHG4NPC&" + 
                    "groupByKeys=WmjJjMK7jn9Xkef&" + 
                    "showMetadata=_8_BcGngM3G")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=wZj3qzPBO&" + 
                    "format=json&" + 
                    "showMetadata=h0z3KdfhLSg&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/latest/count
    * 2 - (400) POST:/elements/area/density
    * 3 - (400) GET:/elements/centroid
    */
    @Test(timeout = 60000)
    public void test_1078() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bpolys=xDdRYTMpfcXOFNGH&" + 
                    "contributionType=AIRlPNExbXSPHuS&" + 
                    "showMetadata=hVY&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density?" + 
                    "bcircles=JyCD_zEXl1gqOqNT&" + 
                    "bpolys=F2&" + 
                    "filter=Ia1DEUd0k&" + 
                    "format=V&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=bB2RCM&" + 
                    "filter=J&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/tag
    * 2 - (400) POST:/elements/length/density/groupBy/type
    * 3 - (400) GET:/elements/count/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1079() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/tag?" + 
                    "bboxes=rxTzmM8&" + 
                    "bcircles=nnm7wleLa1YIWmmA&" + 
                    "groupByKey=BT&" + 
                    "groupByValues=3367.16&" + 
                    "showMetadata=x&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bcircles=e04VqfXpuvyN&" + 
                    "filter=Nr9oRD9K&" + 
                    "format=sit2&" + 
                    "time=MultiPolygon&" + 
                    "timeout=nNSD9oyGbwfyX4")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=8HwsGMnvASztDu8&" + 
                    "format=G&" + 
                    "showMetadata=ZAibh9bzGkMiDS&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/bbox
    * 3 - (400) POST:/elements/count/density
    */
    @Test(timeout = 60000)
    public void test_1080() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=N6Akrhs_Rsbt&" + 
                    "bcircles=bggVwcQG_kgL4r&" + 
                    "filter=UK1NiMTu&" + 
                    "groupByKey=28&" + 
                    "showMetadata=gEb7khpNXiweBr&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/bbox?" + 
                    "bpolys=rOoHNeDh&" + 
                    "time=2016-01-01%2C2017-01-01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bcircles=x4OE&" + 
                    "bpolys=_&" + 
                    "format=slWtfKh438TOH&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/geometry
    * 2 - (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/length/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1081() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=bfw5_au1a__rcpG&" + 
                    "bcircles=y6DxNqVb1pNZgZ&" + 
                    "clipGeometry=NAKhH4&" + 
                    "time=2016-01-01%2C2017-01-01&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter clipGeometry can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=3kaH0QjoH&" + 
                    "filter=e9JjtOEc44&" + 
                    "groupByKey=O&" + 
                    "groupByValues=698802.99&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bpolys=r4pc_gyBkb&" + 
                    "format=bGwHb1dGei&" + 
                    "showMetadata=dOXw")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density/groupBy/type
    * 2 - (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1082() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "bpolys=DC&" + 
                    "filter=GW3S82SsM&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=TQIwlco8Ke73So&" + 
                    "bpolys=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=LB&" + 
                    "groupByValues=651044.38&" + 
                    "showMetadata=N_&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bboxes=phZFUQgxe476g5Nn&" + 
                    "bcircles=R0KQp65cJT3RFo3H&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "showMetadata=Wbo90&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elementsFullHistory/geometry
    * 2 - (400) GET:/contributions/latest/count
    * 3 - (400) GET:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_1083() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/geometry?" + 
                    "bcircles=Vvmu&" + 
                    "clipGeometry=Db_Wc9Uefwi1Ne&" + 
                    "filter=8bqGFo6QC&" + 
                    "properties=&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bboxes=6oonaszMF9I&" + 
                    "format=mmK31uc&" + 
                    "showMetadata=MCReZ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/centroid?" + 
                    "bboxes=jp0PZpUtH_Yrl&" + 
                    "bcircles=s43&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=mSu6GybTj&" + 
                    "time=Zrki6TzHFtM")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/tag
    * 2 - (400) GET:/elements/length/density/groupBy/boundary
    * 3 - (400) POST:/contributions/count
    */
    @Test(timeout = 60000)
    public void test_1084() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bboxes=P&" + 
                    "bpolys=6xbh4wtRvFEf&" + 
                    "format=JKKUDawoN&" + 
                    "groupByKey=kTTHJqIUO&" + 
                    "groupByValues=aGQL8XH5l8lFe")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bcircles=y&" + 
                    "bpolys=_ZkwdCaLlICNW&" + 
                    "filter=xeaS&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count?" + 
                    "bboxes=9HrDvHW5Q6RoLTu&" + 
                    "bcircles=uDhvC0L1gmAaiEK&" + 
                    "filter=gxzWJJh8cWe7LKx&" + 
                    "format=BifX&" + 
                    "showMetadata=&" + 
                    "time=pQe4rbjkxHTa5d")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density/groupBy/boundary
    * 2 - (400) POST:/contributions/latest/count
    * 3 - (400) GET:/contributions/latest/bbox
    */
    @Test(timeout = 60000)
    public void test_1085() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=Cszu&" + 
                    "bpolys=o1Qk70MAr0hE4H&" + 
                    "showMetadata=h0MEghveI0&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bcircles=1djM&" + 
                    "bpolys=WEBB7FhlGh1R3&" + 
                    "filter=77iK74iY&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/bbox?" + 
                    "bboxes=SobSvWsX0cTrhWF_&" + 
                    "bpolys=n6BjDJ&" + 
                    "clipGeometry=true&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/latest/geometry
    * 2 - (400) GET:/users/count/density/groupBy/type
    * 3 - (400) POST:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1086() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "clipGeometry=true&" + 
                    "showMetadata=VfsD&" + 
                    "time=MultiPolygon&" + 
                    "timeout=LE39Rer")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bboxes=zpztjnVdFNN&" + 
                    "bcircles=&" + 
                    "bpolys=lmjUhvvfa9QTldIp&" + 
                    "contributionType=&" + 
                    "filter=kNMDMeBV2AxxK&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=71jTMc&" + 
                    "bpolys=&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/geometry
    * 2 - (400) POST:/elements/length/ratio
    * 3 - (400) GET:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_1087() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/geometry?" + 
                    "bboxes=4swZxTNrHuyE0dMh&" + 
                    "bpolys=ZaZEDaOiBUu&" + 
                    "clipGeometry=Q5Pl&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bpolys=QIT&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bboxes=IT&" + 
                    "bcircles=RgvNJ&" + 
                    "filter=hSDUmauR&" + 
                    "filter2=0xJOM7yNOUgq7&" + 
                    "format=json&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/density
    * 2 - (400) GET:/elements/perimeter/groupBy/key
    * 3 - (400) POST:/contributions/latest/geometry
    */
    @Test(timeout = 60000)
    public void test_1088() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bcircles=c_zSu_SjI&" + 
                    "filter=d&" + 
                    "format=m5ZTlBx5AZnS9&" + 
                    "showMetadata=M0&" + 
                    "timeout=Epc26")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "bcircles=jKHhG8cYgG&" + 
                    "bpolys=Set8GRc1_Zq9&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=json&" + 
                    "groupByKeys=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/latest/geometry?" + 
                    "bboxes=&" + 
                    "bcircles=uFZwh4q6Ieoc_Q5u&" + 
                    "bpolys=mSIA&" + 
                    "clipGeometry=CRMAdsy08PdDubzG&" + 
                    "filter=&" + 
                    "properties=WC&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/key
    * 2 - (400) POST:/users/count/groupBy/key
    * 3 - (400) GET:/users/count/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_1089() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "bboxes=Ydn9qK3fZnj&" + 
                    "bcircles=o0tH1d4YB5gtLdJP&" + 
                    "bpolys=9D3&" + 
                    "contributionType=NA&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKeys=TQWR")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "format=yCdhWNshqf&" + 
                    "groupByKeys=J2z&" + 
                    "showMetadata=MTPswKmN4wkjir&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/key?" + 
                    "contributionType=PFSNYZb&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKeys=1&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/geometry
    * 2 - (400) GET:/elements/length/density
    * 3 - (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1090() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=31&" + 
                    "clipGeometry=9uSh8KCAJfDUY&" + 
                    "properties=A6viQOOjJ6v6Y&" + 
                    "showMetadata=jwW9keU1AqQNB&" + 
                    "time=FFK0RlIQQE3rR&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=7ukypOlv6TuZpJi&" + 
                    "time=34TnaCdJ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=6Uu2up&" + 
                    "filter=stxF&" + 
                    "groupByKey=AUG&" + 
                    "groupByValues=4766932.83&" + 
                    "showMetadata=we_SKnfwsd&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density/groupBy/tag
    * 2 - (400) POST:/users/count/density/groupBy/tag
    * 3 - (400) GET:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1091() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=WmJC13u4ru&" + 
                    "filter=Qv7Vf4Y4JnbVNI&" + 
                    "format=EP6uCMiU4ocN&" + 
                    "groupByKey=lizV2z6ikC89&" + 
                    "groupByValues=718314.9&" + 
                    "showMetadata=TFZZarvlSQvw04")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bpolys=zt0&" + 
                    "groupByKey=iCr5&" + 
                    "showMetadata=kXDz37WcdQ&" + 
                    "time=MultiPolygon&" + 
                    "timeout=l6uiG5uchpnlftC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=gihUDC2pcYSM&" + 
                    "contributionType=Acn&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=yDlvd1p&" + 
                    "showMetadata=KHPWDv5gLF")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/groupBy/type
    * 2 - (400) POST:/elements/count/density
    * 3 - (400) GET:/elements/length/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1092() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/type?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=hI373j3jzMjnDM&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=rhiZ5q2bM9u&" + 
                    "bcircles=J&" + 
                    "bpolys=&" + 
                    "filter=bxsxK3")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/tag?" + 
                    "format=33Tubyp8N_nc0RQC&" + 
                    "groupByKey=&" + 
                    "groupByValues=4766932.83")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/density/groupBy/boundary
    * 2 - (400) GET:/elements/count/density/groupBy/tag
    * 3 - (400) GET:/users/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1093() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "bboxes=WLldeMm80m&" + 
                    "bcircles=816hjJ2&" + 
                    "bpolys=asaeNaAsbDo&" + 
                    "showMetadata=&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bpolys=XStiXX&" + 
                    "filter=4y&" + 
                    "groupByKey=fLDVLkIeaY&" + 
                    "groupByValues=718314.9&" + 
                    "showMetadata=i_Y6bOsA0yUnOhm&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/type?" + 
                    "bpolys=&" + 
                    "contributionType=x5ZGVn3h31Sj&" + 
                    "filter=_e&" + 
                    "showMetadata=s6oqIxb70XWnTkV&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density/groupBy/boundary
    * 2 - (400) POST:/elements/perimeter/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/length/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1094() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bpolys=d6he8Dkw1&" + 
                    "filter=Kuiw&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=jNCUyYg3Tr&" + 
                    "filter=6YQ20&" + 
                    "groupByKey=h7N_GEQr&" + 
                    "groupByValues=4.617347922E7&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=okJrSdbFK7f&" + 
                    "filter=3SclEr&" + 
                    "showMetadata=3r9KF8UfRwaC&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/perimeter/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1095() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "filter=&" + 
                    "groupByKey=yPBk&" + 
                    "showMetadata=nVwuURh")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=DJWiWLZv9&" + 
                    "bcircles=VMEU2iHUt8iV2&" + 
                    "bpolys=3l&" + 
                    "format=F7Qu8w4BdPrHu&" + 
                    "groupByKey=lajfZ3QmzCUv4Nq&" + 
                    "groupByValues=xJmGXECw65pJm&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=ZKVJ&" + 
                    "format=json&" + 
                    "groupByKey=QL4b5ZaYPmK&" + 
                    "groupByValues=687909.51&" + 
                    "showMetadata=2iNT0xdh2&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density
    * 2 - (400) POST:/elements/length/ratio
    * 3 - (400) POST:/elements/length/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1096() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density?" + 
                    "bpolys=70js&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "showMetadata=Y6ONOeS9Q2hQtX&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bboxes=c2TAWDoPgYmn&" + 
                    "bpolys=Y&" + 
                    "filter2=h_H6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bcircles=_r&" + 
                    "bpolys=hJPSVr_lvwyx&" + 
                    "filter=y4FcCENXL7TwQD&" + 
                    "groupByKey=PQOUoW1zciY&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/groupBy/key
    * 2 - (400) GET:/elements/geometry
    * 3 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1097() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/key?" + 
                    "filter=Rg8PVRUicoL&" + 
                    "groupByKeys=UyzpDWduq8ElG&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=bMPJ&" + 
                    "bpolys=&" + 
                    "groupByKey=zR8KC&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=Jy7GYIQxQV&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/count/density/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/area/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1098() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "filter=SOBCdDSRGy&" + 
                    "groupByKey=lmPRyeu_td&" + 
                    "showMetadata=EeEa58IRvgmC5bQ")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=lRBXmjBzoCGJtVV&" + 
                    "filter=eoSsWVR&" + 
                    "groupByKey=building&" + 
                    "groupByValues=130239.01")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/boundary?" + 
                    "bboxes=iw8_WuX4s&" + 
                    "bcircles=6c&" + 
                    "format=oE&" + 
                    "showMetadata=h71e6357hryH&" + 
                    "timeout=7Te6")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count
    * 2 - (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/elements/area/ratio
    */
    @Test(timeout = 60000)
    public void test_1099() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count?" + 
                    "bcircles=FzX&" + 
                    "contributionType=uiVmK&" + 
                    "time=vogwFijxOtCFnXx2")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bpolys=&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=zy2AOHlapVKqKBV&" + 
                    "groupByKey=nV4dPxsM&" + 
                    "groupByValues=718314.9")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bcircles=MQq3cje&" + 
                    "filter2=j5Xn&" + 
                    "format=&" + 
                    "showMetadata=tABLegpWIqi")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/area/ratio/groupBy/boundary
    * 3 - (400) GET:/elements/count
    */
    @Test(timeout = 60000)
    public void test_1100() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=Lus4AF&" + 
                    "bpolys=KIzSlLi&" + 
                    "filter=gSuB_2OC0j&" + 
                    "format=bM2k_DifROd&" + 
                    "groupByKey=5weL90l0UubS&" + 
                    "groupByValues=8797443.19&" + 
                    "showMetadata=DZtkopCnLKWD&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=tkfbSW2fyD")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "filter2=Q267KnSTHCKah&" + 
                    "showMetadata=BfNWRw8TKnV5x&" + 
                    "time=k&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count?" + 
                    "bboxes=&" + 
                    "bpolys=CLFY50Ol4c&" + 
                    "showMetadata=smegZGjY8GMk8&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/tag
    * 2 - (400) POST:/users/count/groupBy/tag
    * 3 - (400) GET:/users/count/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1101() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bpolys=NShv0cYex&" + 
                    "filter=WHh2C9djgX0I54vH&" + 
                    "groupByKey=Lluz7of&" + 
                    "groupByValues=743636.1&" + 
                    "showMetadata=o&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=MeXdV&" + 
                    "bcircles=GOmOim&" + 
                    "contributionType=kBA774f&" + 
                    "format=Em6i4Cjm7M&" + 
                    "groupByKey=yxrYAz0W7&" + 
                    "groupByValues=3.737603603E7&" + 
                    "showMetadata=AmapkXSLSgxJ3UI6&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bboxes=O8RyJC5SlPrL&" + 
                    "bpolys=a&" + 
                    "contributionType=T6&" + 
                    "groupByKey=building&" + 
                    "groupByValues=130239.01&" + 
                    "showMetadata=U2CDCObyVzz")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/count/groupBy/key
    * 2 - (400) GET:/elements/area/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/density
    */
    @Test(timeout = 60000)
    public void test_1102() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/key?" + 
                    "bboxes=2&" + 
                    "bcircles=&" + 
                    "format=Em6&" + 
                    "groupByKeys=building&" + 
                    "showMetadata=w&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=h2&" + 
                    "bpolys=0&" + 
                    "groupByKey=YP5RYLv6CkrQFbM&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bboxes=CA0jy&" + 
                    "bcircles=NBNoZwYt&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/count/groupBy/type
    * 3 - (400) GET:/users/count/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1103() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=qYnWnGHRJJR&" + 
                    "format=uhnG9&" + 
                    "groupByKey=y9hin14&" + 
                    "groupByValues=h9&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/groupBy/type?" + 
                    "bcircles=W7ZZ&" + 
                    "bpolys=i9ZcMv5PwCyTUdG&" + 
                    "filter=&" + 
                    "format=Z4z&" + 
                    "showMetadata=VqgMCyDv5xfCy6&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/boundary?" + 
                    "bboxes=t3ge2LvX&" + 
                    "bcircles=7_32d1A8M&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=CBpxB&" + 
                    "showMetadata=aZKt7&" + 
                    "time=P1bq_5_OixMf&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/length/ratio
    * 3 - (400) POST:/elements/perimeter/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1104() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=b&" + 
                    "bpolys=CyI8rQPcWJdKQdAp&" + 
                    "filter=b76Vli_QdLeh&" + 
                    "format=Dxtq2&" + 
                    "groupByKey=WRzxaNKYyQea61f6&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bboxes=b6qeRH8kOM1IS&" + 
                    "bcircles=2ph3HXA6Xxk&" + 
                    "bpolys=&" + 
                    "filter2=exrd&" + 
                    "format=json&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/type?" + 
                    "bboxes=7z6tVyFzV6hBp4&" + 
                    "bcircles=IzzGm0pIzgZ0rU2L&" + 
                    "filter=wjstfFp4A2dxZ&" + 
                    "format=64viI")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/ratio/groupBy/boundary
    * 2 - (400) POST:/elements/length/ratio
    * 3 - (400) GET:/elements/count/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1105() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bcircles=3hMBgnLQvUvXs&" + 
                    "bpolys=otNwg0SJCYcnu&" + 
                    "format=QBrZ9vlKS_d0os&" + 
                    "showMetadata=6DDS0ul&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/ratio?" + 
                    "bboxes=l4_hGZa_38V4&" + 
                    "bpolys=20cRrNpQOVoVVAz&" + 
                    "filter=wLS&" + 
                    "filter2=q&" + 
                    "format=X8GEXsFlX9xaXuW&" + 
                    "timeout=AxO2lZStEkC")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=wWb&" + 
                    "bpolys=Ds3B6sPo9eoF&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "groupByKey=JvU4DE0ElNvKY&" + 
                    "time=MultiPolygon&" + 
                    "timeout=sKd0ix5eLm")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/contributions/centroid
    * 2 - (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    * 3 - (400) POST:/contributions/count/density
    */
    @Test(timeout = 60000)
    public void test_1106() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/centroid?" + 
                    "bpolys=_Ym42K7wcf3mrTP&" + 
                    "clipGeometry=&" + 
                    "filter=30y5HhUJG0WJJQe&" + 
                    "time=MultiPolygon&" + 
                    "timeout=zbuYYnXc68")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=vbayd&" + 
                    "bcircles=uvJ0ItjbOh&" + 
                    "bpolys=PYcNM4YtUNaj&" + 
                    "filter=qyWog62LM&" + 
                    "format=etP7twWl2OreRBFx&" + 
                    "groupByKey=BCA&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/contributions/count/density?" + 
                    "bcircles=KVYK&" + 
                    "filter=bR&" + 
                    "format=Jh2C9Ynf&" + 
                    "showMetadata=n55G0zS&" + 
                    "time=hKrTETiHlpMTwWl2")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/count/density/groupBy/boundary
    * 2 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_1107() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "bboxes=sYSZzTbmIN0kbF&" + 
                    "bcircles=M&" + 
                    "contributionType=&" + 
                    "filter=oTW&" + 
                    "format=json&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=e&" + 
                    "filter=jTbhDhF&" + 
                    "format=Uyf&" + 
                    "groupByKey=emlQ&" + 
                    "showMetadata=271mED9D8&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bcircles=IbIiLViyyvonOq1&" + 
                    "bpolys=H4NGc3wn&" + 
                    "clipGeometry=GZMYO9&" + 
                    "filter=s9DqnZZtsFswjLl&" + 
                    "properties=yY2xCJB&" + 
                    "time=Wxwq0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/geometry
    * 2 - (400) POST:/elements/length/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1108() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=DbS3mw1HlneX&" + 
                    "properties=tags&" + 
                    "showMetadata=IfSQXfBLHze&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/tag?" + 
                    "bcircles=9otyJ007vxGxVv&" + 
                    "bpolys=r6vHabKI7fkH6tI&" + 
                    "groupByKey=Jek2FiIs&" + 
                    "showMetadata=L3dsNR8ggL&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=7PHGGDn66vNFS")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=&" + 
                    "bcircles=fSZI0WFrcNXo&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/contributions/latest/count
    * 2 - (400) POST:/elements/count/density/groupBy/tag
    * 3 - (400) POST:/elementsFullHistory/bbox
    */
    @Test(timeout = 60000)
    public void test_1109() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/count?" + 
                    "bboxes=E25R46A&" + 
                    "bcircles=C52Me&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=BXJv&" + 
                    "bpolys=jcGM620dFD&" + 
                    "format=WEjO9ShuesZCC3i4&" + 
                    "groupByKey=86&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bboxes=cL&" + 
                    "bcircles=4nPIeIdH5kHEztG&" + 
                    "clipGeometry=_KCOMoDbwebQ&" + 
                    "filter=nWU2ZL&" + 
                    "properties=nuG8jR&" + 
                    "showMetadata=2MvmH54hm8mo&" + 
                    "time=w")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elementsFullHistory/bbox
    * 2 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/users/count
    */
    @Test(timeout = 60000)
    public void test_1110() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elementsFullHistory/bbox?" + 
                    "bpolys=kaGJmvGostDPcUf5&" + 
                    "clipGeometry=true&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bpolys=G&" + 
                    "groupByKey=l8xvPNb2MU&" + 
                    "groupByValues=3367.16&" + 
                    "timeout=nAnMKtwvlZrO")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count?" + 
                    "bcircles=xpWbpHh&" + 
                    "bpolys=hj&" + 
                    "contributionType=GlQp7XjYtoFHzv5Q&" + 
                    "format=zo_hdDV&" + 
                    "showMetadata=S7r7lLSiZvaj&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/area/density/groupBy/tag
    * 2 - (400) POST:/elements/area/density/groupBy/tag
    * 3 - (400) GET:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1111() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bpolys=1y_BM3XdA&" + 
                    "groupByKey=building&" + 
                    "groupByValues=130239.01&" + 
                    "showMetadata=Br3Mua")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "filter=buJCEQ3fXCXmGdjg&" + 
                    "format=qXiSZGkvuKlh&" + 
                    "groupByKey=yRNjTEjk_TbKY&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=Q1y9S_kenwsPCv2&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=ExLeaaYaMsyyL&" + 
                    "groupByKey=i3Qgikzl&" + 
                    "groupByValues=76772.71&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/count/groupBy/tag
    * 3 - (400) GET:/elements/count/density/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1112() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=_GxGeIOmACgRBpps&" + 
                    "bcircles=QNxUE7xvGWfI9E_&" + 
                    "groupByKey=X14aG3o6A4&" + 
                    "groupByValues=O9UJ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/groupBy/tag?" + 
                    "bpolys=ikMOkQW8&" + 
                    "format=2yCpUWSNEoL1VIvN&" + 
                    "groupByKey=5zgkragtHJU7vEu&" + 
                    "groupByValues=ssvI0p2iyK8mwEB8&" + 
                    "showMetadata=qjc1jL9X&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bpolys=WGY0wFN&" + 
                    "filter=FBjtVCp7_Is8JLWU&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=21xhi")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area/density/groupBy/tag
    * 3 - (400) GET:/elements/area
    */
    @Test(timeout = 60000)
    public void test_1113() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=4e&" + 
                    "bcircles=E&" + 
                    "filter=q8n&" + 
                    "groupByKey=QBQ7_u&" + 
                    "showMetadata=zEdt0G4jp0m1s&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "bboxes=R5KU&" + 
                    "bcircles=vuwpE6X&" + 
                    "bpolys=nl_kP_sCDl&" + 
                    "filter=javD3G&" + 
                    "format=meb6&" + 
                    "groupByKey=5OKLIY_aIuc&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "format=HSm&" + 
                    "showMetadata=I&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/ratio
    * 2 - (400) GET:/elements/area/density/groupBy/tag
    * 3 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1114() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio?" + 
                    "bcircles=GQiM6lUL0oWqWf&" + 
                    "bpolys=1Ak3QGO0QJguQKh&" + 
                    "filter=jquS&" + 
                    "filter2=geometry%3Apolygon+and+building%3Dhouse&" + 
                    "showMetadata=PAYq_ydksGAqJrW&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "groupByKey=AqTvyQ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=gsf&" + 
                    "filter=LFzjUuVewL9Yrlij&" + 
                    "groupByKey=rt_WbaA_TwcXL2&" + 
                    "showMetadata=D3&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/count/density/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/length/ratio/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1115() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=K&" + 
                    "filter=PaNvijf8&" + 
                    "format=q0eQpciJmMc&" + 
                    "groupByKey=7&" + 
                    "groupByValues=1771.28")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=tx5D4whMfVXjK_n&" + 
                    "filter=hOBFT&" + 
                    "format=f&" + 
                    "groupByKey=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/ratio/groupBy/boundary?" + 
                    "bcircles=mVgCWV9i8o&" + 
                    "filter2=sQCzsYSHPLAmTF5&" + 
                    "showMetadata=2EdJmRJ0t1&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/perimeter/ratio
    * 3 - (400) GET:/contributions/latest/centroid
    */
    @Test(timeout = 60000)
    public void test_1116() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=zk3jT&" + 
                    "bcircles=ot&" + 
                    "groupByKey=&" + 
                    "timeout=o7wNgWv3E1c")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bcircles=qvLTUvnc&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=LFp610nW89hxiYf0&" + 
                    "showMetadata=Tsj5o3xJ5a54dYb&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/latest/centroid?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bpolys=xgc0zaLkF&" + 
                    "time=o&" + 
                    "timeout=")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/contributions/count/density/groupBy/boundary
    * 3 - (400) POST:/elements/length/groupBy/key
    */
    @Test(timeout = 60000)
    public void test_1117() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=X72&" + 
                    "format=json&" + 
                    "groupByKey=building")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/count/density/groupBy/boundary?" + 
                    "contributionType=u47tYhugngmluTrf&" + 
                    "filter=sMX9g3p")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=aIAKN&" + 
                    "bcircles=Gb0OIWl&" + 
                    "groupByKeys=VW0srQr&" + 
                    "showMetadata=ce07be")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/length/groupBy/boundary/groupBy/tag
    * 2 - (400) POST:/elements/area/groupBy/boundary/groupBy/tag
    * 3 - (400) GET:/elements/perimeter/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1118() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/boundary/groupBy/tag?" + 
                    "bboxes=&" + 
                    "bcircles=2cE49j7neV&" + 
                    "format=v7SMsXGhi&" + 
                    "groupByKey=j&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary/groupBy/tag?" + 
                    "bcircles=yJdN5&" + 
                    "filter=pGVy2WRvzjh2q&" + 
                    "groupByKey=x3Y0c&" + 
                    "groupByValues=3.737603603E7&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/tag?" + 
                    "bboxes=1AftqKe&" + 
                    "filter=2mHNRi13c&" + 
                    "groupByKey=ec_&" + 
                    "groupByValues=698802.99&" + 
                    "showMetadata=M")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/users/count/density/groupBy/tag
    * 2 - (400) GET:/elements/length/groupBy/key
    * 3 - (400) POST:/elements/area/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1119() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bcircles=ILfEvguAiQNNh&" + 
                    "bpolys=1&" + 
                    "format=rAB5b3avIKnK&" + 
                    "groupByKey=w&" + 
                    "showMetadata=jv2o&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/groupBy/key?" + 
                    "bboxes=lOUK&" + 
                    "format=json&" + 
                    "groupByKeys=j_&" + 
                    "showMetadata=JvxzG5JK")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/density/groupBy/tag?" + 
                    "filter=Y13LQt5k_Anscf&" + 
                    "groupByKey=bhjba7t1zGwBHb9O&" + 
                    "groupByValues=718314.9&" + 
                    "showMetadata=1GTmx59WKFfM7bJ&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/groupBy/tag
    * 2 - (400) GET:/elements/area/ratio/groupBy/boundary
    * 3 - (400) POST:/elements/perimeter/density/groupBy/boundary/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1120() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/groupBy/tag?" + 
                    "bboxes=pmP0&" + 
                    "bcircles=7Up7JEPrRclz&" + 
                    "bpolys=djQ33LeoUWqrb&" + 
                    "groupByKey=&" + 
                    "groupByValues=0.0&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/ratio/groupBy/boundary?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "bcircles=AuXCBC&" + 
                    "bpolys=8luHg6GgeBfNp&" + 
                    "filter=geometry%3Apolygon+and+building%3D*&" + 
                    "filter2=PuAUTsLtOZE4uJp&" + 
                    "showMetadata=OXc2")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary/groupBy/tag?" + 
                    "filter=&" + 
                    "format=json&" + 
                    "groupByKey=jGO&" + 
                    "time=MultiPolygon&" + 
                    "timeout=FH_f4qNYFH")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/groupBy/type
    * 2 - (400) POST:/elements/count/density
    * 3 - (400) POST:/elements/perimeter/density
    * 4 - (400) GET:/elements/perimeter/density/groupBy/boundary
    */
    @Test(timeout = 60000)
    public void test_1121() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=GRd9OSVO1&" + 
                    "bpolys=kg9FKwt&" + 
                    "contributionType=SKIRRr1y&" + 
                    "showMetadata=3Jt8")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/count/density?" + 
                    "bboxes=HSU&" + 
                    "filter=X_PJ80R0jEjw&" + 
                    "format=yu9NyqLHeeN&" + 
                    "showMetadata=m&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/density?" + 
                    "bcircles=QgtiWBCmcf&" + 
                    "bpolys=gr4uxAnAToAJO2dH&" + 
                    "format=Ot&" + 
                    "showMetadata=ONsGxG4Gvsk&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/density/groupBy/boundary?" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=Mbrts9&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/type
    * 2 - (400) GET:/elements/area
    * 3 - (400) POST:/elements/length/groupBy/boundary
    * 4 - (400) GET:/users/count/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1122() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/type?" + 
                    "bboxes=y&" + 
                    "bpolys=Aw3ugqAI9htbTRT&" + 
                    "filter=zK57nxaHX6OzHvDv&" + 
                    "format=JWqzc_&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area?" + 
                    "bcircles=J5UBD12MamaNU&" + 
                    "bpolys=U_YvvdQw3BjXk5p&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/groupBy/boundary?" + 
                    "bcircles=6&" + 
                    "format=YM4QXovI4cUPjz&" + 
                    "showMetadata=4v168jA")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/type?" + 
                    "bboxes=hzFtDTxyZwMMpF&" + 
                    "filter=ow8bWlGJ6Fsf&" + 
                    "timeout=MppFHOV5UruN")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/perimeter/groupBy/type
    * 2 - (400) GET:/elements/length/density/groupBy/boundary
    * 3 - (400) GET:/elements/geometry
    * 4 - (400) GET:/users/count/density/groupBy/tag
    */
    @Test(timeout = 60000)
    public void test_1123() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bboxes=&" + 
                    "bcircles=a8QRax&" + 
                    "bpolys=iwGF2m3Gu3lP5&" + 
                    "format=WFnaJMsCp5D67&" + 
                    "showMetadata=ejOvLFiQPRcxXO&" + 
                    "time=2014-01-01%2F2017-01-01%2FP1Y")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/length/density/groupBy/boundary?" + 
                    "bboxes=OziD0icKQ&" + 
                    "bcircles=dRMl0o&" + 
                    "bpolys=zg&" + 
                    "filter=fq&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/geometry?" + 
                    "bboxes=q_RCyULcRHJh1UKK&" + 
                    "filter=PVuZ44EQYERnY&" + 
                    "properties=vxWi9f&" + 
                    "showMetadata=EBWI6K1e4Y80fMA&" + 
                    "time=MultiPolygon&" + 
                    "timeout=ZwsTnT3aCh_7IV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The properties parameter of this resource can only contain the values 'tags' and/or 'metadata' and/or 'unclipped'."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=0pJPj4F5MrIg&" + 
                    "filter=wJru0sc9NRNk8P&" + 
                    "groupByKey=pR3ZcDD&" + 
                    "showMetadata=aT&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/elements/length/density/groupBy/boundary/groupBy/tag
    * 2 - (400) GET:/elements/count/density/groupBy/type
    * 3 - (400) POST:/elements/area/groupBy/key
    * 4 - (400) GET:/elements/perimeter/ratio
    */
    @Test(timeout = 60000)
    public void test_1124() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/length/density/groupBy/boundary/groupBy/tag?" + 
                    "bpolys=&" + 
                    "groupByKey=lWDt0y44B2Uli&" + 
                    "showMetadata=p&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("You need to define one of the boundary parameters (bboxes, bcircles, bpolys)."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/density/groupBy/type?" + 
                    "bcircles=l&" + 
                    "format=jZGcBx_R&" + 
                    "time=MultiPolygon&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/key?" + 
                    "bboxes=tWsxBg5PL&" + 
                    "format=QPYz2zSaq0xmhtBx&" + 
                    "groupByKeys=6bVvwM4jakV")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/perimeter/ratio?" + 
                    "bpolys=NfkrXRoY3sTJq2A&" + 
                    "filter2=QcH2&" + 
                    "format=json")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) GET:/elements/area/density/groupBy/type
    * 2 - (400) GET:/users/count/groupBy/tag
    * 3 - (400) POST:/elements/area/groupBy/boundary
    * 4 - (400) GET:/contributions/centroid
    */
    @Test(timeout = 60000)
    public void test_1125() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/area/density/groupBy/type?" + 
                    "filter=phApPXB6kkhOW&" + 
                    "timeout=dMVWwbiRMLj")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The given timeout does not fit to its format. Please give one value in seconds and use a point as the decimal delimiter, if needed."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/users/count/groupBy/tag?" + 
                    "bcircles=KqiW&" + 
                    "bpolys=0smdpwJ6quJBS&" + 
                    "filter=type%3Away+and+natural%3D*&" + 
                    "format=EIkGjX6hSm&" + 
                    "groupByKey=A&" + 
                    "time=BUT2ROy7mBx9Bi&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/area/groupBy/boundary?" + 
                    "bboxes=d71qG9&" + 
                    "bcircles=W5BWORBd62&" + 
                    "bpolys=GaX6p&" + 
                    "filter=cxelh0src1K&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/centroid?" + 
                    "bpolys=SAGldMIVDXh&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
    }
    
    
    /**
    * Calls:
    * 1 - (400) POST:/users/count/density/groupBy/tag
    * 2 - (400) GET:/contributions/bbox
    * 3 - (400) GET:/elements/count/ratio/groupBy/boundary
    * 4 - (400) POST:/elements/perimeter/groupBy/type
    */
    @Test(timeout = 60000)
    public void test_1126() throws Exception {
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/users/count/density/groupBy/tag?" + 
                    "bboxes=rC&" + 
                    "groupByKey=tbM6p&" + 
                    "groupByValues=aFOV1dSh&" + 
                    "showMetadata=GxhIWGvv")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/contributions/bbox?" + 
                    "bboxes=8.67%2C49.39%2C8.71%2C49.42&" + 
                    "clipGeometry=a&" + 
                    "time=6YhoKrpr")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("The provided time parameter is not ISO-8601 conform."));
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/elements/count/ratio/groupBy/boundary?" + 
                    "bboxes=hq&" + 
                    "bpolys=P4PewZ1&" + 
                    "filter2=PX&" + 
                    "time=MultiPolygon")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
        
        given().accept("application/json")
                .post(baseUrlOfSut + "/elements/perimeter/groupBy/type?" + 
                    "bcircles=CgkcjKhnX21&" + 
                    "bpolys=1vjq&" + 
                    "filter=Wg&" + 
                    "showMetadata=o_Iblv&" + 
                    "timeout=100.0")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(400.0))
                .body("'message'", containsString("Your provided boundary parameter (bboxes, bcircles, or bpolys) does not fit its format, or you defined more than one boundary parameter."));
    }


}
